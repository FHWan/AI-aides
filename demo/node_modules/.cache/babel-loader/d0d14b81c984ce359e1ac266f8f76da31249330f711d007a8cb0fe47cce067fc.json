{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array-buffer.detached.js\";\nimport \"core-js/modules/es.array-buffer.transfer.js\";\nimport \"core-js/modules/es.array-buffer.transfer-to-fixed-length.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.every.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.set.difference.v2.js\";\nimport \"core-js/modules/es.set.intersection.v2.js\";\nimport \"core-js/modules/es.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/es.set.is-subset-of.v2.js\";\nimport \"core-js/modules/es.set.is-superset-of.v2.js\";\nimport \"core-js/modules/es.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/es.set.union.v2.js\";\nimport \"core-js/modules/es.typed-array.to-reversed.js\";\nimport \"core-js/modules/es.typed-array.to-sorted.js\";\nimport \"core-js/modules/es.typed-array.with.js\";\nimport \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nvar __pow = Math.pow;\nvar __async = (__this, __arguments, generator) => {\n  return new Promise((resolve, reject) => {\n    var fulfilled = value => {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var rejected = value => {\n      try {\n        step(generator.throw(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var step = x => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);\n    step((generator = generator.apply(__this, __arguments)).next());\n  });\n};\nimport { EventEmitter, url } from \"@pixi/utils\";\nimport { Matrix, Transform, Point, ObservablePoint } from \"@pixi/math\";\nimport { Texture } from \"@pixi/core\";\nimport { Container } from \"@pixi/display\";\nclass CubismBreath {\n  constructor() {\n    this._breathParameters = [];\n    this._currentTime = 0;\n  }\n  static create() {\n    return new CubismBreath();\n  }\n  setParameters(breathParameters) {\n    this._breathParameters = breathParameters;\n  }\n  getParameters() {\n    return this._breathParameters;\n  }\n  updateParameters(model, deltaTimeSeconds) {\n    this._currentTime += deltaTimeSeconds;\n    const t = this._currentTime * 2 * 3.14159;\n    for (let i = 0; i < this._breathParameters.length; ++i) {\n      const data = this._breathParameters[i];\n      model.addParameterValueById(data.parameterId, data.offset + data.peak * Math.sin(t / data.cycle), data.weight);\n    }\n  }\n}\nclass BreathParameterData {\n  constructor(parameterId, offset, peak, cycle, weight) {\n    this.parameterId = parameterId == void 0 ? void 0 : parameterId;\n    this.offset = offset == void 0 ? 0 : offset;\n    this.peak = peak == void 0 ? 0 : peak;\n    this.cycle = cycle == void 0 ? 0 : cycle;\n    this.weight = weight == void 0 ? 0 : weight;\n  }\n}\nconst _CubismEyeBlink = class {\n  static create(modelSetting) {\n    return new _CubismEyeBlink(modelSetting);\n  }\n  setBlinkingInterval(blinkingInterval) {\n    this._blinkingIntervalSeconds = blinkingInterval;\n  }\n  setBlinkingSetting(closing, closed, opening) {\n    this._closingSeconds = closing;\n    this._closedSeconds = closed;\n    this._openingSeconds = opening;\n  }\n  setParameterIds(parameterIds) {\n    this._parameterIds = parameterIds;\n  }\n  getParameterIds() {\n    return this._parameterIds;\n  }\n  updateParameters(model, deltaTimeSeconds) {\n    this._userTimeSeconds += deltaTimeSeconds;\n    let parameterValue;\n    let t = 0;\n    switch (this._blinkingState) {\n      case EyeState.EyeState_Closing:\n        t = (this._userTimeSeconds - this._stateStartTimeSeconds) / this._closingSeconds;\n        if (t >= 1) {\n          t = 1;\n          this._blinkingState = EyeState.EyeState_Closed;\n          this._stateStartTimeSeconds = this._userTimeSeconds;\n        }\n        parameterValue = 1 - t;\n        break;\n      case EyeState.EyeState_Closed:\n        t = (this._userTimeSeconds - this._stateStartTimeSeconds) / this._closedSeconds;\n        if (t >= 1) {\n          this._blinkingState = EyeState.EyeState_Opening;\n          this._stateStartTimeSeconds = this._userTimeSeconds;\n        }\n        parameterValue = 0;\n        break;\n      case EyeState.EyeState_Opening:\n        t = (this._userTimeSeconds - this._stateStartTimeSeconds) / this._openingSeconds;\n        if (t >= 1) {\n          t = 1;\n          this._blinkingState = EyeState.EyeState_Interval;\n          this._nextBlinkingTime = this.determinNextBlinkingTiming();\n        }\n        parameterValue = t;\n        break;\n      case EyeState.EyeState_Interval:\n        if (this._nextBlinkingTime < this._userTimeSeconds) {\n          this._blinkingState = EyeState.EyeState_Closing;\n          this._stateStartTimeSeconds = this._userTimeSeconds;\n        }\n        parameterValue = 1;\n        break;\n      case EyeState.EyeState_First:\n      default:\n        this._blinkingState = EyeState.EyeState_Interval;\n        this._nextBlinkingTime = this.determinNextBlinkingTiming();\n        parameterValue = 1;\n        break;\n    }\n    if (!_CubismEyeBlink.CloseIfZero) {\n      parameterValue = -parameterValue;\n    }\n    for (let i = 0; i < this._parameterIds.length; ++i) {\n      model.setParameterValueById(this._parameterIds[i], parameterValue);\n    }\n  }\n  constructor(modelSetting) {\n    var _a, _b;\n    this._blinkingState = EyeState.EyeState_First;\n    this._nextBlinkingTime = 0;\n    this._stateStartTimeSeconds = 0;\n    this._blinkingIntervalSeconds = 4;\n    this._closingSeconds = 0.1;\n    this._closedSeconds = 0.05;\n    this._openingSeconds = 0.15;\n    this._userTimeSeconds = 0;\n    this._parameterIds = [];\n    if (modelSetting == null) {\n      return;\n    }\n    this._parameterIds = (_b = (_a = modelSetting.getEyeBlinkParameters()) == null ? void 0 : _a.slice()) != null ? _b : this._parameterIds;\n  }\n  determinNextBlinkingTiming() {\n    const r = Math.random();\n    return this._userTimeSeconds + r * (2 * this._blinkingIntervalSeconds - 1);\n  }\n};\nlet CubismEyeBlink = _CubismEyeBlink;\nCubismEyeBlink.CloseIfZero = true;\nvar EyeState = /* @__PURE__ */(EyeState2 => {\n  EyeState2[EyeState2[\"EyeState_First\"] = 0] = \"EyeState_First\";\n  EyeState2[EyeState2[\"EyeState_Interval\"] = 1] = \"EyeState_Interval\";\n  EyeState2[EyeState2[\"EyeState_Closing\"] = 2] = \"EyeState_Closing\";\n  EyeState2[EyeState2[\"EyeState_Closed\"] = 3] = \"EyeState_Closed\";\n  EyeState2[EyeState2[\"EyeState_Opening\"] = 4] = \"EyeState_Opening\";\n  return EyeState2;\n})(EyeState || {});\nconst Epsilon = 1e-3;\nconst DefaultFadeInSeconds = 0.5;\nclass CubismPose {\n  static create(pose3json) {\n    const ret = new CubismPose();\n    if (typeof pose3json.FadeInTime === \"number\") {\n      ret._fadeTimeSeconds = pose3json.FadeInTime;\n      if (ret._fadeTimeSeconds <= 0) {\n        ret._fadeTimeSeconds = DefaultFadeInSeconds;\n      }\n    }\n    const poseListInfo = pose3json.Groups;\n    const poseCount = poseListInfo.length;\n    for (let poseIndex = 0; poseIndex < poseCount; ++poseIndex) {\n      const idListInfo = poseListInfo[poseIndex];\n      const idCount = idListInfo.length;\n      let groupCount = 0;\n      for (let groupIndex = 0; groupIndex < idCount; ++groupIndex) {\n        const partInfo = idListInfo[groupIndex];\n        const partData = new PartData();\n        partData.partId = partInfo.Id;\n        const linkListInfo = partInfo.Link;\n        if (linkListInfo) {\n          const linkCount = linkListInfo.length;\n          for (let linkIndex = 0; linkIndex < linkCount; ++linkIndex) {\n            const linkPart = new PartData();\n            linkPart.partId = linkListInfo[linkIndex];\n            partData.link.push(linkPart);\n          }\n        }\n        ret._partGroups.push(partData);\n        ++groupCount;\n      }\n      ret._partGroupCounts.push(groupCount);\n    }\n    return ret;\n  }\n  updateParameters(model, deltaTimeSeconds) {\n    if (model != this._lastModel) {\n      this.reset(model);\n    }\n    this._lastModel = model;\n    if (deltaTimeSeconds < 0) {\n      deltaTimeSeconds = 0;\n    }\n    let beginIndex = 0;\n    for (let i = 0; i < this._partGroupCounts.length; i++) {\n      const partGroupCount = this._partGroupCounts[i];\n      this.doFade(model, deltaTimeSeconds, beginIndex, partGroupCount);\n      beginIndex += partGroupCount;\n    }\n    this.copyPartOpacities(model);\n  }\n  reset(model) {\n    let beginIndex = 0;\n    for (let i = 0; i < this._partGroupCounts.length; ++i) {\n      const groupCount = this._partGroupCounts[i];\n      for (let j = beginIndex; j < beginIndex + groupCount; ++j) {\n        this._partGroups[j].initialize(model);\n        const partsIndex = this._partGroups[j].partIndex;\n        const paramIndex = this._partGroups[j].parameterIndex;\n        if (partsIndex < 0) {\n          continue;\n        }\n        model.setPartOpacityByIndex(partsIndex, j == beginIndex ? 1 : 0);\n        model.setParameterValueByIndex(paramIndex, j == beginIndex ? 1 : 0);\n        for (let k = 0; k < this._partGroups[j].link.length; ++k) {\n          this._partGroups[j].link[k].initialize(model);\n        }\n      }\n      beginIndex += groupCount;\n    }\n  }\n  copyPartOpacities(model) {\n    for (let groupIndex = 0; groupIndex < this._partGroups.length; ++groupIndex) {\n      const partData = this._partGroups[groupIndex];\n      if (partData.link.length == 0) {\n        continue;\n      }\n      const partIndex = this._partGroups[groupIndex].partIndex;\n      const opacity = model.getPartOpacityByIndex(partIndex);\n      for (let linkIndex = 0; linkIndex < partData.link.length; ++linkIndex) {\n        const linkPart = partData.link[linkIndex];\n        const linkPartIndex = linkPart.partIndex;\n        if (linkPartIndex < 0) {\n          continue;\n        }\n        model.setPartOpacityByIndex(linkPartIndex, opacity);\n      }\n    }\n  }\n  doFade(model, deltaTimeSeconds, beginIndex, partGroupCount) {\n    let visiblePartIndex = -1;\n    let newOpacity = 1;\n    const phi = 0.5;\n    const backOpacityThreshold = 0.15;\n    for (let i = beginIndex; i < beginIndex + partGroupCount; ++i) {\n      const partIndex = this._partGroups[i].partIndex;\n      const paramIndex = this._partGroups[i].parameterIndex;\n      if (model.getParameterValueByIndex(paramIndex) > Epsilon) {\n        if (visiblePartIndex >= 0) {\n          break;\n        }\n        visiblePartIndex = i;\n        newOpacity = model.getPartOpacityByIndex(partIndex);\n        newOpacity += deltaTimeSeconds / this._fadeTimeSeconds;\n        if (newOpacity > 1) {\n          newOpacity = 1;\n        }\n      }\n    }\n    if (visiblePartIndex < 0) {\n      visiblePartIndex = 0;\n      newOpacity = 1;\n    }\n    for (let i = beginIndex; i < beginIndex + partGroupCount; ++i) {\n      const partsIndex = this._partGroups[i].partIndex;\n      if (visiblePartIndex == i) {\n        model.setPartOpacityByIndex(partsIndex, newOpacity);\n      } else {\n        let opacity = model.getPartOpacityByIndex(partsIndex);\n        let a1;\n        if (newOpacity < phi) {\n          a1 = newOpacity * (phi - 1) / phi + 1;\n        } else {\n          a1 = (1 - newOpacity) * phi / (1 - phi);\n        }\n        const backOpacity = (1 - a1) * (1 - newOpacity);\n        if (backOpacity > backOpacityThreshold) {\n          a1 = 1 - backOpacityThreshold / (1 - newOpacity);\n        }\n        if (opacity > a1) {\n          opacity = a1;\n        }\n        model.setPartOpacityByIndex(partsIndex, opacity);\n      }\n    }\n  }\n  constructor() {\n    this._fadeTimeSeconds = DefaultFadeInSeconds;\n    this._lastModel = void 0;\n    this._partGroups = [];\n    this._partGroupCounts = [];\n  }\n}\nclass PartData {\n  constructor(v) {\n    this.parameterIndex = 0;\n    this.partIndex = 0;\n    this.partId = \"\";\n    this.link = [];\n    if (v != void 0) {\n      this.assignment(v);\n    }\n  }\n  assignment(v) {\n    this.partId = v.partId;\n    this.link = v.link.map(link => link.clone());\n    return this;\n  }\n  initialize(model) {\n    this.parameterIndex = model.getParameterIndex(this.partId);\n    this.partIndex = model.getPartIndex(this.partId);\n    model.setParameterValueByIndex(this.parameterIndex, 1);\n  }\n  clone() {\n    const clonePartData = new PartData();\n    clonePartData.partId = this.partId;\n    clonePartData.parameterIndex = this.parameterIndex;\n    clonePartData.partIndex = this.partIndex;\n    clonePartData.link = this.link.map(link => link.clone());\n    return clonePartData;\n  }\n}\nclass CubismVector2 {\n  constructor(x, y) {\n    this.x = x || 0;\n    this.y = y || 0;\n  }\n  add(vector2) {\n    const ret = new CubismVector2(0, 0);\n    ret.x = this.x + vector2.x;\n    ret.y = this.y + vector2.y;\n    return ret;\n  }\n  substract(vector2) {\n    const ret = new CubismVector2(0, 0);\n    ret.x = this.x - vector2.x;\n    ret.y = this.y - vector2.y;\n    return ret;\n  }\n  multiply(vector2) {\n    const ret = new CubismVector2(0, 0);\n    ret.x = this.x * vector2.x;\n    ret.y = this.y * vector2.y;\n    return ret;\n  }\n  multiplyByScaler(scalar) {\n    return this.multiply(new CubismVector2(scalar, scalar));\n  }\n  division(vector2) {\n    const ret = new CubismVector2(0, 0);\n    ret.x = this.x / vector2.x;\n    ret.y = this.y / vector2.y;\n    return ret;\n  }\n  divisionByScalar(scalar) {\n    return this.division(new CubismVector2(scalar, scalar));\n  }\n  getLength() {\n    return Math.sqrt(this.x * this.x + this.y * this.y);\n  }\n  getDistanceWith(a) {\n    return Math.sqrt((this.x - a.x) * (this.x - a.x) + (this.y - a.y) * (this.y - a.y));\n  }\n  dot(a) {\n    return this.x * a.x + this.y * a.y;\n  }\n  normalize() {\n    const length = Math.pow(this.x * this.x + this.y * this.y, 0.5);\n    this.x = this.x / length;\n    this.y = this.y / length;\n  }\n  isEqual(rhs) {\n    return this.x == rhs.x && this.y == rhs.y;\n  }\n  isNotEqual(rhs) {\n    return !this.isEqual(rhs);\n  }\n}\nconst _CubismMath = class {\n  static range(value, min, max) {\n    if (value < min) {\n      value = min;\n    } else if (value > max) {\n      value = max;\n    }\n    return value;\n  }\n  static sin(x) {\n    return Math.sin(x);\n  }\n  static cos(x) {\n    return Math.cos(x);\n  }\n  static abs(x) {\n    return Math.abs(x);\n  }\n  static sqrt(x) {\n    return Math.sqrt(x);\n  }\n  static cbrt(x) {\n    if (x === 0) {\n      return x;\n    }\n    let cx = x;\n    const isNegativeNumber = cx < 0;\n    if (isNegativeNumber) {\n      cx = -cx;\n    }\n    let ret;\n    if (cx === Infinity) {\n      ret = Infinity;\n    } else {\n      ret = Math.exp(Math.log(cx) / 3);\n      ret = (cx / (ret * ret) + 2 * ret) / 3;\n    }\n    return isNegativeNumber ? -ret : ret;\n  }\n  static getEasingSine(value) {\n    if (value < 0) {\n      return 0;\n    } else if (value > 1) {\n      return 1;\n    }\n    return 0.5 - 0.5 * this.cos(value * Math.PI);\n  }\n  static max(left, right) {\n    return left > right ? left : right;\n  }\n  static min(left, right) {\n    return left > right ? right : left;\n  }\n  static degreesToRadian(degrees) {\n    return degrees / 180 * Math.PI;\n  }\n  static radianToDegrees(radian) {\n    return radian * 180 / Math.PI;\n  }\n  static directionToRadian(from, to) {\n    const q1 = Math.atan2(to.y, to.x);\n    const q2 = Math.atan2(from.y, from.x);\n    let ret = q1 - q2;\n    while (ret < -Math.PI) {\n      ret += Math.PI * 2;\n    }\n    while (ret > Math.PI) {\n      ret -= Math.PI * 2;\n    }\n    return ret;\n  }\n  static directionToDegrees(from, to) {\n    const radian = this.directionToRadian(from, to);\n    let degree = this.radianToDegrees(radian);\n    if (to.x - from.x > 0) {\n      degree = -degree;\n    }\n    return degree;\n  }\n  static radianToDirection(totalAngle) {\n    const ret = new CubismVector2();\n    ret.x = this.sin(totalAngle);\n    ret.y = this.cos(totalAngle);\n    return ret;\n  }\n  static quadraticEquation(a, b, c) {\n    if (this.abs(a) < _CubismMath.Epsilon) {\n      if (this.abs(b) < _CubismMath.Epsilon) {\n        return -c;\n      }\n      return -c / b;\n    }\n    return -(b + this.sqrt(b * b - 4 * a * c)) / (2 * a);\n  }\n  static cardanoAlgorithmForBezier(a, b, c, d) {\n    if (this.sqrt(a) < _CubismMath.Epsilon) {\n      return this.range(this.quadraticEquation(b, c, d), 0, 1);\n    }\n    const ba = b / a;\n    const ca = c / a;\n    const da = d / a;\n    const p = (3 * ca - ba * ba) / 3;\n    const p3 = p / 3;\n    const q = (2 * ba * ba * ba - 9 * ba * ca + 27 * da) / 27;\n    const q2 = q / 2;\n    const discriminant = q2 * q2 + p3 * p3 * p3;\n    const center = 0.5;\n    const threshold = center + 0.01;\n    if (discriminant < 0) {\n      const mp3 = -p / 3;\n      const mp33 = mp3 * mp3 * mp3;\n      const r = this.sqrt(mp33);\n      const t = -q / (2 * r);\n      const cosphi = this.range(t, -1, 1);\n      const phi = Math.acos(cosphi);\n      const crtr = this.cbrt(r);\n      const t1 = 2 * crtr;\n      const root12 = t1 * this.cos(phi / 3) - ba / 3;\n      if (this.abs(root12 - center) < threshold) {\n        return this.range(root12, 0, 1);\n      }\n      const root2 = t1 * this.cos((phi + 2 * Math.PI) / 3) - ba / 3;\n      if (this.abs(root2 - center) < threshold) {\n        return this.range(root2, 0, 1);\n      }\n      const root3 = t1 * this.cos((phi + 4 * Math.PI) / 3) - ba / 3;\n      return this.range(root3, 0, 1);\n    }\n    if (discriminant == 0) {\n      let u12;\n      if (q2 < 0) {\n        u12 = this.cbrt(-q2);\n      } else {\n        u12 = -this.cbrt(q2);\n      }\n      const root12 = 2 * u12 - ba / 3;\n      if (this.abs(root12 - center) < threshold) {\n        return this.range(root12, 0, 1);\n      }\n      const root2 = -u12 - ba / 3;\n      return this.range(root2, 0, 1);\n    }\n    const sd = this.sqrt(discriminant);\n    const u1 = this.cbrt(sd - q2);\n    const v1 = this.cbrt(sd + q2);\n    const root1 = u1 - v1 - ba / 3;\n    return this.range(root1, 0, 1);\n  }\n  constructor() {}\n};\nlet CubismMath = _CubismMath;\nCubismMath.Epsilon = 1e-5;\nclass CubismMatrix44 {\n  constructor() {\n    this._tr = new Float32Array(16);\n    this.loadIdentity();\n  }\n  static multiply(a, b, dst) {\n    const c = new Float32Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);\n    const n = 4;\n    for (let i = 0; i < n; ++i) {\n      for (let j = 0; j < n; ++j) {\n        for (let k = 0; k < n; ++k) {\n          c[j + i * 4] += a[k + i * 4] * b[j + k * 4];\n        }\n      }\n    }\n    for (let i = 0; i < 16; ++i) {\n      dst[i] = c[i];\n    }\n  }\n  loadIdentity() {\n    const c = new Float32Array([1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]);\n    this.setMatrix(c);\n  }\n  setMatrix(tr) {\n    for (let i = 0; i < 16; ++i) {\n      this._tr[i] = tr[i];\n    }\n  }\n  getArray() {\n    return this._tr;\n  }\n  getScaleX() {\n    return this._tr[0];\n  }\n  getScaleY() {\n    return this._tr[5];\n  }\n  getTranslateX() {\n    return this._tr[12];\n  }\n  getTranslateY() {\n    return this._tr[13];\n  }\n  transformX(src) {\n    return this._tr[0] * src + this._tr[12];\n  }\n  transformY(src) {\n    return this._tr[5] * src + this._tr[13];\n  }\n  invertTransformX(src) {\n    return (src - this._tr[12]) / this._tr[0];\n  }\n  invertTransformY(src) {\n    return (src - this._tr[13]) / this._tr[5];\n  }\n  translateRelative(x, y) {\n    const tr1 = new Float32Array([1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, x, y, 0, 1]);\n    CubismMatrix44.multiply(tr1, this._tr, this._tr);\n  }\n  translate(x, y) {\n    this._tr[12] = x;\n    this._tr[13] = y;\n  }\n  translateX(x) {\n    this._tr[12] = x;\n  }\n  translateY(y) {\n    this._tr[13] = y;\n  }\n  scaleRelative(x, y) {\n    const tr1 = new Float32Array([x, 0, 0, 0, 0, y, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]);\n    CubismMatrix44.multiply(tr1, this._tr, this._tr);\n  }\n  scale(x, y) {\n    this._tr[0] = x;\n    this._tr[5] = y;\n  }\n  multiplyByMatrix(m) {\n    CubismMatrix44.multiply(m.getArray(), this._tr, this._tr);\n  }\n  clone() {\n    const cloneMatrix = new CubismMatrix44();\n    for (let i = 0; i < this._tr.length; i++) {\n      cloneMatrix._tr[i] = this._tr[i];\n    }\n    return cloneMatrix;\n  }\n}\nclass CubismRenderer {\n  initialize(model) {\n    this._model = model;\n  }\n  drawModel() {\n    if (this.getModel() == null) return;\n    this.doDrawModel();\n  }\n  setMvpMatrix(matrix44) {\n    this._mvpMatrix4x4.setMatrix(matrix44.getArray());\n  }\n  getMvpMatrix() {\n    return this._mvpMatrix4x4;\n  }\n  setModelColor(red, green, blue, alpha) {\n    if (red < 0) {\n      red = 0;\n    } else if (red > 1) {\n      red = 1;\n    }\n    if (green < 0) {\n      green = 0;\n    } else if (green > 1) {\n      green = 1;\n    }\n    if (blue < 0) {\n      blue = 0;\n    } else if (blue > 1) {\n      blue = 1;\n    }\n    if (alpha < 0) {\n      alpha = 0;\n    } else if (alpha > 1) {\n      alpha = 1;\n    }\n    this._modelColor.R = red;\n    this._modelColor.G = green;\n    this._modelColor.B = blue;\n    this._modelColor.A = alpha;\n  }\n  getModelColor() {\n    return Object.assign({}, this._modelColor);\n  }\n  setIsPremultipliedAlpha(enable) {\n    this._isPremultipliedAlpha = enable;\n  }\n  isPremultipliedAlpha() {\n    return this._isPremultipliedAlpha;\n  }\n  setIsCulling(culling) {\n    this._isCulling = culling;\n  }\n  isCulling() {\n    return this._isCulling;\n  }\n  setAnisotropy(n) {\n    this._anisortopy = n;\n  }\n  getAnisotropy() {\n    return this._anisortopy;\n  }\n  getModel() {\n    return this._model;\n  }\n  constructor() {\n    this._isCulling = false;\n    this._isPremultipliedAlpha = false;\n    this._anisortopy = 0;\n    this._modelColor = new CubismTextureColor();\n    this._mvpMatrix4x4 = new CubismMatrix44();\n    this._mvpMatrix4x4.loadIdentity();\n  }\n}\nvar CubismBlendMode = /* @__PURE__ */(CubismBlendMode2 => {\n  CubismBlendMode2[CubismBlendMode2[\"CubismBlendMode_Normal\"] = 0] = \"CubismBlendMode_Normal\";\n  CubismBlendMode2[CubismBlendMode2[\"CubismBlendMode_Additive\"] = 1] = \"CubismBlendMode_Additive\";\n  CubismBlendMode2[CubismBlendMode2[\"CubismBlendMode_Multiplicative\"] = 2] = \"CubismBlendMode_Multiplicative\";\n  return CubismBlendMode2;\n})(CubismBlendMode || {});\nclass CubismTextureColor {\n  constructor() {\n    this.R = 1;\n    this.G = 1;\n    this.B = 1;\n    this.A = 1;\n  }\n}\nlet s_isStarted = false;\nlet s_isInitialized = false;\nlet s_option = void 0;\nconst Constant = {\n  vertexOffset: 0,\n  vertexStep: 2\n};\nclass CubismFramework {\n  static startUp(option) {\n    if (s_isStarted) {\n      CubismLogInfo(\"CubismFramework.startUp() is already done.\");\n      return s_isStarted;\n    }\n    if (Live2DCubismCore._isStarted) {\n      s_isStarted = true;\n      return true;\n    }\n    Live2DCubismCore._isStarted = true;\n    s_option = option;\n    if (s_option) {\n      Live2DCubismCore.Logging.csmSetLogFunction(s_option.logFunction);\n    }\n    s_isStarted = true;\n    if (s_isStarted) {\n      const version = Live2DCubismCore.Version.csmGetVersion();\n      const major = (version & 4278190080) >> 24;\n      const minor = (version & 16711680) >> 16;\n      const patch = version & 65535;\n      const versionNumber = version;\n      CubismLogInfo(`Live2D Cubism Core version: {0}.{1}.{2} ({3})`, (\"00\" + major).slice(-2), (\"00\" + minor).slice(-2), (\"0000\" + patch).slice(-4), versionNumber);\n    }\n    CubismLogInfo(\"CubismFramework.startUp() is complete.\");\n    return s_isStarted;\n  }\n  static cleanUp() {\n    s_isStarted = false;\n    s_isInitialized = false;\n    s_option = void 0;\n  }\n  static initialize() {\n    if (!s_isStarted) {\n      CubismLogWarning(\"CubismFramework is not started.\");\n      return;\n    }\n    if (s_isInitialized) {\n      CubismLogWarning(\"CubismFramework.initialize() skipped, already initialized.\");\n      return;\n    }\n    s_isInitialized = true;\n    CubismLogInfo(\"CubismFramework.initialize() is complete.\");\n  }\n  static dispose() {\n    if (!s_isStarted) {\n      CubismLogWarning(\"CubismFramework is not started.\");\n      return;\n    }\n    if (!s_isInitialized) {\n      CubismLogWarning(\"CubismFramework.dispose() skipped, not initialized.\");\n      return;\n    }\n    CubismRenderer.staticRelease();\n    s_isInitialized = false;\n    CubismLogInfo(\"CubismFramework.dispose() is complete.\");\n  }\n  static isStarted() {\n    return s_isStarted;\n  }\n  static isInitialized() {\n    return s_isInitialized;\n  }\n  static coreLogFunction(message) {\n    if (!Live2DCubismCore.Logging.csmGetLogFunction()) {\n      return;\n    }\n    Live2DCubismCore.Logging.csmGetLogFunction()(message);\n  }\n  static getLoggingLevel() {\n    if (s_option != null) {\n      return s_option.loggingLevel;\n    }\n    return LogLevel.LogLevel_Off;\n  }\n  constructor() {}\n}\nvar LogLevel = /* @__PURE__ */(LogLevel2 => {\n  LogLevel2[LogLevel2[\"LogLevel_Verbose\"] = 0] = \"LogLevel_Verbose\";\n  LogLevel2[LogLevel2[\"LogLevel_Debug\"] = 1] = \"LogLevel_Debug\";\n  LogLevel2[LogLevel2[\"LogLevel_Info\"] = 2] = \"LogLevel_Info\";\n  LogLevel2[LogLevel2[\"LogLevel_Warning\"] = 3] = \"LogLevel_Warning\";\n  LogLevel2[LogLevel2[\"LogLevel_Error\"] = 4] = \"LogLevel_Error\";\n  LogLevel2[LogLevel2[\"LogLevel_Off\"] = 5] = \"LogLevel_Off\";\n  return LogLevel2;\n})(LogLevel || {});\nconst CSM_ASSERT = () => {};\nfunction CubismLogVerbose(fmt, ...args) {\n  CubismDebug.print(LogLevel.LogLevel_Verbose, \"[CSM][V]\" + fmt + \"\\n\", args);\n}\nfunction CubismLogDebug(fmt, ...args) {\n  CubismDebug.print(LogLevel.LogLevel_Debug, \"[CSM][D]\" + fmt + \"\\n\", args);\n}\nfunction CubismLogInfo(fmt, ...args) {\n  CubismDebug.print(LogLevel.LogLevel_Info, \"[CSM][I]\" + fmt + \"\\n\", args);\n}\nfunction CubismLogWarning(fmt, ...args) {\n  CubismDebug.print(LogLevel.LogLevel_Warning, \"[CSM][W]\" + fmt + \"\\n\", args);\n}\nfunction CubismLogError(fmt, ...args) {\n  CubismDebug.print(LogLevel.LogLevel_Error, \"[CSM][E]\" + fmt + \"\\n\", args);\n}\nclass CubismDebug {\n  static print(logLevel, format, args) {\n    if (logLevel < CubismFramework.getLoggingLevel()) {\n      return;\n    }\n    const logPrint = CubismFramework.coreLogFunction;\n    if (!logPrint) return;\n    const buffer = format.replace(/{(\\d+)}/g, (m, k) => {\n      return args[k];\n    });\n    logPrint(buffer);\n  }\n  static dumpBytes(logLevel, data, length) {\n    for (let i = 0; i < length; i++) {\n      if (i % 16 == 0 && i > 0) this.print(logLevel, \"\\n\");else if (i % 8 == 0 && i > 0) this.print(logLevel, \"  \");\n      this.print(logLevel, \"{0} \", [data[i] & 255]);\n    }\n    this.print(logLevel, \"\\n\");\n  }\n  constructor() {}\n}\nclass CubismModel {\n  update() {\n    this._model.update();\n    this._model.drawables.resetDynamicFlags();\n  }\n  getCanvasWidth() {\n    if (this._model == null) {\n      return 0;\n    }\n    return this._model.canvasinfo.CanvasWidth / this._model.canvasinfo.PixelsPerUnit;\n  }\n  getCanvasHeight() {\n    if (this._model == null) {\n      return 0;\n    }\n    return this._model.canvasinfo.CanvasHeight / this._model.canvasinfo.PixelsPerUnit;\n  }\n  saveParameters() {\n    const parameterCount = this._model.parameters.count;\n    const savedParameterCount = this._savedParameters.length;\n    for (let i = 0; i < parameterCount; ++i) {\n      if (i < savedParameterCount) {\n        this._savedParameters[i] = this._parameterValues[i];\n      } else {\n        this._savedParameters.push(this._parameterValues[i]);\n      }\n    }\n  }\n  getModel() {\n    return this._model;\n  }\n  getPartIndex(partId) {\n    let partIndex;\n    const partCount = this._model.parts.count;\n    for (partIndex = 0; partIndex < partCount; ++partIndex) {\n      if (partId == this._partIds[partIndex]) {\n        return partIndex;\n      }\n    }\n    if (partId in this._notExistPartId) {\n      return this._notExistPartId[partId];\n    }\n    partIndex = partCount + this._notExistPartId.length;\n    this._notExistPartId[partId] = partIndex;\n    this._notExistPartOpacities[partIndex] = 0;\n    return partIndex;\n  }\n  getPartCount() {\n    return this._model.parts.count;\n  }\n  setPartOpacityByIndex(partIndex, opacity) {\n    if (partIndex in this._notExistPartOpacities) {\n      this._notExistPartOpacities[partIndex] = opacity;\n      return;\n    }\n    CSM_ASSERT(0 <= partIndex && partIndex < this.getPartCount());\n    this._partOpacities[partIndex] = opacity;\n  }\n  setPartOpacityById(partId, opacity) {\n    const index = this.getPartIndex(partId);\n    if (index < 0) {\n      return;\n    }\n    this.setPartOpacityByIndex(index, opacity);\n  }\n  getPartOpacityByIndex(partIndex) {\n    if (partIndex in this._notExistPartOpacities) {\n      return this._notExistPartOpacities[partIndex];\n    }\n    CSM_ASSERT(0 <= partIndex && partIndex < this.getPartCount());\n    return this._partOpacities[partIndex];\n  }\n  getPartOpacityById(partId) {\n    const index = this.getPartIndex(partId);\n    if (index < 0) {\n      return 0;\n    }\n    return this.getPartOpacityByIndex(index);\n  }\n  getParameterIndex(parameterId) {\n    let parameterIndex;\n    const idCount = this._model.parameters.count;\n    for (parameterIndex = 0; parameterIndex < idCount; ++parameterIndex) {\n      if (parameterId != this._parameterIds[parameterIndex]) {\n        continue;\n      }\n      return parameterIndex;\n    }\n    if (parameterId in this._notExistParameterId) {\n      return this._notExistParameterId[parameterId];\n    }\n    parameterIndex = this._model.parameters.count + Object.keys(this._notExistParameterId).length;\n    this._notExistParameterId[parameterId] = parameterIndex;\n    this._notExistParameterValues[parameterIndex] = 0;\n    return parameterIndex;\n  }\n  getParameterCount() {\n    return this._model.parameters.count;\n  }\n  getParameterMaximumValue(parameterIndex) {\n    return this._model.parameters.maximumValues[parameterIndex];\n  }\n  getParameterMinimumValue(parameterIndex) {\n    return this._model.parameters.minimumValues[parameterIndex];\n  }\n  getParameterDefaultValue(parameterIndex) {\n    return this._model.parameters.defaultValues[parameterIndex];\n  }\n  getParameterValueByIndex(parameterIndex) {\n    if (parameterIndex in this._notExistParameterValues) {\n      return this._notExistParameterValues[parameterIndex];\n    }\n    CSM_ASSERT(0 <= parameterIndex && parameterIndex < this.getParameterCount());\n    return this._parameterValues[parameterIndex];\n  }\n  getParameterValueById(parameterId) {\n    const parameterIndex = this.getParameterIndex(parameterId);\n    return this.getParameterValueByIndex(parameterIndex);\n  }\n  setParameterValueByIndex(parameterIndex, value, weight = 1) {\n    if (parameterIndex in this._notExistParameterValues) {\n      this._notExistParameterValues[parameterIndex] = weight == 1 ? value : this._notExistParameterValues[parameterIndex] * (1 - weight) + value * weight;\n      return;\n    }\n    CSM_ASSERT(0 <= parameterIndex && parameterIndex < this.getParameterCount());\n    if (this._model.parameters.maximumValues[parameterIndex] < value) {\n      value = this._model.parameters.maximumValues[parameterIndex];\n    }\n    if (this._model.parameters.minimumValues[parameterIndex] > value) {\n      value = this._model.parameters.minimumValues[parameterIndex];\n    }\n    this._parameterValues[parameterIndex] = weight == 1 ? value : this._parameterValues[parameterIndex] = this._parameterValues[parameterIndex] * (1 - weight) + value * weight;\n  }\n  setParameterValueById(parameterId, value, weight = 1) {\n    const index = this.getParameterIndex(parameterId);\n    this.setParameterValueByIndex(index, value, weight);\n  }\n  addParameterValueByIndex(parameterIndex, value, weight = 1) {\n    this.setParameterValueByIndex(parameterIndex, this.getParameterValueByIndex(parameterIndex) + value * weight);\n  }\n  addParameterValueById(parameterId, value, weight = 1) {\n    const index = this.getParameterIndex(parameterId);\n    this.addParameterValueByIndex(index, value, weight);\n  }\n  multiplyParameterValueById(parameterId, value, weight = 1) {\n    const index = this.getParameterIndex(parameterId);\n    this.multiplyParameterValueByIndex(index, value, weight);\n  }\n  multiplyParameterValueByIndex(parameterIndex, value, weight = 1) {\n    this.setParameterValueByIndex(parameterIndex, this.getParameterValueByIndex(parameterIndex) * (1 + (value - 1) * weight));\n  }\n  getDrawableIds() {\n    return this._drawableIds.slice();\n  }\n  getDrawableIndex(drawableId) {\n    const drawableCount = this._model.drawables.count;\n    for (let drawableIndex = 0; drawableIndex < drawableCount; ++drawableIndex) {\n      if (this._drawableIds[drawableIndex] == drawableId) {\n        return drawableIndex;\n      }\n    }\n    return -1;\n  }\n  getDrawableCount() {\n    return this._model.drawables.count;\n  }\n  getDrawableId(drawableIndex) {\n    return this._model.drawables.ids[drawableIndex];\n  }\n  getDrawableRenderOrders() {\n    return this._model.drawables.renderOrders;\n  }\n  getDrawableTextureIndices(drawableIndex) {\n    return this._model.drawables.textureIndices[drawableIndex];\n  }\n  getDrawableDynamicFlagVertexPositionsDidChange(drawableIndex) {\n    const dynamicFlags = this._model.drawables.dynamicFlags;\n    return Live2DCubismCore.Utils.hasVertexPositionsDidChangeBit(dynamicFlags[drawableIndex]);\n  }\n  getDrawableVertexIndexCount(drawableIndex) {\n    return this._model.drawables.indexCounts[drawableIndex];\n  }\n  getDrawableVertexCount(drawableIndex) {\n    return this._model.drawables.vertexCounts[drawableIndex];\n  }\n  getDrawableVertices(drawableIndex) {\n    return this.getDrawableVertexPositions(drawableIndex);\n  }\n  getDrawableVertexIndices(drawableIndex) {\n    return this._model.drawables.indices[drawableIndex];\n  }\n  getDrawableVertexPositions(drawableIndex) {\n    return this._model.drawables.vertexPositions[drawableIndex];\n  }\n  getDrawableVertexUvs(drawableIndex) {\n    return this._model.drawables.vertexUvs[drawableIndex];\n  }\n  getDrawableOpacity(drawableIndex) {\n    return this._model.drawables.opacities[drawableIndex];\n  }\n  getDrawableCulling(drawableIndex) {\n    const constantFlags = this._model.drawables.constantFlags;\n    return !Live2DCubismCore.Utils.hasIsDoubleSidedBit(constantFlags[drawableIndex]);\n  }\n  getDrawableBlendMode(drawableIndex) {\n    const constantFlags = this._model.drawables.constantFlags;\n    return Live2DCubismCore.Utils.hasBlendAdditiveBit(constantFlags[drawableIndex]) ? CubismBlendMode.CubismBlendMode_Additive : Live2DCubismCore.Utils.hasBlendMultiplicativeBit(constantFlags[drawableIndex]) ? CubismBlendMode.CubismBlendMode_Multiplicative : CubismBlendMode.CubismBlendMode_Normal;\n  }\n  getDrawableInvertedMaskBit(drawableIndex) {\n    const constantFlags = this._model.drawables.constantFlags;\n    return Live2DCubismCore.Utils.hasIsInvertedMaskBit(constantFlags[drawableIndex]);\n  }\n  getDrawableMasks() {\n    return this._model.drawables.masks;\n  }\n  getDrawableMaskCounts() {\n    return this._model.drawables.maskCounts;\n  }\n  isUsingMasking() {\n    for (let d = 0; d < this._model.drawables.count; ++d) {\n      if (this._model.drawables.maskCounts[d] <= 0) {\n        continue;\n      }\n      return true;\n    }\n    return false;\n  }\n  getDrawableDynamicFlagIsVisible(drawableIndex) {\n    const dynamicFlags = this._model.drawables.dynamicFlags;\n    return Live2DCubismCore.Utils.hasIsVisibleBit(dynamicFlags[drawableIndex]);\n  }\n  getDrawableDynamicFlagVisibilityDidChange(drawableIndex) {\n    const dynamicFlags = this._model.drawables.dynamicFlags;\n    return Live2DCubismCore.Utils.hasVisibilityDidChangeBit(dynamicFlags[drawableIndex]);\n  }\n  getDrawableDynamicFlagOpacityDidChange(drawableIndex) {\n    const dynamicFlags = this._model.drawables.dynamicFlags;\n    return Live2DCubismCore.Utils.hasOpacityDidChangeBit(dynamicFlags[drawableIndex]);\n  }\n  getDrawableDynamicFlagRenderOrderDidChange(drawableIndex) {\n    const dynamicFlags = this._model.drawables.dynamicFlags;\n    return Live2DCubismCore.Utils.hasRenderOrderDidChangeBit(dynamicFlags[drawableIndex]);\n  }\n  loadParameters() {\n    let parameterCount = this._model.parameters.count;\n    const savedParameterCount = this._savedParameters.length;\n    if (parameterCount > savedParameterCount) {\n      parameterCount = savedParameterCount;\n    }\n    for (let i = 0; i < parameterCount; ++i) {\n      this._parameterValues[i] = this._savedParameters[i];\n    }\n  }\n  initialize() {\n    this._parameterValues = this._model.parameters.values;\n    this._partOpacities = this._model.parts.opacities;\n    this._parameterMaximumValues = this._model.parameters.maximumValues;\n    this._parameterMinimumValues = this._model.parameters.minimumValues;\n    {\n      const parameterIds = this._model.parameters.ids;\n      const parameterCount = this._model.parameters.count;\n      for (let i = 0; i < parameterCount; ++i) {\n        this._parameterIds.push(parameterIds[i]);\n      }\n    }\n    {\n      const partIds = this._model.parts.ids;\n      const partCount = this._model.parts.count;\n      for (let i = 0; i < partCount; ++i) {\n        this._partIds.push(partIds[i]);\n      }\n    }\n    {\n      const drawableIds = this._model.drawables.ids;\n      const drawableCount = this._model.drawables.count;\n      for (let i = 0; i < drawableCount; ++i) {\n        this._drawableIds.push(drawableIds[i]);\n      }\n    }\n  }\n  constructor(model) {\n    this._model = model;\n    this._savedParameters = [];\n    this._parameterIds = [];\n    this._drawableIds = [];\n    this._partIds = [];\n    this._notExistPartId = {};\n    this._notExistParameterId = {};\n    this._notExistParameterValues = {};\n    this._notExistPartOpacities = {};\n    this.initialize();\n  }\n  release() {\n    this._model.release();\n    this._model = void 0;\n  }\n}\nclass CubismMoc {\n  static create(mocBytes) {\n    const moc = Live2DCubismCore.Moc.fromArrayBuffer(mocBytes);\n    if (moc) {\n      return new CubismMoc(moc);\n    }\n    throw new Error(\"Unknown error\");\n  }\n  createModel() {\n    let cubismModel;\n    const model = Live2DCubismCore.Model.fromMoc(this._moc);\n    if (model) {\n      cubismModel = new CubismModel(model);\n      ++this._modelCount;\n      return cubismModel;\n    }\n    throw new Error(\"Unknown error\");\n  }\n  deleteModel(model) {\n    if (model != null) {\n      --this._modelCount;\n    }\n  }\n  constructor(moc) {\n    this._moc = moc;\n    this._modelCount = 0;\n  }\n  release() {\n    this._moc._release();\n    this._moc = void 0;\n  }\n}\nclass CubismModelUserDataJson {\n  constructor(json, size) {\n    this._json = json;\n  }\n  release() {\n    this._json = void 0;\n  }\n  getUserDataCount() {\n    return this._json.Meta.UserDataCount;\n  }\n  getTotalUserDataSize() {\n    return this._json.Meta.TotalUserDataSize;\n  }\n  getUserDataTargetType(i) {\n    return this._json.UserData[i].Target;\n  }\n  getUserDataId(i) {\n    return this._json.UserData[i].Id;\n  }\n  getUserDataValue(i) {\n    return this._json.UserData[i].Value;\n  }\n}\nconst ArtMesh = \"ArtMesh\";\nclass CubismModelUserData {\n  static create(json, size) {\n    const ret = new CubismModelUserData();\n    ret.parseUserData(json, size);\n    return ret;\n  }\n  getArtMeshUserDatas() {\n    return this._artMeshUserDataNode;\n  }\n  parseUserData(data, size) {\n    let json = new CubismModelUserDataJson(data, size);\n    const typeOfArtMesh = ArtMesh;\n    const nodeCount = json.getUserDataCount();\n    for (let i = 0; i < nodeCount; i++) {\n      const addNode = {\n        targetId: json.getUserDataId(i),\n        targetType: json.getUserDataTargetType(i),\n        value: json.getUserDataValue(i)\n      };\n      this._userDataNodes.push(addNode);\n      if (addNode.targetType == typeOfArtMesh) {\n        this._artMeshUserDataNode.push(addNode);\n      }\n    }\n    json.release();\n  }\n  constructor() {\n    this._userDataNodes = [];\n    this._artMeshUserDataNode = [];\n  }\n  release() {\n    this._userDataNodes = null;\n  }\n}\nclass ACubismMotion {\n  constructor() {\n    this._fadeInSeconds = -1;\n    this._fadeOutSeconds = -1;\n    this._weight = 1;\n    this._offsetSeconds = 0;\n    this._firedEventValues = [];\n  }\n  release() {\n    this._weight = 0;\n  }\n  updateParameters(model, motionQueueEntry, userTimeSeconds) {\n    if (!motionQueueEntry.isAvailable() || motionQueueEntry.isFinished()) {\n      return;\n    }\n    if (!motionQueueEntry.isStarted()) {\n      motionQueueEntry.setIsStarted(true);\n      motionQueueEntry.setStartTime(userTimeSeconds - this._offsetSeconds);\n      motionQueueEntry.setFadeInStartTime(userTimeSeconds);\n      const duration = this.getDuration();\n      if (motionQueueEntry.getEndTime() < 0) {\n        motionQueueEntry.setEndTime(duration <= 0 ? -1 : motionQueueEntry.getStartTime() + duration);\n      }\n    }\n    let fadeWeight = this._weight;\n    const fadeIn = this._fadeInSeconds == 0 ? 1 : CubismMath.getEasingSine((userTimeSeconds - motionQueueEntry.getFadeInStartTime()) / this._fadeInSeconds);\n    const fadeOut = this._fadeOutSeconds == 0 || motionQueueEntry.getEndTime() < 0 ? 1 : CubismMath.getEasingSine((motionQueueEntry.getEndTime() - userTimeSeconds) / this._fadeOutSeconds);\n    fadeWeight = fadeWeight * fadeIn * fadeOut;\n    motionQueueEntry.setState(userTimeSeconds, fadeWeight);\n    this.doUpdateParameters(model, userTimeSeconds, fadeWeight, motionQueueEntry);\n    if (motionQueueEntry.getEndTime() > 0 && motionQueueEntry.getEndTime() < userTimeSeconds) {\n      motionQueueEntry.setIsFinished(true);\n    }\n  }\n  setFadeInTime(fadeInSeconds) {\n    this._fadeInSeconds = fadeInSeconds;\n  }\n  setFadeOutTime(fadeOutSeconds) {\n    this._fadeOutSeconds = fadeOutSeconds;\n  }\n  getFadeOutTime() {\n    return this._fadeOutSeconds;\n  }\n  getFadeInTime() {\n    return this._fadeInSeconds;\n  }\n  setWeight(weight) {\n    this._weight = weight;\n  }\n  getWeight() {\n    return this._weight;\n  }\n  getDuration() {\n    return -1;\n  }\n  getLoopDuration() {\n    return -1;\n  }\n  setOffsetTime(offsetSeconds) {\n    this._offsetSeconds = offsetSeconds;\n  }\n  getFiredEvent(beforeCheckTimeSeconds, motionTimeSeconds) {\n    return this._firedEventValues;\n  }\n  setFinishedMotionHandler(onFinishedMotionHandler) {\n    this._onFinishedMotion = onFinishedMotionHandler;\n  }\n  getFinishedMotionHandler() {\n    return this._onFinishedMotion;\n  }\n}\nconst DefaultFadeTime = 1;\nclass CubismExpressionMotion extends ACubismMotion {\n  constructor() {\n    super();\n    this._parameters = [];\n  }\n  static create(json) {\n    const expression = new CubismExpressionMotion();\n    const fadeInTime = json.FadeInTime;\n    const fadeOutTime = json.FadeOutTime;\n    expression.setFadeInTime(fadeInTime !== void 0 ? fadeInTime : DefaultFadeTime);\n    expression.setFadeOutTime(fadeOutTime !== void 0 ? fadeOutTime : DefaultFadeTime);\n    const parameters = json.Parameters || [];\n    for (let i = 0; i < parameters.length; ++i) {\n      const param = parameters[i];\n      const parameterId = param.Id;\n      const value = param.Value;\n      let blendType;\n      switch (param.Blend) {\n        case \"Multiply\":\n          blendType = ExpressionBlendType.ExpressionBlendType_Multiply;\n          break;\n        case \"Overwrite\":\n          blendType = ExpressionBlendType.ExpressionBlendType_Overwrite;\n          break;\n        case \"Add\":\n        default:\n          blendType = ExpressionBlendType.ExpressionBlendType_Add;\n          break;\n      }\n      const item = {\n        parameterId,\n        blendType,\n        value\n      };\n      expression._parameters.push(item);\n    }\n    return expression;\n  }\n  doUpdateParameters(model, userTimeSeconds, weight, motionQueueEntry) {\n    for (let i = 0; i < this._parameters.length; ++i) {\n      const parameter = this._parameters[i];\n      switch (parameter.blendType) {\n        case ExpressionBlendType.ExpressionBlendType_Add:\n          {\n            model.addParameterValueById(parameter.parameterId, parameter.value, weight);\n            break;\n          }\n        case ExpressionBlendType.ExpressionBlendType_Multiply:\n          {\n            model.multiplyParameterValueById(parameter.parameterId, parameter.value, weight);\n            break;\n          }\n        case ExpressionBlendType.ExpressionBlendType_Overwrite:\n          {\n            model.setParameterValueById(parameter.parameterId, parameter.value, weight);\n            break;\n          }\n      }\n    }\n  }\n}\nvar ExpressionBlendType = /* @__PURE__ */(ExpressionBlendType2 => {\n  ExpressionBlendType2[ExpressionBlendType2[\"ExpressionBlendType_Add\"] = 0] = \"ExpressionBlendType_Add\";\n  ExpressionBlendType2[ExpressionBlendType2[\"ExpressionBlendType_Multiply\"] = 1] = \"ExpressionBlendType_Multiply\";\n  ExpressionBlendType2[ExpressionBlendType2[\"ExpressionBlendType_Overwrite\"] = 2] = \"ExpressionBlendType_Overwrite\";\n  return ExpressionBlendType2;\n})(ExpressionBlendType || {});\nvar CubismConfig;\n(CubismConfig2 => {\n  CubismConfig2.supportMoreMaskDivisions = true;\n  CubismConfig2.setOpacityFromMotion = false;\n})(CubismConfig || (CubismConfig = {}));\nvar CubismMotionCurveTarget = /* @__PURE__ */(CubismMotionCurveTarget2 => {\n  CubismMotionCurveTarget2[CubismMotionCurveTarget2[\"CubismMotionCurveTarget_Model\"] = 0] = \"CubismMotionCurveTarget_Model\";\n  CubismMotionCurveTarget2[CubismMotionCurveTarget2[\"CubismMotionCurveTarget_Parameter\"] = 1] = \"CubismMotionCurveTarget_Parameter\";\n  CubismMotionCurveTarget2[CubismMotionCurveTarget2[\"CubismMotionCurveTarget_PartOpacity\"] = 2] = \"CubismMotionCurveTarget_PartOpacity\";\n  return CubismMotionCurveTarget2;\n})(CubismMotionCurveTarget || {});\nvar CubismMotionSegmentType = /* @__PURE__ */(CubismMotionSegmentType2 => {\n  CubismMotionSegmentType2[CubismMotionSegmentType2[\"CubismMotionSegmentType_Linear\"] = 0] = \"CubismMotionSegmentType_Linear\";\n  CubismMotionSegmentType2[CubismMotionSegmentType2[\"CubismMotionSegmentType_Bezier\"] = 1] = \"CubismMotionSegmentType_Bezier\";\n  CubismMotionSegmentType2[CubismMotionSegmentType2[\"CubismMotionSegmentType_Stepped\"] = 2] = \"CubismMotionSegmentType_Stepped\";\n  CubismMotionSegmentType2[CubismMotionSegmentType2[\"CubismMotionSegmentType_InverseStepped\"] = 3] = \"CubismMotionSegmentType_InverseStepped\";\n  return CubismMotionSegmentType2;\n})(CubismMotionSegmentType || {});\nclass CubismMotionPoint {\n  constructor(time = 0, value = 0) {\n    this.time = time;\n    this.value = value;\n  }\n}\nclass CubismMotionSegment {\n  constructor() {\n    this.basePointIndex = 0;\n    this.segmentType = 0;\n  }\n}\nclass CubismMotionCurve {\n  constructor() {\n    this.id = \"\";\n    this.type = 0;\n    this.segmentCount = 0;\n    this.baseSegmentIndex = 0;\n    this.fadeInTime = 0;\n    this.fadeOutTime = 0;\n  }\n}\nclass CubismMotionEvent {\n  constructor() {\n    this.fireTime = 0;\n    this.value = \"\";\n  }\n}\nclass CubismMotionData {\n  constructor() {\n    this.duration = 0;\n    this.loop = false;\n    this.curveCount = 0;\n    this.eventCount = 0;\n    this.fps = 0;\n    this.curves = [];\n    this.segments = [];\n    this.points = [];\n    this.events = [];\n  }\n}\nclass CubismMotionJson {\n  constructor(json) {\n    this._json = json;\n  }\n  release() {\n    this._json = void 0;\n  }\n  getMotionDuration() {\n    return this._json.Meta.Duration;\n  }\n  isMotionLoop() {\n    return this._json.Meta.Loop || false;\n  }\n  getEvaluationOptionFlag(flagType) {\n    if (EvaluationOptionFlag.EvaluationOptionFlag_AreBeziersRistricted == flagType) {\n      return !!this._json.Meta.AreBeziersRestricted;\n    }\n    return false;\n  }\n  getMotionCurveCount() {\n    return this._json.Meta.CurveCount;\n  }\n  getMotionFps() {\n    return this._json.Meta.Fps;\n  }\n  getMotionTotalSegmentCount() {\n    return this._json.Meta.TotalSegmentCount;\n  }\n  getMotionTotalPointCount() {\n    return this._json.Meta.TotalPointCount;\n  }\n  getMotionFadeInTime() {\n    return this._json.Meta.FadeInTime;\n  }\n  getMotionFadeOutTime() {\n    return this._json.Meta.FadeOutTime;\n  }\n  getMotionCurveTarget(curveIndex) {\n    return this._json.Curves[curveIndex].Target;\n  }\n  getMotionCurveId(curveIndex) {\n    return this._json.Curves[curveIndex].Id;\n  }\n  getMotionCurveFadeInTime(curveIndex) {\n    return this._json.Curves[curveIndex].FadeInTime;\n  }\n  getMotionCurveFadeOutTime(curveIndex) {\n    return this._json.Curves[curveIndex].FadeOutTime;\n  }\n  getMotionCurveSegmentCount(curveIndex) {\n    return this._json.Curves[curveIndex].Segments.length;\n  }\n  getMotionCurveSegment(curveIndex, segmentIndex) {\n    return this._json.Curves[curveIndex].Segments[segmentIndex];\n  }\n  getEventCount() {\n    return this._json.Meta.UserDataCount || 0;\n  }\n  getTotalEventValueSize() {\n    return this._json.Meta.TotalUserDataSize;\n  }\n  getEventTime(userDataIndex) {\n    return this._json.UserData[userDataIndex].Time;\n  }\n  getEventValue(userDataIndex) {\n    return this._json.UserData[userDataIndex].Value;\n  }\n}\nvar EvaluationOptionFlag = /* @__PURE__ */(EvaluationOptionFlag2 => {\n  EvaluationOptionFlag2[EvaluationOptionFlag2[\"EvaluationOptionFlag_AreBeziersRistricted\"] = 0] = \"EvaluationOptionFlag_AreBeziersRistricted\";\n  return EvaluationOptionFlag2;\n})(EvaluationOptionFlag || {});\nconst EffectNameEyeBlink = \"EyeBlink\";\nconst EffectNameLipSync = \"LipSync\";\nconst TargetNameModel = \"Model\";\nconst TargetNameParameter = \"Parameter\";\nconst TargetNamePartOpacity = \"PartOpacity\";\nconst UseOldBeziersCurveMotion = false;\nfunction lerpPoints(a, b, t) {\n  const result = new CubismMotionPoint();\n  result.time = a.time + (b.time - a.time) * t;\n  result.value = a.value + (b.value - a.value) * t;\n  return result;\n}\nfunction linearEvaluate(points, time) {\n  let t = (time - points[0].time) / (points[1].time - points[0].time);\n  if (t < 0) {\n    t = 0;\n  }\n  return points[0].value + (points[1].value - points[0].value) * t;\n}\nfunction bezierEvaluate(points, time) {\n  let t = (time - points[0].time) / (points[3].time - points[0].time);\n  if (t < 0) {\n    t = 0;\n  }\n  const p01 = lerpPoints(points[0], points[1], t);\n  const p12 = lerpPoints(points[1], points[2], t);\n  const p23 = lerpPoints(points[2], points[3], t);\n  const p012 = lerpPoints(p01, p12, t);\n  const p123 = lerpPoints(p12, p23, t);\n  return lerpPoints(p012, p123, t).value;\n}\nfunction bezierEvaluateCardanoInterpretation(points, time) {\n  const x = time;\n  const x1 = points[0].time;\n  const x2 = points[3].time;\n  const cx1 = points[1].time;\n  const cx2 = points[2].time;\n  const a = x2 - 3 * cx2 + 3 * cx1 - x1;\n  const b = 3 * cx2 - 6 * cx1 + 3 * x1;\n  const c = 3 * cx1 - 3 * x1;\n  const d = x1 - x;\n  const t = CubismMath.cardanoAlgorithmForBezier(a, b, c, d);\n  const p01 = lerpPoints(points[0], points[1], t);\n  const p12 = lerpPoints(points[1], points[2], t);\n  const p23 = lerpPoints(points[2], points[3], t);\n  const p012 = lerpPoints(p01, p12, t);\n  const p123 = lerpPoints(p12, p23, t);\n  return lerpPoints(p012, p123, t).value;\n}\nfunction steppedEvaluate(points, time) {\n  return points[0].value;\n}\nfunction inverseSteppedEvaluate(points, time) {\n  return points[1].value;\n}\nfunction evaluateCurve(motionData, index, time) {\n  const curve = motionData.curves[index];\n  let target = -1;\n  const totalSegmentCount = curve.baseSegmentIndex + curve.segmentCount;\n  let pointPosition = 0;\n  for (let i = curve.baseSegmentIndex; i < totalSegmentCount; ++i) {\n    pointPosition = motionData.segments[i].basePointIndex + (motionData.segments[i].segmentType == CubismMotionSegmentType.CubismMotionSegmentType_Bezier ? 3 : 1);\n    if (motionData.points[pointPosition].time > time) {\n      target = i;\n      break;\n    }\n  }\n  if (target == -1) {\n    return motionData.points[pointPosition].value;\n  }\n  const segment = motionData.segments[target];\n  return segment.evaluate(motionData.points.slice(segment.basePointIndex), time);\n}\nclass CubismMotion extends ACubismMotion {\n  constructor() {\n    super();\n    this._eyeBlinkParameterIds = [];\n    this._lipSyncParameterIds = [];\n    this._sourceFrameRate = 30;\n    this._loopDurationSeconds = -1;\n    this._isLoop = false;\n    this._isLoopFadeIn = true;\n    this._lastWeight = 0;\n  }\n  static create(json, onFinishedMotionHandler) {\n    const ret = new CubismMotion();\n    ret.parse(json);\n    ret._sourceFrameRate = ret._motionData.fps;\n    ret._loopDurationSeconds = ret._motionData.duration;\n    ret._onFinishedMotion = onFinishedMotionHandler;\n    return ret;\n  }\n  doUpdateParameters(model, userTimeSeconds, fadeWeight, motionQueueEntry) {\n    if (this._modelCurveIdEyeBlink == null) {\n      this._modelCurveIdEyeBlink = EffectNameEyeBlink;\n    }\n    if (this._modelCurveIdLipSync == null) {\n      this._modelCurveIdLipSync = EffectNameLipSync;\n    }\n    let timeOffsetSeconds = userTimeSeconds - motionQueueEntry.getStartTime();\n    if (timeOffsetSeconds < 0) {\n      timeOffsetSeconds = 0;\n    }\n    let lipSyncValue = Number.MAX_VALUE;\n    let eyeBlinkValue = Number.MAX_VALUE;\n    const MaxTargetSize = 64;\n    let lipSyncFlags = 0;\n    let eyeBlinkFlags = 0;\n    if (this._eyeBlinkParameterIds.length > MaxTargetSize) {\n      CubismLogDebug(\"too many eye blink targets : {0}\", this._eyeBlinkParameterIds.length);\n    }\n    if (this._lipSyncParameterIds.length > MaxTargetSize) {\n      CubismLogDebug(\"too many lip sync targets : {0}\", this._lipSyncParameterIds.length);\n    }\n    const tmpFadeIn = this._fadeInSeconds <= 0 ? 1 : CubismMath.getEasingSine((userTimeSeconds - motionQueueEntry.getFadeInStartTime()) / this._fadeInSeconds);\n    const tmpFadeOut = this._fadeOutSeconds <= 0 || motionQueueEntry.getEndTime() < 0 ? 1 : CubismMath.getEasingSine((motionQueueEntry.getEndTime() - userTimeSeconds) / this._fadeOutSeconds);\n    let value;\n    let c, parameterIndex;\n    let time = timeOffsetSeconds;\n    if (this._isLoop) {\n      while (time > this._motionData.duration) {\n        time -= this._motionData.duration;\n      }\n    }\n    const curves = this._motionData.curves;\n    for (c = 0; c < this._motionData.curveCount && curves[c].type == CubismMotionCurveTarget.CubismMotionCurveTarget_Model; ++c) {\n      value = evaluateCurve(this._motionData, c, time);\n      if (curves[c].id == this._modelCurveIdEyeBlink) {\n        eyeBlinkValue = value;\n      } else if (curves[c].id == this._modelCurveIdLipSync) {\n        lipSyncValue = value;\n      }\n    }\n    for (; c < this._motionData.curveCount && curves[c].type == CubismMotionCurveTarget.CubismMotionCurveTarget_Parameter; ++c) {\n      parameterIndex = model.getParameterIndex(curves[c].id);\n      if (parameterIndex == -1) {\n        continue;\n      }\n      const sourceValue = model.getParameterValueByIndex(parameterIndex);\n      value = evaluateCurve(this._motionData, c, time);\n      if (eyeBlinkValue != Number.MAX_VALUE) {\n        for (let i = 0; i < this._eyeBlinkParameterIds.length && i < MaxTargetSize; ++i) {\n          if (this._eyeBlinkParameterIds[i] == curves[c].id) {\n            value *= eyeBlinkValue;\n            eyeBlinkFlags |= 1 << i;\n            break;\n          }\n        }\n      }\n      if (lipSyncValue != Number.MAX_VALUE) {\n        for (let i = 0; i < this._lipSyncParameterIds.length && i < MaxTargetSize; ++i) {\n          if (this._lipSyncParameterIds[i] == curves[c].id) {\n            value += lipSyncValue;\n            lipSyncFlags |= 1 << i;\n            break;\n          }\n        }\n      }\n      let v;\n      if (curves[c].fadeInTime < 0 && curves[c].fadeOutTime < 0) {\n        v = sourceValue + (value - sourceValue) * fadeWeight;\n      } else {\n        let fin;\n        let fout;\n        if (curves[c].fadeInTime < 0) {\n          fin = tmpFadeIn;\n        } else {\n          fin = curves[c].fadeInTime == 0 ? 1 : CubismMath.getEasingSine((userTimeSeconds - motionQueueEntry.getFadeInStartTime()) / curves[c].fadeInTime);\n        }\n        if (curves[c].fadeOutTime < 0) {\n          fout = tmpFadeOut;\n        } else {\n          fout = curves[c].fadeOutTime == 0 || motionQueueEntry.getEndTime() < 0 ? 1 : CubismMath.getEasingSine((motionQueueEntry.getEndTime() - userTimeSeconds) / curves[c].fadeOutTime);\n        }\n        const paramWeight = this._weight * fin * fout;\n        v = sourceValue + (value - sourceValue) * paramWeight;\n      }\n      model.setParameterValueByIndex(parameterIndex, v, 1);\n    }\n    {\n      if (eyeBlinkValue != Number.MAX_VALUE) {\n        for (let i = 0; i < this._eyeBlinkParameterIds.length && i < MaxTargetSize; ++i) {\n          const sourceValue = model.getParameterValueById(this._eyeBlinkParameterIds[i]);\n          if (eyeBlinkFlags >> i & 1) {\n            continue;\n          }\n          const v = sourceValue + (eyeBlinkValue - sourceValue) * fadeWeight;\n          model.setParameterValueById(this._eyeBlinkParameterIds[i], v);\n        }\n      }\n      if (lipSyncValue != Number.MAX_VALUE) {\n        for (let i = 0; i < this._lipSyncParameterIds.length && i < MaxTargetSize; ++i) {\n          const sourceValue = model.getParameterValueById(this._lipSyncParameterIds[i]);\n          if (lipSyncFlags >> i & 1) {\n            continue;\n          }\n          const v = sourceValue + (lipSyncValue - sourceValue) * fadeWeight;\n          model.setParameterValueById(this._lipSyncParameterIds[i], v);\n        }\n      }\n    }\n    for (; c < this._motionData.curveCount && curves[c].type == CubismMotionCurveTarget.CubismMotionCurveTarget_PartOpacity; ++c) {\n      value = evaluateCurve(this._motionData, c, time);\n      if (CubismConfig.setOpacityFromMotion) {\n        model.setPartOpacityById(curves[c].id, value);\n      } else {\n        parameterIndex = model.getParameterIndex(curves[c].id);\n        if (parameterIndex == -1) {\n          continue;\n        }\n        model.setParameterValueByIndex(parameterIndex, value);\n      }\n    }\n    if (timeOffsetSeconds >= this._motionData.duration) {\n      if (this._isLoop) {\n        motionQueueEntry.setStartTime(userTimeSeconds);\n        if (this._isLoopFadeIn) {\n          motionQueueEntry.setFadeInStartTime(userTimeSeconds);\n        }\n      } else {\n        if (this._onFinishedMotion) {\n          this._onFinishedMotion(this);\n        }\n        motionQueueEntry.setIsFinished(true);\n      }\n    }\n    this._lastWeight = fadeWeight;\n  }\n  setIsLoop(loop) {\n    this._isLoop = loop;\n  }\n  isLoop() {\n    return this._isLoop;\n  }\n  setIsLoopFadeIn(loopFadeIn) {\n    this._isLoopFadeIn = loopFadeIn;\n  }\n  isLoopFadeIn() {\n    return this._isLoopFadeIn;\n  }\n  getDuration() {\n    return this._isLoop ? -1 : this._loopDurationSeconds;\n  }\n  getLoopDuration() {\n    return this._loopDurationSeconds;\n  }\n  setParameterFadeInTime(parameterId, value) {\n    const curves = this._motionData.curves;\n    for (let i = 0; i < this._motionData.curveCount; ++i) {\n      if (parameterId == curves[i].id) {\n        curves[i].fadeInTime = value;\n        return;\n      }\n    }\n  }\n  setParameterFadeOutTime(parameterId, value) {\n    const curves = this._motionData.curves;\n    for (let i = 0; i < this._motionData.curveCount; ++i) {\n      if (parameterId == curves[i].id) {\n        curves[i].fadeOutTime = value;\n        return;\n      }\n    }\n  }\n  getParameterFadeInTime(parameterId) {\n    const curves = this._motionData.curves;\n    for (let i = 0; i < this._motionData.curveCount; ++i) {\n      if (parameterId == curves[i].id) {\n        return curves[i].fadeInTime;\n      }\n    }\n    return -1;\n  }\n  getParameterFadeOutTime(parameterId) {\n    const curves = this._motionData.curves;\n    for (let i = 0; i < this._motionData.curveCount; ++i) {\n      if (parameterId == curves[i].id) {\n        return curves[i].fadeOutTime;\n      }\n    }\n    return -1;\n  }\n  setEffectIds(eyeBlinkParameterIds, lipSyncParameterIds) {\n    this._eyeBlinkParameterIds = eyeBlinkParameterIds;\n    this._lipSyncParameterIds = lipSyncParameterIds;\n  }\n  release() {\n    this._motionData = void 0;\n  }\n  parse(motionJson) {\n    this._motionData = new CubismMotionData();\n    let json = new CubismMotionJson(motionJson);\n    this._motionData.duration = json.getMotionDuration();\n    this._motionData.loop = json.isMotionLoop();\n    this._motionData.curveCount = json.getMotionCurveCount();\n    this._motionData.fps = json.getMotionFps();\n    this._motionData.eventCount = json.getEventCount();\n    const areBeziersRestructed = json.getEvaluationOptionFlag(EvaluationOptionFlag.EvaluationOptionFlag_AreBeziersRistricted);\n    const fadeInSeconds = json.getMotionFadeInTime();\n    const fadeOutSeconds = json.getMotionFadeOutTime();\n    if (fadeInSeconds !== void 0) {\n      this._fadeInSeconds = fadeInSeconds < 0 ? 1 : fadeInSeconds;\n    } else {\n      this._fadeInSeconds = 1;\n    }\n    if (fadeOutSeconds !== void 0) {\n      this._fadeOutSeconds = fadeOutSeconds < 0 ? 1 : fadeOutSeconds;\n    } else {\n      this._fadeOutSeconds = 1;\n    }\n    this._motionData.curves = Array.from({\n      length: this._motionData.curveCount\n    }).map(() => new CubismMotionCurve());\n    this._motionData.segments = Array.from({\n      length: json.getMotionTotalSegmentCount()\n    }).map(() => new CubismMotionSegment());\n    this._motionData.events = Array.from({\n      length: this._motionData.eventCount\n    }).map(() => new CubismMotionEvent());\n    this._motionData.points = [];\n    let totalPointCount = 0;\n    let totalSegmentCount = 0;\n    for (let curveCount = 0; curveCount < this._motionData.curveCount; ++curveCount) {\n      const curve = this._motionData.curves[curveCount];\n      switch (json.getMotionCurveTarget(curveCount)) {\n        case TargetNameModel:\n          curve.type = CubismMotionCurveTarget.CubismMotionCurveTarget_Model;\n          break;\n        case TargetNameParameter:\n          curve.type = CubismMotionCurveTarget.CubismMotionCurveTarget_Parameter;\n          break;\n        case TargetNamePartOpacity:\n          curve.type = CubismMotionCurveTarget.CubismMotionCurveTarget_PartOpacity;\n          break;\n        default:\n          CubismLogWarning('Warning : Unable to get segment type from Curve! The number of \"CurveCount\" may be incorrect!');\n      }\n      curve.id = json.getMotionCurveId(curveCount);\n      curve.baseSegmentIndex = totalSegmentCount;\n      const fadeInTime = json.getMotionCurveFadeInTime(curveCount);\n      const fadeOutTime = json.getMotionCurveFadeOutTime(curveCount);\n      curve.fadeInTime = fadeInTime !== void 0 ? fadeInTime : -1;\n      curve.fadeOutTime = fadeOutTime !== void 0 ? fadeOutTime : -1;\n      for (let segmentPosition = 0; segmentPosition < json.getMotionCurveSegmentCount(curveCount);) {\n        if (segmentPosition == 0) {\n          this._motionData.segments[totalSegmentCount].basePointIndex = totalPointCount;\n          this._motionData.points[totalPointCount] = new CubismMotionPoint(json.getMotionCurveSegment(curveCount, segmentPosition), json.getMotionCurveSegment(curveCount, segmentPosition + 1));\n          totalPointCount += 1;\n          segmentPosition += 2;\n        } else {\n          this._motionData.segments[totalSegmentCount].basePointIndex = totalPointCount - 1;\n        }\n        const segment = json.getMotionCurveSegment(curveCount, segmentPosition);\n        switch (segment) {\n          case CubismMotionSegmentType.CubismMotionSegmentType_Linear:\n            {\n              this._motionData.segments[totalSegmentCount].segmentType = CubismMotionSegmentType.CubismMotionSegmentType_Linear;\n              this._motionData.segments[totalSegmentCount].evaluate = linearEvaluate;\n              this._motionData.points[totalPointCount] = new CubismMotionPoint(json.getMotionCurveSegment(curveCount, segmentPosition + 1), json.getMotionCurveSegment(curveCount, segmentPosition + 2));\n              totalPointCount += 1;\n              segmentPosition += 3;\n              break;\n            }\n          case CubismMotionSegmentType.CubismMotionSegmentType_Bezier:\n            {\n              this._motionData.segments[totalSegmentCount].segmentType = CubismMotionSegmentType.CubismMotionSegmentType_Bezier;\n              if (areBeziersRestructed || UseOldBeziersCurveMotion) {\n                this._motionData.segments[totalSegmentCount].evaluate = bezierEvaluate;\n              } else {\n                this._motionData.segments[totalSegmentCount].evaluate = bezierEvaluateCardanoInterpretation;\n              }\n              this._motionData.points[totalPointCount] = new CubismMotionPoint(json.getMotionCurveSegment(curveCount, segmentPosition + 1), json.getMotionCurveSegment(curveCount, segmentPosition + 2));\n              this._motionData.points[totalPointCount + 1] = new CubismMotionPoint(json.getMotionCurveSegment(curveCount, segmentPosition + 3), json.getMotionCurveSegment(curveCount, segmentPosition + 4));\n              this._motionData.points[totalPointCount + 2] = new CubismMotionPoint(json.getMotionCurveSegment(curveCount, segmentPosition + 5), json.getMotionCurveSegment(curveCount, segmentPosition + 6));\n              totalPointCount += 3;\n              segmentPosition += 7;\n              break;\n            }\n          case CubismMotionSegmentType.CubismMotionSegmentType_Stepped:\n            {\n              this._motionData.segments[totalSegmentCount].segmentType = CubismMotionSegmentType.CubismMotionSegmentType_Stepped;\n              this._motionData.segments[totalSegmentCount].evaluate = steppedEvaluate;\n              this._motionData.points[totalPointCount] = new CubismMotionPoint(json.getMotionCurveSegment(curveCount, segmentPosition + 1), json.getMotionCurveSegment(curveCount, segmentPosition + 2));\n              totalPointCount += 1;\n              segmentPosition += 3;\n              break;\n            }\n          case CubismMotionSegmentType.CubismMotionSegmentType_InverseStepped:\n            {\n              this._motionData.segments[totalSegmentCount].segmentType = CubismMotionSegmentType.CubismMotionSegmentType_InverseStepped;\n              this._motionData.segments[totalSegmentCount].evaluate = inverseSteppedEvaluate;\n              this._motionData.points[totalPointCount] = new CubismMotionPoint(json.getMotionCurveSegment(curveCount, segmentPosition + 1), json.getMotionCurveSegment(curveCount, segmentPosition + 2));\n              totalPointCount += 1;\n              segmentPosition += 3;\n              break;\n            }\n        }\n        ++curve.segmentCount;\n        ++totalSegmentCount;\n      }\n      this._motionData.curves.push(curve);\n    }\n    for (let userdatacount = 0; userdatacount < json.getEventCount(); ++userdatacount) {\n      this._motionData.events[userdatacount].fireTime = json.getEventTime(userdatacount);\n      this._motionData.events[userdatacount].value = json.getEventValue(userdatacount);\n    }\n    json.release();\n  }\n  getFiredEvent(beforeCheckTimeSeconds, motionTimeSeconds) {\n    this._firedEventValues.length = 0;\n    for (let u = 0; u < this._motionData.eventCount; ++u) {\n      if (this._motionData.events[u].fireTime > beforeCheckTimeSeconds && this._motionData.events[u].fireTime <= motionTimeSeconds) {\n        this._firedEventValues.push(this._motionData.events[u].value);\n      }\n    }\n    return this._firedEventValues;\n  }\n}\nclass CubismMotionQueueEntry {\n  constructor() {\n    this._autoDelete = false;\n    this._available = true;\n    this._finished = false;\n    this._started = false;\n    this._startTimeSeconds = -1;\n    this._fadeInStartTimeSeconds = 0;\n    this._endTimeSeconds = -1;\n    this._stateTimeSeconds = 0;\n    this._stateWeight = 0;\n    this._lastEventCheckSeconds = 0;\n    this._motionQueueEntryHandle = this;\n    this._fadeOutSeconds = 0;\n    this._isTriggeredFadeOut = false;\n  }\n  release() {\n    if (this._autoDelete && this._motion) {\n      this._motion.release();\n    }\n  }\n  setFadeOut(fadeOutSeconds) {\n    this._fadeOutSeconds = fadeOutSeconds;\n    this._isTriggeredFadeOut = true;\n  }\n  startFadeOut(fadeOutSeconds, userTimeSeconds) {\n    const newEndTimeSeconds = userTimeSeconds + fadeOutSeconds;\n    this._isTriggeredFadeOut = true;\n    if (this._endTimeSeconds < 0 || newEndTimeSeconds < this._endTimeSeconds) {\n      this._endTimeSeconds = newEndTimeSeconds;\n    }\n  }\n  isFinished() {\n    return this._finished;\n  }\n  isStarted() {\n    return this._started;\n  }\n  getStartTime() {\n    return this._startTimeSeconds;\n  }\n  getFadeInStartTime() {\n    return this._fadeInStartTimeSeconds;\n  }\n  getEndTime() {\n    return this._endTimeSeconds;\n  }\n  setStartTime(startTime) {\n    this._startTimeSeconds = startTime;\n  }\n  setFadeInStartTime(startTime) {\n    this._fadeInStartTimeSeconds = startTime;\n  }\n  setEndTime(endTime) {\n    this._endTimeSeconds = endTime;\n  }\n  setIsFinished(f) {\n    this._finished = f;\n  }\n  setIsStarted(f) {\n    this._started = f;\n  }\n  isAvailable() {\n    return this._available;\n  }\n  setIsAvailable(v) {\n    this._available = v;\n  }\n  setState(timeSeconds, weight) {\n    this._stateTimeSeconds = timeSeconds;\n    this._stateWeight = weight;\n  }\n  getStateTime() {\n    return this._stateTimeSeconds;\n  }\n  getStateWeight() {\n    return this._stateWeight;\n  }\n  getLastCheckEventSeconds() {\n    return this._lastEventCheckSeconds;\n  }\n  setLastCheckEventSeconds(checkSeconds) {\n    this._lastEventCheckSeconds = checkSeconds;\n  }\n  isTriggeredFadeOut() {\n    return this._isTriggeredFadeOut;\n  }\n  getFadeOutSeconds() {\n    return this._fadeOutSeconds;\n  }\n}\nclass CubismMotionQueueManager {\n  constructor() {\n    this._userTimeSeconds = 0;\n    this._eventCustomData = null;\n    this._motions = [];\n  }\n  release() {\n    for (let i = 0; i < this._motions.length; ++i) {\n      if (this._motions[i]) {\n        this._motions[i].release();\n      }\n    }\n    this._motions = void 0;\n  }\n  startMotion(motion, autoDelete, userTimeSeconds) {\n    if (motion == null) {\n      return InvalidMotionQueueEntryHandleValue;\n    }\n    let motionQueueEntry;\n    for (let i = 0; i < this._motions.length; ++i) {\n      motionQueueEntry = this._motions[i];\n      if (motionQueueEntry == null) {\n        continue;\n      }\n      motionQueueEntry.setFadeOut(motionQueueEntry._motion.getFadeOutTime());\n    }\n    motionQueueEntry = new CubismMotionQueueEntry();\n    motionQueueEntry._autoDelete = autoDelete;\n    motionQueueEntry._motion = motion;\n    this._motions.push(motionQueueEntry);\n    return motionQueueEntry._motionQueueEntryHandle;\n  }\n  isFinished() {\n    let i = 0;\n    while (i < this._motions.length) {\n      const motionQueueEntry = this._motions[i];\n      if (motionQueueEntry == null) {\n        this._motions.splice(i, 1);\n        continue;\n      }\n      const motion = motionQueueEntry._motion;\n      if (motion == null) {\n        motionQueueEntry.release();\n        this._motions.splice(i, 1);\n        continue;\n      }\n      if (!motionQueueEntry.isFinished()) {\n        return false;\n      }\n      i++;\n    }\n    return true;\n  }\n  isFinishedByHandle(motionQueueEntryNumber) {\n    for (let i = 0; i < this._motions.length; i++) {\n      const motionQueueEntry = this._motions[i];\n      if (motionQueueEntry == null) {\n        continue;\n      }\n      if (motionQueueEntry._motionQueueEntryHandle == motionQueueEntryNumber && !motionQueueEntry.isFinished()) {\n        return false;\n      }\n    }\n    return true;\n  }\n  stopAllMotions() {\n    for (let i = 0; i < this._motions.length; i++) {\n      const motionQueueEntry = this._motions[i];\n      if (motionQueueEntry != null) {\n        motionQueueEntry.release();\n      }\n    }\n    this._motions = [];\n  }\n  getCubismMotionQueueEntry(motionQueueEntryNumber) {\n    return this._motions.find(entry => entry != null && entry._motionQueueEntryHandle == motionQueueEntryNumber);\n  }\n  setEventCallback(callback, customData = null) {\n    this._eventCallBack = callback;\n    this._eventCustomData = customData;\n  }\n  doUpdateMotion(model, userTimeSeconds) {\n    let updated = false;\n    let i = 0;\n    while (i < this._motions.length) {\n      const motionQueueEntry = this._motions[i];\n      if (motionQueueEntry == null) {\n        this._motions.splice(i, 1);\n        continue;\n      }\n      const motion = motionQueueEntry._motion;\n      if (motion == null) {\n        motionQueueEntry.release();\n        this._motions.splice(i, 1);\n        continue;\n      }\n      motion.updateParameters(model, motionQueueEntry, userTimeSeconds);\n      updated = true;\n      const firedList = motion.getFiredEvent(motionQueueEntry.getLastCheckEventSeconds() - motionQueueEntry.getStartTime(), userTimeSeconds - motionQueueEntry.getStartTime());\n      for (let i2 = 0; i2 < firedList.length; ++i2) {\n        this._eventCallBack(this, firedList[i2], this._eventCustomData);\n      }\n      motionQueueEntry.setLastCheckEventSeconds(userTimeSeconds);\n      if (motionQueueEntry.isFinished()) {\n        motionQueueEntry.release();\n        this._motions.splice(i, 1);\n      } else {\n        if (motionQueueEntry.isTriggeredFadeOut()) {\n          motionQueueEntry.startFadeOut(motionQueueEntry.getFadeOutSeconds(), userTimeSeconds);\n        }\n        i++;\n      }\n    }\n    return updated;\n  }\n}\nconst InvalidMotionQueueEntryHandleValue = -1;\nclass CubismMotionManager extends CubismMotionQueueManager {\n  constructor() {\n    super();\n    this._currentPriority = 0;\n    this._reservePriority = 0;\n  }\n  getCurrentPriority() {\n    return this._currentPriority;\n  }\n  getReservePriority() {\n    return this._reservePriority;\n  }\n  setReservePriority(val) {\n    this._reservePriority = val;\n  }\n  startMotionPriority(motion, autoDelete, priority) {\n    if (priority == this._reservePriority) {\n      this._reservePriority = 0;\n    }\n    this._currentPriority = priority;\n    return super.startMotion(motion, autoDelete, this._userTimeSeconds);\n  }\n  updateMotion(model, deltaTimeSeconds) {\n    this._userTimeSeconds += deltaTimeSeconds;\n    const updated = super.doUpdateMotion(model, this._userTimeSeconds);\n    if (this.isFinished()) {\n      this._currentPriority = 0;\n    }\n    return updated;\n  }\n  reserveMotion(priority) {\n    if (priority <= this._reservePriority || priority <= this._currentPriority) {\n      return false;\n    }\n    this._reservePriority = priority;\n    return true;\n  }\n}\nvar CubismPhysicsTargetType = /* @__PURE__ */(CubismPhysicsTargetType2 => {\n  CubismPhysicsTargetType2[CubismPhysicsTargetType2[\"CubismPhysicsTargetType_Parameter\"] = 0] = \"CubismPhysicsTargetType_Parameter\";\n  return CubismPhysicsTargetType2;\n})(CubismPhysicsTargetType || {});\nvar CubismPhysicsSource = /* @__PURE__ */(CubismPhysicsSource2 => {\n  CubismPhysicsSource2[CubismPhysicsSource2[\"CubismPhysicsSource_X\"] = 0] = \"CubismPhysicsSource_X\";\n  CubismPhysicsSource2[CubismPhysicsSource2[\"CubismPhysicsSource_Y\"] = 1] = \"CubismPhysicsSource_Y\";\n  CubismPhysicsSource2[CubismPhysicsSource2[\"CubismPhysicsSource_Angle\"] = 2] = \"CubismPhysicsSource_Angle\";\n  return CubismPhysicsSource2;\n})(CubismPhysicsSource || {});\nclass PhysicsJsonEffectiveForces {\n  constructor() {\n    this.gravity = new CubismVector2(0, 0);\n    this.wind = new CubismVector2(0, 0);\n  }\n}\nclass CubismPhysicsParticle {\n  constructor() {\n    this.initialPosition = new CubismVector2(0, 0);\n    this.position = new CubismVector2(0, 0);\n    this.lastPosition = new CubismVector2(0, 0);\n    this.lastGravity = new CubismVector2(0, 0);\n    this.force = new CubismVector2(0, 0);\n    this.velocity = new CubismVector2(0, 0);\n  }\n}\nclass CubismPhysicsSubRig {\n  constructor() {\n    this.normalizationPosition = {};\n    this.normalizationAngle = {};\n  }\n}\nclass CubismPhysicsInput {\n  constructor() {\n    this.source = {};\n  }\n}\nclass CubismPhysicsOutput {\n  constructor() {\n    this.destination = {};\n    this.translationScale = new CubismVector2(0, 0);\n  }\n}\nclass CubismPhysicsRig {\n  constructor() {\n    this.settings = [];\n    this.inputs = [];\n    this.outputs = [];\n    this.particles = [];\n    this.gravity = new CubismVector2(0, 0);\n    this.wind = new CubismVector2(0, 0);\n  }\n}\nclass CubismPhysicsJson {\n  constructor(json) {\n    this._json = json;\n  }\n  release() {\n    this._json = void 0;\n  }\n  getGravity() {\n    const ret = new CubismVector2(0, 0);\n    ret.x = this._json.Meta.EffectiveForces.Gravity.X;\n    ret.y = this._json.Meta.EffectiveForces.Gravity.Y;\n    return ret;\n  }\n  getWind() {\n    const ret = new CubismVector2(0, 0);\n    ret.x = this._json.Meta.EffectiveForces.Wind.X;\n    ret.y = this._json.Meta.EffectiveForces.Wind.Y;\n    return ret;\n  }\n  getSubRigCount() {\n    return this._json.Meta.PhysicsSettingCount;\n  }\n  getTotalInputCount() {\n    return this._json.Meta.TotalInputCount;\n  }\n  getTotalOutputCount() {\n    return this._json.Meta.TotalOutputCount;\n  }\n  getVertexCount() {\n    return this._json.Meta.VertexCount;\n  }\n  getNormalizationPositionMinimumValue(physicsSettingIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Normalization.Position.Minimum;\n  }\n  getNormalizationPositionMaximumValue(physicsSettingIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Normalization.Position.Maximum;\n  }\n  getNormalizationPositionDefaultValue(physicsSettingIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Normalization.Position.Default;\n  }\n  getNormalizationAngleMinimumValue(physicsSettingIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Normalization.Angle.Minimum;\n  }\n  getNormalizationAngleMaximumValue(physicsSettingIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Normalization.Angle.Maximum;\n  }\n  getNormalizationAngleDefaultValue(physicsSettingIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Normalization.Angle.Default;\n  }\n  getInputCount(physicsSettingIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Input.length;\n  }\n  getInputWeight(physicsSettingIndex, inputIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Input[inputIndex].Weight;\n  }\n  getInputReflect(physicsSettingIndex, inputIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Input[inputIndex].Reflect;\n  }\n  getInputType(physicsSettingIndex, inputIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Input[inputIndex].Type;\n  }\n  getInputSourceId(physicsSettingIndex, inputIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Input[inputIndex].Source.Id;\n  }\n  getOutputCount(physicsSettingIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Output.length;\n  }\n  getOutputVertexIndex(physicsSettingIndex, outputIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Output[outputIndex].VertexIndex;\n  }\n  getOutputAngleScale(physicsSettingIndex, outputIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Output[outputIndex].Scale;\n  }\n  getOutputWeight(physicsSettingIndex, outputIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Output[outputIndex].Weight;\n  }\n  getOutputDestinationId(physicsSettingIndex, outputIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Output[outputIndex].Destination.Id;\n  }\n  getOutputType(physicsSettingIndex, outputIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Output[outputIndex].Type;\n  }\n  getOutputReflect(physicsSettingIndex, outputIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Output[outputIndex].Reflect;\n  }\n  getParticleCount(physicsSettingIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Vertices.length;\n  }\n  getParticleMobility(physicsSettingIndex, vertexIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Vertices[vertexIndex].Mobility;\n  }\n  getParticleDelay(physicsSettingIndex, vertexIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Vertices[vertexIndex].Delay;\n  }\n  getParticleAcceleration(physicsSettingIndex, vertexIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Vertices[vertexIndex].Acceleration;\n  }\n  getParticleRadius(physicsSettingIndex, vertexIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Vertices[vertexIndex].Radius;\n  }\n  getParticlePosition(physicsSettingIndex, vertexIndex) {\n    const ret = new CubismVector2(0, 0);\n    ret.x = this._json.PhysicsSettings[physicsSettingIndex].Vertices[vertexIndex].Position.X;\n    ret.y = this._json.PhysicsSettings[physicsSettingIndex].Vertices[vertexIndex].Position.Y;\n    return ret;\n  }\n}\nconst PhysicsTypeTagX = \"X\";\nconst PhysicsTypeTagY = \"Y\";\nconst PhysicsTypeTagAngle = \"Angle\";\nconst AirResistance = 5;\nconst MaximumWeight = 100;\nconst MovementThreshold = 1e-3;\nclass CubismPhysics {\n  static create(json) {\n    const ret = new CubismPhysics();\n    ret.parse(json);\n    ret._physicsRig.gravity.y = 0;\n    return ret;\n  }\n  evaluate(model, deltaTimeSeconds) {\n    let totalAngle;\n    let weight;\n    let radAngle;\n    let outputValue;\n    const totalTranslation = new CubismVector2();\n    let currentSetting;\n    let currentInput;\n    let currentOutput;\n    let currentParticles;\n    let parameterValue;\n    let parameterMaximumValue;\n    let parameterMinimumValue;\n    let parameterDefaultValue;\n    parameterValue = model.getModel().parameters.values;\n    parameterMaximumValue = model.getModel().parameters.maximumValues;\n    parameterMinimumValue = model.getModel().parameters.minimumValues;\n    parameterDefaultValue = model.getModel().parameters.defaultValues;\n    for (let settingIndex = 0; settingIndex < this._physicsRig.subRigCount; ++settingIndex) {\n      totalAngle = {\n        angle: 0\n      };\n      totalTranslation.x = 0;\n      totalTranslation.y = 0;\n      currentSetting = this._physicsRig.settings[settingIndex];\n      currentInput = this._physicsRig.inputs.slice(currentSetting.baseInputIndex);\n      currentOutput = this._physicsRig.outputs.slice(currentSetting.baseOutputIndex);\n      currentParticles = this._physicsRig.particles.slice(currentSetting.baseParticleIndex);\n      for (let i = 0; i < currentSetting.inputCount; ++i) {\n        weight = currentInput[i].weight / MaximumWeight;\n        if (currentInput[i].sourceParameterIndex == -1) {\n          currentInput[i].sourceParameterIndex = model.getParameterIndex(currentInput[i].source.id);\n        }\n        currentInput[i].getNormalizedParameterValue(totalTranslation, totalAngle, parameterValue[currentInput[i].sourceParameterIndex], parameterMinimumValue[currentInput[i].sourceParameterIndex], parameterMaximumValue[currentInput[i].sourceParameterIndex], parameterDefaultValue[currentInput[i].sourceParameterIndex], currentSetting.normalizationPosition, currentSetting.normalizationAngle, currentInput[i].reflect, weight);\n      }\n      radAngle = CubismMath.degreesToRadian(-totalAngle.angle);\n      totalTranslation.x = totalTranslation.x * CubismMath.cos(radAngle) - totalTranslation.y * CubismMath.sin(radAngle);\n      totalTranslation.y = totalTranslation.x * CubismMath.sin(radAngle) + totalTranslation.y * CubismMath.cos(radAngle);\n      updateParticles(currentParticles, currentSetting.particleCount, totalTranslation, totalAngle.angle, this._options.wind, MovementThreshold * currentSetting.normalizationPosition.maximum, deltaTimeSeconds, AirResistance);\n      for (let i = 0; i < currentSetting.outputCount; ++i) {\n        const particleIndex = currentOutput[i].vertexIndex;\n        if (particleIndex < 1 || particleIndex >= currentSetting.particleCount) {\n          break;\n        }\n        if (currentOutput[i].destinationParameterIndex == -1) {\n          currentOutput[i].destinationParameterIndex = model.getParameterIndex(currentOutput[i].destination.id);\n        }\n        const translation = new CubismVector2();\n        translation.x = currentParticles[particleIndex].position.x - currentParticles[particleIndex - 1].position.x;\n        translation.y = currentParticles[particleIndex].position.y - currentParticles[particleIndex - 1].position.y;\n        outputValue = currentOutput[i].getValue(translation, currentParticles, particleIndex, currentOutput[i].reflect, this._options.gravity);\n        const destinationParameterIndex = currentOutput[i].destinationParameterIndex;\n        const outParameterValue = !Float32Array.prototype.slice && \"subarray\" in Float32Array.prototype ? JSON.parse(JSON.stringify(parameterValue.subarray(destinationParameterIndex))) : parameterValue.slice(destinationParameterIndex);\n        updateOutputParameterValue(outParameterValue, parameterMinimumValue[destinationParameterIndex], parameterMaximumValue[destinationParameterIndex], outputValue, currentOutput[i]);\n        for (let offset = destinationParameterIndex, outParamIndex = 0; offset < parameterValue.length; offset++, outParamIndex++) {\n          parameterValue[offset] = outParameterValue[outParamIndex];\n        }\n      }\n    }\n  }\n  setOptions(options) {\n    this._options = options;\n  }\n  getOption() {\n    return this._options;\n  }\n  constructor() {\n    this._options = new Options();\n    this._options.gravity.y = -1;\n    this._options.gravity.x = 0;\n    this._options.wind.x = 0;\n    this._options.wind.y = 0;\n  }\n  release() {\n    this._physicsRig = void 0;\n  }\n  parse(physicsJson) {\n    this._physicsRig = new CubismPhysicsRig();\n    let json = new CubismPhysicsJson(physicsJson);\n    this._physicsRig.gravity = json.getGravity();\n    this._physicsRig.wind = json.getWind();\n    this._physicsRig.subRigCount = json.getSubRigCount();\n    let inputIndex = 0,\n      outputIndex = 0,\n      particleIndex = 0;\n    for (let i = 0; i < this._physicsRig.subRigCount; ++i) {\n      const setting = new CubismPhysicsSubRig();\n      setting.normalizationPosition.minimum = json.getNormalizationPositionMinimumValue(i);\n      setting.normalizationPosition.maximum = json.getNormalizationPositionMaximumValue(i);\n      setting.normalizationPosition.defalut = json.getNormalizationPositionDefaultValue(i);\n      setting.normalizationAngle.minimum = json.getNormalizationAngleMinimumValue(i);\n      setting.normalizationAngle.maximum = json.getNormalizationAngleMaximumValue(i);\n      setting.normalizationAngle.defalut = json.getNormalizationAngleDefaultValue(i);\n      setting.inputCount = json.getInputCount(i);\n      setting.baseInputIndex = inputIndex;\n      inputIndex += setting.inputCount;\n      for (let j = 0; j < setting.inputCount; ++j) {\n        const input = new CubismPhysicsInput();\n        input.sourceParameterIndex = -1;\n        input.weight = json.getInputWeight(i, j);\n        input.reflect = json.getInputReflect(i, j);\n        switch (json.getInputType(i, j)) {\n          case PhysicsTypeTagX:\n            input.type = CubismPhysicsSource.CubismPhysicsSource_X;\n            input.getNormalizedParameterValue = getInputTranslationXFromNormalizedParameterValue;\n            break;\n          case PhysicsTypeTagY:\n            input.type = CubismPhysicsSource.CubismPhysicsSource_Y;\n            input.getNormalizedParameterValue = getInputTranslationYFromNormalizedParamterValue;\n            break;\n          case PhysicsTypeTagAngle:\n            input.type = CubismPhysicsSource.CubismPhysicsSource_Angle;\n            input.getNormalizedParameterValue = getInputAngleFromNormalizedParameterValue;\n            break;\n        }\n        input.source.targetType = CubismPhysicsTargetType.CubismPhysicsTargetType_Parameter;\n        input.source.id = json.getInputSourceId(i, j);\n        this._physicsRig.inputs.push(input);\n      }\n      setting.outputCount = json.getOutputCount(i);\n      setting.baseOutputIndex = outputIndex;\n      outputIndex += setting.outputCount;\n      for (let j = 0; j < setting.outputCount; ++j) {\n        const output = new CubismPhysicsOutput();\n        output.destinationParameterIndex = -1;\n        output.vertexIndex = json.getOutputVertexIndex(i, j);\n        output.angleScale = json.getOutputAngleScale(i, j);\n        output.weight = json.getOutputWeight(i, j);\n        output.destination.targetType = CubismPhysicsTargetType.CubismPhysicsTargetType_Parameter;\n        output.destination.id = json.getOutputDestinationId(i, j);\n        switch (json.getOutputType(i, j)) {\n          case PhysicsTypeTagX:\n            output.type = CubismPhysicsSource.CubismPhysicsSource_X;\n            output.getValue = getOutputTranslationX;\n            output.getScale = getOutputScaleTranslationX;\n            break;\n          case PhysicsTypeTagY:\n            output.type = CubismPhysicsSource.CubismPhysicsSource_Y;\n            output.getValue = getOutputTranslationY;\n            output.getScale = getOutputScaleTranslationY;\n            break;\n          case PhysicsTypeTagAngle:\n            output.type = CubismPhysicsSource.CubismPhysicsSource_Angle;\n            output.getValue = getOutputAngle;\n            output.getScale = getOutputScaleAngle;\n            break;\n        }\n        output.reflect = json.getOutputReflect(i, j);\n        this._physicsRig.outputs.push(output);\n      }\n      setting.particleCount = json.getParticleCount(i);\n      setting.baseParticleIndex = particleIndex;\n      particleIndex += setting.particleCount;\n      for (let j = 0; j < setting.particleCount; ++j) {\n        const particle = new CubismPhysicsParticle();\n        particle.mobility = json.getParticleMobility(i, j);\n        particle.delay = json.getParticleDelay(i, j);\n        particle.acceleration = json.getParticleAcceleration(i, j);\n        particle.radius = json.getParticleRadius(i, j);\n        particle.position = json.getParticlePosition(i, j);\n        this._physicsRig.particles.push(particle);\n      }\n      this._physicsRig.settings.push(setting);\n    }\n    this.initialize();\n    json.release();\n  }\n  initialize() {\n    let strand;\n    let currentSetting;\n    let radius;\n    for (let settingIndex = 0; settingIndex < this._physicsRig.subRigCount; ++settingIndex) {\n      currentSetting = this._physicsRig.settings[settingIndex];\n      strand = this._physicsRig.particles.slice(currentSetting.baseParticleIndex);\n      strand[0].initialPosition = new CubismVector2(0, 0);\n      strand[0].lastPosition = new CubismVector2(strand[0].initialPosition.x, strand[0].initialPosition.y);\n      strand[0].lastGravity = new CubismVector2(0, -1);\n      strand[0].lastGravity.y *= -1;\n      strand[0].velocity = new CubismVector2(0, 0);\n      strand[0].force = new CubismVector2(0, 0);\n      for (let i = 1; i < currentSetting.particleCount; ++i) {\n        radius = new CubismVector2(0, 0);\n        radius.y = strand[i].radius;\n        strand[i].initialPosition = new CubismVector2(strand[i - 1].initialPosition.x + radius.x, strand[i - 1].initialPosition.y + radius.y);\n        strand[i].position = new CubismVector2(strand[i].initialPosition.x, strand[i].initialPosition.y);\n        strand[i].lastPosition = new CubismVector2(strand[i].initialPosition.x, strand[i].initialPosition.y);\n        strand[i].lastGravity = new CubismVector2(0, -1);\n        strand[i].lastGravity.y *= -1;\n        strand[i].velocity = new CubismVector2(0, 0);\n        strand[i].force = new CubismVector2(0, 0);\n      }\n    }\n  }\n}\nclass Options {\n  constructor() {\n    this.gravity = new CubismVector2(0, 0);\n    this.wind = new CubismVector2(0, 0);\n  }\n}\nfunction getInputTranslationXFromNormalizedParameterValue(targetTranslation, targetAngle, value, parameterMinimumValue, parameterMaximumValue, parameterDefaultValue, normalizationPosition, normalizationAngle, isInverted, weight) {\n  targetTranslation.x += normalizeParameterValue(value, parameterMinimumValue, parameterMaximumValue, parameterDefaultValue, normalizationPosition.minimum, normalizationPosition.maximum, normalizationPosition.defalut, isInverted) * weight;\n}\nfunction getInputTranslationYFromNormalizedParamterValue(targetTranslation, targetAngle, value, parameterMinimumValue, parameterMaximumValue, parameterDefaultValue, normalizationPosition, normalizationAngle, isInverted, weight) {\n  targetTranslation.y += normalizeParameterValue(value, parameterMinimumValue, parameterMaximumValue, parameterDefaultValue, normalizationPosition.minimum, normalizationPosition.maximum, normalizationPosition.defalut, isInverted) * weight;\n}\nfunction getInputAngleFromNormalizedParameterValue(targetTranslation, targetAngle, value, parameterMinimumValue, parameterMaximumValue, parameterDefaultValue, normalizaitionPosition, normalizationAngle, isInverted, weight) {\n  targetAngle.angle += normalizeParameterValue(value, parameterMinimumValue, parameterMaximumValue, parameterDefaultValue, normalizationAngle.minimum, normalizationAngle.maximum, normalizationAngle.defalut, isInverted) * weight;\n}\nfunction getOutputTranslationX(translation, particles, particleIndex, isInverted, parentGravity) {\n  let outputValue = translation.x;\n  if (isInverted) {\n    outputValue *= -1;\n  }\n  return outputValue;\n}\nfunction getOutputTranslationY(translation, particles, particleIndex, isInverted, parentGravity) {\n  let outputValue = translation.y;\n  if (isInverted) {\n    outputValue *= -1;\n  }\n  return outputValue;\n}\nfunction getOutputAngle(translation, particles, particleIndex, isInverted, parentGravity) {\n  let outputValue;\n  if (particleIndex >= 2) {\n    parentGravity = particles[particleIndex - 1].position.substract(particles[particleIndex - 2].position);\n  } else {\n    parentGravity = parentGravity.multiplyByScaler(-1);\n  }\n  outputValue = CubismMath.directionToRadian(parentGravity, translation);\n  if (isInverted) {\n    outputValue *= -1;\n  }\n  return outputValue;\n}\nfunction getRangeValue(min, max) {\n  return Math.abs(Math.max(min, max) - Math.min(min, max));\n}\nfunction getDefaultValue(min, max) {\n  const minValue = Math.min(min, max);\n  return minValue + getRangeValue(min, max) / 2;\n}\nfunction getOutputScaleTranslationX(translationScale, angleScale) {\n  return translationScale.x;\n}\nfunction getOutputScaleTranslationY(translationScale, angleScale) {\n  return translationScale.y;\n}\nfunction getOutputScaleAngle(translationScale, angleScale) {\n  return angleScale;\n}\nfunction updateParticles(strand, strandCount, totalTranslation, totalAngle, windDirection, thresholdValue, deltaTimeSeconds, airResistance) {\n  let totalRadian;\n  let delay;\n  let radian;\n  let currentGravity;\n  let direction = new CubismVector2(0, 0);\n  let velocity = new CubismVector2(0, 0);\n  let force = new CubismVector2(0, 0);\n  let newDirection = new CubismVector2(0, 0);\n  strand[0].position = new CubismVector2(totalTranslation.x, totalTranslation.y);\n  totalRadian = CubismMath.degreesToRadian(totalAngle);\n  currentGravity = CubismMath.radianToDirection(totalRadian);\n  currentGravity.normalize();\n  for (let i = 1; i < strandCount; ++i) {\n    strand[i].force = currentGravity.multiplyByScaler(strand[i].acceleration).add(windDirection);\n    strand[i].lastPosition = new CubismVector2(strand[i].position.x, strand[i].position.y);\n    delay = strand[i].delay * deltaTimeSeconds * 30;\n    direction = strand[i].position.substract(strand[i - 1].position);\n    radian = CubismMath.directionToRadian(strand[i].lastGravity, currentGravity) / airResistance;\n    direction.x = CubismMath.cos(radian) * direction.x - direction.y * CubismMath.sin(radian);\n    direction.y = CubismMath.sin(radian) * direction.x + direction.y * CubismMath.cos(radian);\n    strand[i].position = strand[i - 1].position.add(direction);\n    velocity = strand[i].velocity.multiplyByScaler(delay);\n    force = strand[i].force.multiplyByScaler(delay).multiplyByScaler(delay);\n    strand[i].position = strand[i].position.add(velocity).add(force);\n    newDirection = strand[i].position.substract(strand[i - 1].position);\n    newDirection.normalize();\n    strand[i].position = strand[i - 1].position.add(newDirection.multiplyByScaler(strand[i].radius));\n    if (CubismMath.abs(strand[i].position.x) < thresholdValue) {\n      strand[i].position.x = 0;\n    }\n    if (delay != 0) {\n      strand[i].velocity = strand[i].position.substract(strand[i].lastPosition);\n      strand[i].velocity = strand[i].velocity.divisionByScalar(delay);\n      strand[i].velocity = strand[i].velocity.multiplyByScaler(strand[i].mobility);\n    }\n    strand[i].force = new CubismVector2(0, 0);\n    strand[i].lastGravity = new CubismVector2(currentGravity.x, currentGravity.y);\n  }\n}\nfunction updateOutputParameterValue(parameterValue, parameterValueMinimum, parameterValueMaximum, translation, output) {\n  let outputScale;\n  let value;\n  let weight;\n  outputScale = output.getScale(output.translationScale, output.angleScale);\n  value = translation * outputScale;\n  if (value < parameterValueMinimum) {\n    if (value < output.valueBelowMinimum) {\n      output.valueBelowMinimum = value;\n    }\n    value = parameterValueMinimum;\n  } else if (value > parameterValueMaximum) {\n    if (value > output.valueExceededMaximum) {\n      output.valueExceededMaximum = value;\n    }\n    value = parameterValueMaximum;\n  }\n  weight = output.weight / MaximumWeight;\n  if (weight >= 1) {\n    parameterValue[0] = value;\n  } else {\n    value = parameterValue[0] * (1 - weight) + value * weight;\n    parameterValue[0] = value;\n  }\n}\nfunction normalizeParameterValue(value, parameterMinimum, parameterMaximum, parameterDefault, normalizedMinimum, normalizedMaximum, normalizedDefault, isInverted) {\n  let result = 0;\n  const maxValue = CubismMath.max(parameterMaximum, parameterMinimum);\n  if (maxValue < value) {\n    value = maxValue;\n  }\n  const minValue = CubismMath.min(parameterMaximum, parameterMinimum);\n  if (minValue > value) {\n    value = minValue;\n  }\n  const minNormValue = CubismMath.min(normalizedMinimum, normalizedMaximum);\n  const maxNormValue = CubismMath.max(normalizedMinimum, normalizedMaximum);\n  const middleNormValue = normalizedDefault;\n  const middleValue = getDefaultValue(minValue, maxValue);\n  const paramValue = value - middleValue;\n  switch (Math.sign(paramValue)) {\n    case 1:\n      {\n        const nLength = maxNormValue - middleNormValue;\n        const pLength = maxValue - middleValue;\n        if (pLength != 0) {\n          result = paramValue * (nLength / pLength);\n          result += middleNormValue;\n        }\n        break;\n      }\n    case -1:\n      {\n        const nLength = minNormValue - middleNormValue;\n        const pLength = minValue - middleValue;\n        if (pLength != 0) {\n          result = paramValue * (nLength / pLength);\n          result += middleNormValue;\n        }\n        break;\n      }\n    case 0:\n      {\n        result = middleNormValue;\n        break;\n      }\n  }\n  return isInverted ? result : result * -1;\n}\nclass csmRect {\n  constructor(x = 0, y = 0, w = 0, h = 0) {\n    this.x = x;\n    this.y = y;\n    this.width = w;\n    this.height = h;\n  }\n  getCenterX() {\n    return this.x + 0.5 * this.width;\n  }\n  getCenterY() {\n    return this.y + 0.5 * this.height;\n  }\n  getRight() {\n    return this.x + this.width;\n  }\n  getBottom() {\n    return this.y + this.height;\n  }\n  setRect(r) {\n    this.x = r.x;\n    this.y = r.y;\n    this.width = r.width;\n    this.height = r.height;\n  }\n  expand(w, h) {\n    this.x -= w;\n    this.y -= h;\n    this.width += w * 2;\n    this.height += h * 2;\n  }\n}\nconst ColorChannelCount = 4;\nconst shaderCount = 10;\nlet s_instance;\nlet s_viewport;\nlet s_fbo;\nclass CubismClippingManager_WebGL {\n  getChannelFlagAsColor(channelNo) {\n    return this._channelColors[channelNo];\n  }\n  getMaskRenderTexture() {\n    let ret = 0;\n    if (this._maskTexture && this._maskTexture.texture != 0) {\n      this._maskTexture.frameNo = this._currentFrameNo;\n      ret = this._maskTexture.texture;\n    }\n    if (ret == 0) {\n      const size = this._clippingMaskBufferSize;\n      this._colorBuffer = this.gl.createTexture();\n      this.gl.bindTexture(this.gl.TEXTURE_2D, this._colorBuffer);\n      this.gl.texImage2D(this.gl.TEXTURE_2D, 0, this.gl.RGBA, size, size, 0, this.gl.RGBA, this.gl.UNSIGNED_BYTE, null);\n      this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_S, this.gl.CLAMP_TO_EDGE);\n      this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_T, this.gl.CLAMP_TO_EDGE);\n      this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MIN_FILTER, this.gl.LINEAR);\n      this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MAG_FILTER, this.gl.LINEAR);\n      this.gl.bindTexture(this.gl.TEXTURE_2D, null);\n      ret = this.gl.createFramebuffer();\n      this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, ret);\n      this.gl.framebufferTexture2D(this.gl.FRAMEBUFFER, this.gl.COLOR_ATTACHMENT0, this.gl.TEXTURE_2D, this._colorBuffer, 0);\n      this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, s_fbo);\n      this._maskTexture = new CubismRenderTextureResource(this._currentFrameNo, ret);\n    }\n    return ret;\n  }\n  setGL(gl) {\n    this.gl = gl;\n  }\n  calcClippedDrawTotalBounds(model, clippingContext) {\n    let clippedDrawTotalMinX = Number.MAX_VALUE;\n    let clippedDrawTotalMinY = Number.MAX_VALUE;\n    let clippedDrawTotalMaxX = Number.MIN_VALUE;\n    let clippedDrawTotalMaxY = Number.MIN_VALUE;\n    const clippedDrawCount = clippingContext._clippedDrawableIndexList.length;\n    for (let clippedDrawableIndex = 0; clippedDrawableIndex < clippedDrawCount; clippedDrawableIndex++) {\n      const drawableIndex = clippingContext._clippedDrawableIndexList[clippedDrawableIndex];\n      const drawableVertexCount = model.getDrawableVertexCount(drawableIndex);\n      const drawableVertexes = model.getDrawableVertices(drawableIndex);\n      let minX = Number.MAX_VALUE;\n      let minY = Number.MAX_VALUE;\n      let maxX = Number.MIN_VALUE;\n      let maxY = Number.MIN_VALUE;\n      const loop = drawableVertexCount * Constant.vertexStep;\n      for (let pi = Constant.vertexOffset; pi < loop; pi += Constant.vertexStep) {\n        const x = drawableVertexes[pi];\n        const y = drawableVertexes[pi + 1];\n        if (x < minX) {\n          minX = x;\n        }\n        if (x > maxX) {\n          maxX = x;\n        }\n        if (y < minY) {\n          minY = y;\n        }\n        if (y > maxY) {\n          maxY = y;\n        }\n      }\n      if (minX == Number.MAX_VALUE) {\n        continue;\n      }\n      if (minX < clippedDrawTotalMinX) {\n        clippedDrawTotalMinX = minX;\n      }\n      if (minY < clippedDrawTotalMinY) {\n        clippedDrawTotalMinY = minY;\n      }\n      if (maxX > clippedDrawTotalMaxX) {\n        clippedDrawTotalMaxX = maxX;\n      }\n      if (maxY > clippedDrawTotalMaxY) {\n        clippedDrawTotalMaxY = maxY;\n      }\n      if (clippedDrawTotalMinX == Number.MAX_VALUE) {\n        clippingContext._allClippedDrawRect.x = 0;\n        clippingContext._allClippedDrawRect.y = 0;\n        clippingContext._allClippedDrawRect.width = 0;\n        clippingContext._allClippedDrawRect.height = 0;\n        clippingContext._isUsing = false;\n      } else {\n        clippingContext._isUsing = true;\n        const w = clippedDrawTotalMaxX - clippedDrawTotalMinX;\n        const h = clippedDrawTotalMaxY - clippedDrawTotalMinY;\n        clippingContext._allClippedDrawRect.x = clippedDrawTotalMinX;\n        clippingContext._allClippedDrawRect.y = clippedDrawTotalMinY;\n        clippingContext._allClippedDrawRect.width = w;\n        clippingContext._allClippedDrawRect.height = h;\n      }\n    }\n  }\n  constructor() {\n    this._maskRenderTexture = null;\n    this._colorBuffer = null;\n    this._currentFrameNo = 0;\n    this._clippingMaskBufferSize = 256;\n    this._clippingContextListForMask = [];\n    this._clippingContextListForDraw = [];\n    this._channelColors = [];\n    this._tmpBoundsOnModel = new csmRect();\n    this._tmpMatrix = new CubismMatrix44();\n    this._tmpMatrixForMask = new CubismMatrix44();\n    this._tmpMatrixForDraw = new CubismMatrix44();\n    let tmp = new CubismTextureColor();\n    tmp.R = 1;\n    tmp.G = 0;\n    tmp.B = 0;\n    tmp.A = 0;\n    this._channelColors.push(tmp);\n    tmp = new CubismTextureColor();\n    tmp.R = 0;\n    tmp.G = 1;\n    tmp.B = 0;\n    tmp.A = 0;\n    this._channelColors.push(tmp);\n    tmp = new CubismTextureColor();\n    tmp.R = 0;\n    tmp.G = 0;\n    tmp.B = 1;\n    tmp.A = 0;\n    this._channelColors.push(tmp);\n    tmp = new CubismTextureColor();\n    tmp.R = 0;\n    tmp.G = 0;\n    tmp.B = 0;\n    tmp.A = 1;\n    this._channelColors.push(tmp);\n  }\n  release() {\n    var _a, _b, _c;\n    const self = this;\n    for (let i = 0; i < this._clippingContextListForMask.length; i++) {\n      if (this._clippingContextListForMask[i]) {\n        (_a = this._clippingContextListForMask[i]) == null ? void 0 : _a.release();\n      }\n    }\n    self._clippingContextListForMask = void 0;\n    self._clippingContextListForDraw = void 0;\n    if (this._maskTexture) {\n      (_b = this.gl) == null ? void 0 : _b.deleteFramebuffer(this._maskTexture.texture);\n      self._maskTexture = void 0;\n    }\n    self._channelColors = void 0;\n    (_c = this.gl) == null ? void 0 : _c.deleteTexture(this._colorBuffer);\n    this._colorBuffer = null;\n  }\n  initialize(model, drawableCount, drawableMasks, drawableMaskCounts) {\n    for (let i = 0; i < drawableCount; i++) {\n      if (drawableMaskCounts[i] <= 0) {\n        this._clippingContextListForDraw.push(null);\n        continue;\n      }\n      let clippingContext = this.findSameClip(drawableMasks[i], drawableMaskCounts[i]);\n      if (clippingContext == null) {\n        clippingContext = new CubismClippingContext(this, drawableMasks[i], drawableMaskCounts[i]);\n        this._clippingContextListForMask.push(clippingContext);\n      }\n      clippingContext.addClippedDrawable(i);\n      this._clippingContextListForDraw.push(clippingContext);\n    }\n  }\n  setupClippingContext(model, renderer) {\n    this._currentFrameNo++;\n    let usingClipCount = 0;\n    for (let clipIndex = 0; clipIndex < this._clippingContextListForMask.length; clipIndex++) {\n      const cc = this._clippingContextListForMask[clipIndex];\n      this.calcClippedDrawTotalBounds(model, cc);\n      if (cc._isUsing) {\n        usingClipCount++;\n      }\n    }\n    if (usingClipCount > 0) {\n      this.gl.viewport(0, 0, this._clippingMaskBufferSize, this._clippingMaskBufferSize);\n      this._maskRenderTexture = this.getMaskRenderTexture();\n      renderer.getMvpMatrix();\n      renderer.preDraw();\n      this.setupLayoutBounds(usingClipCount);\n      this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, this._maskRenderTexture);\n      this.gl.clearColor(1, 1, 1, 1);\n      this.gl.clear(this.gl.COLOR_BUFFER_BIT);\n      for (let clipIndex = 0; clipIndex < this._clippingContextListForMask.length; clipIndex++) {\n        const clipContext = this._clippingContextListForMask[clipIndex];\n        const allClipedDrawRect = clipContext._allClippedDrawRect;\n        const layoutBoundsOnTex01 = clipContext._layoutBounds;\n        const MARGIN = 0.05;\n        this._tmpBoundsOnModel.setRect(allClipedDrawRect);\n        this._tmpBoundsOnModel.expand(allClipedDrawRect.width * MARGIN, allClipedDrawRect.height * MARGIN);\n        const scaleX = layoutBoundsOnTex01.width / this._tmpBoundsOnModel.width;\n        const scaleY = layoutBoundsOnTex01.height / this._tmpBoundsOnModel.height;\n        {\n          this._tmpMatrix.loadIdentity();\n          {\n            this._tmpMatrix.translateRelative(-1, -1);\n            this._tmpMatrix.scaleRelative(2, 2);\n          }\n          {\n            this._tmpMatrix.translateRelative(layoutBoundsOnTex01.x, layoutBoundsOnTex01.y);\n            this._tmpMatrix.scaleRelative(scaleX, scaleY);\n            this._tmpMatrix.translateRelative(-this._tmpBoundsOnModel.x, -this._tmpBoundsOnModel.y);\n          }\n          this._tmpMatrixForMask.setMatrix(this._tmpMatrix.getArray());\n        }\n        {\n          this._tmpMatrix.loadIdentity();\n          {\n            this._tmpMatrix.translateRelative(layoutBoundsOnTex01.x, layoutBoundsOnTex01.y);\n            this._tmpMatrix.scaleRelative(scaleX, scaleY);\n            this._tmpMatrix.translateRelative(-this._tmpBoundsOnModel.x, -this._tmpBoundsOnModel.y);\n          }\n          this._tmpMatrixForDraw.setMatrix(this._tmpMatrix.getArray());\n        }\n        clipContext._matrixForMask.setMatrix(this._tmpMatrixForMask.getArray());\n        clipContext._matrixForDraw.setMatrix(this._tmpMatrixForDraw.getArray());\n        const clipDrawCount = clipContext._clippingIdCount;\n        for (let i = 0; i < clipDrawCount; i++) {\n          const clipDrawIndex = clipContext._clippingIdList[i];\n          if (!model.getDrawableDynamicFlagVertexPositionsDidChange(clipDrawIndex)) {\n            continue;\n          }\n          renderer.setIsCulling(model.getDrawableCulling(clipDrawIndex) != false);\n          renderer.setClippingContextBufferForMask(clipContext);\n          renderer.drawMesh(model.getDrawableTextureIndices(clipDrawIndex), model.getDrawableVertexIndexCount(clipDrawIndex), model.getDrawableVertexCount(clipDrawIndex), model.getDrawableVertexIndices(clipDrawIndex), model.getDrawableVertices(clipDrawIndex), model.getDrawableVertexUvs(clipDrawIndex), model.getDrawableOpacity(clipDrawIndex), CubismBlendMode.CubismBlendMode_Normal, false);\n        }\n      }\n      this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, s_fbo);\n      renderer.setClippingContextBufferForMask(null);\n      this.gl.viewport(s_viewport[0], s_viewport[1], s_viewport[2], s_viewport[3]);\n    }\n  }\n  findSameClip(drawableMasks, drawableMaskCounts) {\n    for (let i = 0; i < this._clippingContextListForMask.length; i++) {\n      const clippingContext = this._clippingContextListForMask[i];\n      const count = clippingContext._clippingIdCount;\n      if (count != drawableMaskCounts) {\n        continue;\n      }\n      let sameCount = 0;\n      for (let j = 0; j < count; j++) {\n        const clipId = clippingContext._clippingIdList[j];\n        for (let k = 0; k < count; k++) {\n          if (drawableMasks[k] == clipId) {\n            sameCount++;\n            break;\n          }\n        }\n      }\n      if (sameCount == count) {\n        return clippingContext;\n      }\n    }\n    return null;\n  }\n  setupLayoutBounds(usingClipCount) {\n    let div = usingClipCount / ColorChannelCount;\n    let mod = usingClipCount % ColorChannelCount;\n    div = ~~div;\n    mod = ~~mod;\n    let curClipIndex = 0;\n    for (let channelNo = 0; channelNo < ColorChannelCount; channelNo++) {\n      const layoutCount = div + (channelNo < mod ? 1 : 0);\n      if (layoutCount == 0) ;else if (layoutCount == 1) {\n        const clipContext = this._clippingContextListForMask[curClipIndex++];\n        clipContext._layoutChannelNo = channelNo;\n        clipContext._layoutBounds.x = 0;\n        clipContext._layoutBounds.y = 0;\n        clipContext._layoutBounds.width = 1;\n        clipContext._layoutBounds.height = 1;\n      } else if (layoutCount == 2) {\n        for (let i = 0; i < layoutCount; i++) {\n          let xpos = i % 2;\n          xpos = ~~xpos;\n          const cc = this._clippingContextListForMask[curClipIndex++];\n          cc._layoutChannelNo = channelNo;\n          cc._layoutBounds.x = xpos * 0.5;\n          cc._layoutBounds.y = 0;\n          cc._layoutBounds.width = 0.5;\n          cc._layoutBounds.height = 1;\n        }\n      } else if (layoutCount <= 4) {\n        for (let i = 0; i < layoutCount; i++) {\n          let xpos = i % 2;\n          let ypos = i / 2;\n          xpos = ~~xpos;\n          ypos = ~~ypos;\n          const cc = this._clippingContextListForMask[curClipIndex++];\n          cc._layoutChannelNo = channelNo;\n          cc._layoutBounds.x = xpos * 0.5;\n          cc._layoutBounds.y = ypos * 0.5;\n          cc._layoutBounds.width = 0.5;\n          cc._layoutBounds.height = 0.5;\n        }\n      } else if (layoutCount <= 9) {\n        for (let i = 0; i < layoutCount; i++) {\n          let xpos = i % 3;\n          let ypos = i / 3;\n          xpos = ~~xpos;\n          ypos = ~~ypos;\n          const cc = this._clippingContextListForMask[curClipIndex++];\n          cc._layoutChannelNo = channelNo;\n          cc._layoutBounds.x = xpos / 3;\n          cc._layoutBounds.y = ypos / 3;\n          cc._layoutBounds.width = 1 / 3;\n          cc._layoutBounds.height = 1 / 3;\n        }\n      } else if (CubismConfig.supportMoreMaskDivisions && layoutCount <= 16) {\n        for (let i = 0; i < layoutCount; i++) {\n          let xpos = i % 4;\n          let ypos = i / 4;\n          xpos = ~~xpos;\n          ypos = ~~ypos;\n          const cc = this._clippingContextListForMask[curClipIndex++];\n          cc._layoutChannelNo = channelNo;\n          cc._layoutBounds.x = xpos / 4;\n          cc._layoutBounds.y = ypos / 4;\n          cc._layoutBounds.width = 1 / 4;\n          cc._layoutBounds.height = 1 / 4;\n        }\n      } else {\n        CubismLogError(\"not supported mask count : {0}\", layoutCount);\n      }\n    }\n  }\n  getColorBuffer() {\n    return this._colorBuffer;\n  }\n  getClippingContextListForDraw() {\n    return this._clippingContextListForDraw;\n  }\n  setClippingMaskBufferSize(size) {\n    this._clippingMaskBufferSize = size;\n  }\n  getClippingMaskBufferSize() {\n    return this._clippingMaskBufferSize;\n  }\n}\nclass CubismRenderTextureResource {\n  constructor(frameNo, texture) {\n    this.frameNo = frameNo;\n    this.texture = texture;\n  }\n}\nclass CubismClippingContext {\n  constructor(manager, clippingDrawableIndices, clipCount) {\n    this._isUsing = false;\n    this._owner = manager;\n    this._clippingIdList = clippingDrawableIndices;\n    this._clippingIdCount = clipCount;\n    this._allClippedDrawRect = new csmRect();\n    this._layoutBounds = new csmRect();\n    this._clippedDrawableIndexList = [];\n    this._matrixForMask = new CubismMatrix44();\n    this._matrixForDraw = new CubismMatrix44();\n  }\n  release() {\n    const self = this;\n    self._layoutBounds = void 0;\n    self._allClippedDrawRect = void 0;\n    self._clippedDrawableIndexList = void 0;\n  }\n  addClippedDrawable(drawableIndex) {\n    this._clippedDrawableIndexList.push(drawableIndex);\n  }\n  getClippingManager() {\n    return this._owner;\n  }\n  setGl(gl) {\n    this._owner.setGL(gl);\n  }\n}\nclass CubismShader_WebGL {\n  static getInstance() {\n    if (s_instance == null) {\n      s_instance = new CubismShader_WebGL();\n      return s_instance;\n    }\n    return s_instance;\n  }\n  static deleteInstance() {\n    if (s_instance) {\n      s_instance.release();\n      s_instance = void 0;\n    }\n  }\n  constructor() {\n    this._shaderSets = [];\n  }\n  release() {\n    this.releaseShaderProgram();\n  }\n  setupShaderProgram(renderer, textureId, vertexCount, vertexArray, indexArray, uvArray, bufferData, opacity, colorBlendMode, baseColor, isPremultipliedAlpha, matrix4x4, invertedMask) {\n    if (!isPremultipliedAlpha) {\n      CubismLogError(\"NoPremultipliedAlpha is not allowed\");\n    }\n    if (this._shaderSets.length == 0) {\n      this.generateShaders();\n    }\n    let SRC_COLOR;\n    let DST_COLOR;\n    let SRC_ALPHA;\n    let DST_ALPHA;\n    const clippingContextBufferForMask = renderer.getClippingContextBufferForMask();\n    if (clippingContextBufferForMask != null) {\n      const shaderSet = this._shaderSets[ShaderNames.ShaderNames_SetupMask];\n      this.gl.useProgram(shaderSet.shaderProgram);\n      this.gl.activeTexture(this.gl.TEXTURE0);\n      this.gl.bindTexture(this.gl.TEXTURE_2D, textureId);\n      this.gl.uniform1i(shaderSet.samplerTexture0Location, 0);\n      if (bufferData.vertex == null) {\n        bufferData.vertex = this.gl.createBuffer();\n      }\n      this.gl.bindBuffer(this.gl.ARRAY_BUFFER, bufferData.vertex);\n      this.gl.bufferData(this.gl.ARRAY_BUFFER, vertexArray, this.gl.DYNAMIC_DRAW);\n      this.gl.enableVertexAttribArray(shaderSet.attributePositionLocation);\n      this.gl.vertexAttribPointer(shaderSet.attributePositionLocation, 2, this.gl.FLOAT, false, 0, 0);\n      if (bufferData.uv == null) {\n        bufferData.uv = this.gl.createBuffer();\n      }\n      this.gl.bindBuffer(this.gl.ARRAY_BUFFER, bufferData.uv);\n      this.gl.bufferData(this.gl.ARRAY_BUFFER, uvArray, this.gl.DYNAMIC_DRAW);\n      this.gl.enableVertexAttribArray(shaderSet.attributeTexCoordLocation);\n      this.gl.vertexAttribPointer(shaderSet.attributeTexCoordLocation, 2, this.gl.FLOAT, false, 0, 0);\n      const channelNo = clippingContextBufferForMask._layoutChannelNo;\n      const colorChannel = clippingContextBufferForMask.getClippingManager().getChannelFlagAsColor(channelNo);\n      this.gl.uniform4f(shaderSet.uniformChannelFlagLocation, colorChannel.R, colorChannel.G, colorChannel.B, colorChannel.A);\n      this.gl.uniformMatrix4fv(shaderSet.uniformClipMatrixLocation, false, clippingContextBufferForMask._matrixForMask.getArray());\n      const rect = clippingContextBufferForMask._layoutBounds;\n      this.gl.uniform4f(shaderSet.uniformBaseColorLocation, rect.x * 2 - 1, rect.y * 2 - 1, rect.getRight() * 2 - 1, rect.getBottom() * 2 - 1);\n      SRC_COLOR = this.gl.ZERO;\n      DST_COLOR = this.gl.ONE_MINUS_SRC_COLOR;\n      SRC_ALPHA = this.gl.ZERO;\n      DST_ALPHA = this.gl.ONE_MINUS_SRC_ALPHA;\n    } else {\n      const clippingContextBufferForDraw = renderer.getClippingContextBufferForDraw();\n      const masked = clippingContextBufferForDraw != null;\n      const offset = masked ? invertedMask ? 2 : 1 : 0;\n      let shaderSet;\n      switch (colorBlendMode) {\n        case CubismBlendMode.CubismBlendMode_Normal:\n        default:\n          shaderSet = this._shaderSets[ShaderNames.ShaderNames_NormalPremultipliedAlpha + offset];\n          SRC_COLOR = this.gl.ONE;\n          DST_COLOR = this.gl.ONE_MINUS_SRC_ALPHA;\n          SRC_ALPHA = this.gl.ONE;\n          DST_ALPHA = this.gl.ONE_MINUS_SRC_ALPHA;\n          break;\n        case CubismBlendMode.CubismBlendMode_Additive:\n          shaderSet = this._shaderSets[ShaderNames.ShaderNames_AddPremultipliedAlpha + offset];\n          SRC_COLOR = this.gl.ONE;\n          DST_COLOR = this.gl.ONE;\n          SRC_ALPHA = this.gl.ZERO;\n          DST_ALPHA = this.gl.ONE;\n          break;\n        case CubismBlendMode.CubismBlendMode_Multiplicative:\n          shaderSet = this._shaderSets[ShaderNames.ShaderNames_MultPremultipliedAlpha + offset];\n          SRC_COLOR = this.gl.DST_COLOR;\n          DST_COLOR = this.gl.ONE_MINUS_SRC_ALPHA;\n          SRC_ALPHA = this.gl.ZERO;\n          DST_ALPHA = this.gl.ONE;\n          break;\n      }\n      this.gl.useProgram(shaderSet.shaderProgram);\n      if (bufferData.vertex == null) {\n        bufferData.vertex = this.gl.createBuffer();\n      }\n      this.gl.bindBuffer(this.gl.ARRAY_BUFFER, bufferData.vertex);\n      this.gl.bufferData(this.gl.ARRAY_BUFFER, vertexArray, this.gl.DYNAMIC_DRAW);\n      this.gl.enableVertexAttribArray(shaderSet.attributePositionLocation);\n      this.gl.vertexAttribPointer(shaderSet.attributePositionLocation, 2, this.gl.FLOAT, false, 0, 0);\n      if (bufferData.uv == null) {\n        bufferData.uv = this.gl.createBuffer();\n      }\n      this.gl.bindBuffer(this.gl.ARRAY_BUFFER, bufferData.uv);\n      this.gl.bufferData(this.gl.ARRAY_BUFFER, uvArray, this.gl.DYNAMIC_DRAW);\n      this.gl.enableVertexAttribArray(shaderSet.attributeTexCoordLocation);\n      this.gl.vertexAttribPointer(shaderSet.attributeTexCoordLocation, 2, this.gl.FLOAT, false, 0, 0);\n      if (clippingContextBufferForDraw != null) {\n        this.gl.activeTexture(this.gl.TEXTURE1);\n        const tex = clippingContextBufferForDraw.getClippingManager().getColorBuffer();\n        this.gl.bindTexture(this.gl.TEXTURE_2D, tex);\n        this.gl.uniform1i(shaderSet.samplerTexture1Location, 1);\n        this.gl.uniformMatrix4fv(shaderSet.uniformClipMatrixLocation, false, clippingContextBufferForDraw._matrixForDraw.getArray());\n        const channelNo = clippingContextBufferForDraw._layoutChannelNo;\n        const colorChannel = clippingContextBufferForDraw.getClippingManager().getChannelFlagAsColor(channelNo);\n        this.gl.uniform4f(shaderSet.uniformChannelFlagLocation, colorChannel.R, colorChannel.G, colorChannel.B, colorChannel.A);\n      }\n      this.gl.activeTexture(this.gl.TEXTURE0);\n      this.gl.bindTexture(this.gl.TEXTURE_2D, textureId);\n      this.gl.uniform1i(shaderSet.samplerTexture0Location, 0);\n      this.gl.uniformMatrix4fv(shaderSet.uniformMatrixLocation, false, matrix4x4.getArray());\n      this.gl.uniform4f(shaderSet.uniformBaseColorLocation, baseColor.R, baseColor.G, baseColor.B, baseColor.A);\n    }\n    if (bufferData.index == null) {\n      bufferData.index = this.gl.createBuffer();\n    }\n    this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, bufferData.index);\n    this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER, indexArray, this.gl.DYNAMIC_DRAW);\n    this.gl.blendFuncSeparate(SRC_COLOR, DST_COLOR, SRC_ALPHA, DST_ALPHA);\n  }\n  releaseShaderProgram() {\n    for (let i = 0; i < this._shaderSets.length; i++) {\n      this.gl.deleteProgram(this._shaderSets[i].shaderProgram);\n      this._shaderSets[i].shaderProgram = 0;\n    }\n    this._shaderSets = [];\n  }\n  generateShaders() {\n    for (let i = 0; i < shaderCount; i++) {\n      this._shaderSets.push({});\n    }\n    this._shaderSets[0].shaderProgram = this.loadShaderProgram(vertexShaderSrcSetupMask, fragmentShaderSrcsetupMask);\n    this._shaderSets[1].shaderProgram = this.loadShaderProgram(vertexShaderSrc, fragmentShaderSrcPremultipliedAlpha);\n    this._shaderSets[2].shaderProgram = this.loadShaderProgram(vertexShaderSrcMasked, fragmentShaderSrcMaskPremultipliedAlpha);\n    this._shaderSets[3].shaderProgram = this.loadShaderProgram(vertexShaderSrcMasked, fragmentShaderSrcMaskInvertedPremultipliedAlpha);\n    this._shaderSets[4].shaderProgram = this._shaderSets[1].shaderProgram;\n    this._shaderSets[5].shaderProgram = this._shaderSets[2].shaderProgram;\n    this._shaderSets[6].shaderProgram = this._shaderSets[3].shaderProgram;\n    this._shaderSets[7].shaderProgram = this._shaderSets[1].shaderProgram;\n    this._shaderSets[8].shaderProgram = this._shaderSets[2].shaderProgram;\n    this._shaderSets[9].shaderProgram = this._shaderSets[3].shaderProgram;\n    this._shaderSets[0].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[0].shaderProgram, \"a_position\");\n    this._shaderSets[0].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[0].shaderProgram, \"a_texCoord\");\n    this._shaderSets[0].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[0].shaderProgram, \"s_texture0\");\n    this._shaderSets[0].uniformClipMatrixLocation = this.gl.getUniformLocation(this._shaderSets[0].shaderProgram, \"u_clipMatrix\");\n    this._shaderSets[0].uniformChannelFlagLocation = this.gl.getUniformLocation(this._shaderSets[0].shaderProgram, \"u_channelFlag\");\n    this._shaderSets[0].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[0].shaderProgram, \"u_baseColor\");\n    this._shaderSets[1].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[1].shaderProgram, \"a_position\");\n    this._shaderSets[1].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[1].shaderProgram, \"a_texCoord\");\n    this._shaderSets[1].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[1].shaderProgram, \"s_texture0\");\n    this._shaderSets[1].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[1].shaderProgram, \"u_matrix\");\n    this._shaderSets[1].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[1].shaderProgram, \"u_baseColor\");\n    this._shaderSets[2].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[2].shaderProgram, \"a_position\");\n    this._shaderSets[2].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[2].shaderProgram, \"a_texCoord\");\n    this._shaderSets[2].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[2].shaderProgram, \"s_texture0\");\n    this._shaderSets[2].samplerTexture1Location = this.gl.getUniformLocation(this._shaderSets[2].shaderProgram, \"s_texture1\");\n    this._shaderSets[2].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[2].shaderProgram, \"u_matrix\");\n    this._shaderSets[2].uniformClipMatrixLocation = this.gl.getUniformLocation(this._shaderSets[2].shaderProgram, \"u_clipMatrix\");\n    this._shaderSets[2].uniformChannelFlagLocation = this.gl.getUniformLocation(this._shaderSets[2].shaderProgram, \"u_channelFlag\");\n    this._shaderSets[2].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[2].shaderProgram, \"u_baseColor\");\n    this._shaderSets[3].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[3].shaderProgram, \"a_position\");\n    this._shaderSets[3].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[3].shaderProgram, \"a_texCoord\");\n    this._shaderSets[3].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[3].shaderProgram, \"s_texture0\");\n    this._shaderSets[3].samplerTexture1Location = this.gl.getUniformLocation(this._shaderSets[3].shaderProgram, \"s_texture1\");\n    this._shaderSets[3].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[3].shaderProgram, \"u_matrix\");\n    this._shaderSets[3].uniformClipMatrixLocation = this.gl.getUniformLocation(this._shaderSets[3].shaderProgram, \"u_clipMatrix\");\n    this._shaderSets[3].uniformChannelFlagLocation = this.gl.getUniformLocation(this._shaderSets[3].shaderProgram, \"u_channelFlag\");\n    this._shaderSets[3].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[3].shaderProgram, \"u_baseColor\");\n    this._shaderSets[4].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[4].shaderProgram, \"a_position\");\n    this._shaderSets[4].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[4].shaderProgram, \"a_texCoord\");\n    this._shaderSets[4].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[4].shaderProgram, \"s_texture0\");\n    this._shaderSets[4].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[4].shaderProgram, \"u_matrix\");\n    this._shaderSets[4].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[4].shaderProgram, \"u_baseColor\");\n    this._shaderSets[5].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[5].shaderProgram, \"a_position\");\n    this._shaderSets[5].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[5].shaderProgram, \"a_texCoord\");\n    this._shaderSets[5].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[5].shaderProgram, \"s_texture0\");\n    this._shaderSets[5].samplerTexture1Location = this.gl.getUniformLocation(this._shaderSets[5].shaderProgram, \"s_texture1\");\n    this._shaderSets[5].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[5].shaderProgram, \"u_matrix\");\n    this._shaderSets[5].uniformClipMatrixLocation = this.gl.getUniformLocation(this._shaderSets[5].shaderProgram, \"u_clipMatrix\");\n    this._shaderSets[5].uniformChannelFlagLocation = this.gl.getUniformLocation(this._shaderSets[5].shaderProgram, \"u_channelFlag\");\n    this._shaderSets[5].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[5].shaderProgram, \"u_baseColor\");\n    this._shaderSets[6].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[6].shaderProgram, \"a_position\");\n    this._shaderSets[6].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[6].shaderProgram, \"a_texCoord\");\n    this._shaderSets[6].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[6].shaderProgram, \"s_texture0\");\n    this._shaderSets[6].samplerTexture1Location = this.gl.getUniformLocation(this._shaderSets[6].shaderProgram, \"s_texture1\");\n    this._shaderSets[6].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[6].shaderProgram, \"u_matrix\");\n    this._shaderSets[6].uniformClipMatrixLocation = this.gl.getUniformLocation(this._shaderSets[6].shaderProgram, \"u_clipMatrix\");\n    this._shaderSets[6].uniformChannelFlagLocation = this.gl.getUniformLocation(this._shaderSets[6].shaderProgram, \"u_channelFlag\");\n    this._shaderSets[6].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[6].shaderProgram, \"u_baseColor\");\n    this._shaderSets[7].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[7].shaderProgram, \"a_position\");\n    this._shaderSets[7].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[7].shaderProgram, \"a_texCoord\");\n    this._shaderSets[7].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[7].shaderProgram, \"s_texture0\");\n    this._shaderSets[7].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[7].shaderProgram, \"u_matrix\");\n    this._shaderSets[7].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[7].shaderProgram, \"u_baseColor\");\n    this._shaderSets[8].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[8].shaderProgram, \"a_position\");\n    this._shaderSets[8].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[8].shaderProgram, \"a_texCoord\");\n    this._shaderSets[8].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[8].shaderProgram, \"s_texture0\");\n    this._shaderSets[8].samplerTexture1Location = this.gl.getUniformLocation(this._shaderSets[8].shaderProgram, \"s_texture1\");\n    this._shaderSets[8].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[8].shaderProgram, \"u_matrix\");\n    this._shaderSets[8].uniformClipMatrixLocation = this.gl.getUniformLocation(this._shaderSets[8].shaderProgram, \"u_clipMatrix\");\n    this._shaderSets[8].uniformChannelFlagLocation = this.gl.getUniformLocation(this._shaderSets[8].shaderProgram, \"u_channelFlag\");\n    this._shaderSets[8].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[8].shaderProgram, \"u_baseColor\");\n    this._shaderSets[9].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[9].shaderProgram, \"a_position\");\n    this._shaderSets[9].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[9].shaderProgram, \"a_texCoord\");\n    this._shaderSets[9].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[9].shaderProgram, \"s_texture0\");\n    this._shaderSets[9].samplerTexture1Location = this.gl.getUniformLocation(this._shaderSets[9].shaderProgram, \"s_texture1\");\n    this._shaderSets[9].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[9].shaderProgram, \"u_matrix\");\n    this._shaderSets[9].uniformClipMatrixLocation = this.gl.getUniformLocation(this._shaderSets[9].shaderProgram, \"u_clipMatrix\");\n    this._shaderSets[9].uniformChannelFlagLocation = this.gl.getUniformLocation(this._shaderSets[9].shaderProgram, \"u_channelFlag\");\n    this._shaderSets[9].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[9].shaderProgram, \"u_baseColor\");\n  }\n  loadShaderProgram(vertexShaderSource, fragmentShaderSource) {\n    let shaderProgram = this.gl.createProgram();\n    let vertShader = this.compileShaderSource(this.gl.VERTEX_SHADER, vertexShaderSource);\n    if (!vertShader) {\n      CubismLogError(\"Vertex shader compile error!\");\n      return 0;\n    }\n    let fragShader = this.compileShaderSource(this.gl.FRAGMENT_SHADER, fragmentShaderSource);\n    if (!fragShader) {\n      CubismLogError(\"Vertex shader compile error!\");\n      return 0;\n    }\n    this.gl.attachShader(shaderProgram, vertShader);\n    this.gl.attachShader(shaderProgram, fragShader);\n    this.gl.linkProgram(shaderProgram);\n    const linkStatus = this.gl.getProgramParameter(shaderProgram, this.gl.LINK_STATUS);\n    if (!linkStatus) {\n      CubismLogError(\"Failed to link program: {0}\", shaderProgram);\n      this.gl.deleteShader(vertShader);\n      this.gl.deleteShader(fragShader);\n      if (shaderProgram) {\n        this.gl.deleteProgram(shaderProgram);\n      }\n      return 0;\n    }\n    this.gl.deleteShader(vertShader);\n    this.gl.deleteShader(fragShader);\n    return shaderProgram;\n  }\n  compileShaderSource(shaderType, shaderSource) {\n    const source = shaderSource;\n    const shader = this.gl.createShader(shaderType);\n    this.gl.shaderSource(shader, source);\n    this.gl.compileShader(shader);\n    if (!shader) {\n      const log = this.gl.getShaderInfoLog(shader);\n      CubismLogError(\"Shader compile log: {0} \", log);\n    }\n    const status = this.gl.getShaderParameter(shader, this.gl.COMPILE_STATUS);\n    if (!status) {\n      this.gl.deleteShader(shader);\n      return null;\n    }\n    return shader;\n  }\n  setGl(gl) {\n    this.gl = gl;\n  }\n}\nvar ShaderNames = /* @__PURE__ */(ShaderNames2 => {\n  ShaderNames2[ShaderNames2[\"ShaderNames_SetupMask\"] = 0] = \"ShaderNames_SetupMask\";\n  ShaderNames2[ShaderNames2[\"ShaderNames_NormalPremultipliedAlpha\"] = 1] = \"ShaderNames_NormalPremultipliedAlpha\";\n  ShaderNames2[ShaderNames2[\"ShaderNames_NormalMaskedPremultipliedAlpha\"] = 2] = \"ShaderNames_NormalMaskedPremultipliedAlpha\";\n  ShaderNames2[ShaderNames2[\"ShaderNames_NomralMaskedInvertedPremultipliedAlpha\"] = 3] = \"ShaderNames_NomralMaskedInvertedPremultipliedAlpha\";\n  ShaderNames2[ShaderNames2[\"ShaderNames_AddPremultipliedAlpha\"] = 4] = \"ShaderNames_AddPremultipliedAlpha\";\n  ShaderNames2[ShaderNames2[\"ShaderNames_AddMaskedPremultipliedAlpha\"] = 5] = \"ShaderNames_AddMaskedPremultipliedAlpha\";\n  ShaderNames2[ShaderNames2[\"ShaderNames_AddMaskedPremultipliedAlphaInverted\"] = 6] = \"ShaderNames_AddMaskedPremultipliedAlphaInverted\";\n  ShaderNames2[ShaderNames2[\"ShaderNames_MultPremultipliedAlpha\"] = 7] = \"ShaderNames_MultPremultipliedAlpha\";\n  ShaderNames2[ShaderNames2[\"ShaderNames_MultMaskedPremultipliedAlpha\"] = 8] = \"ShaderNames_MultMaskedPremultipliedAlpha\";\n  ShaderNames2[ShaderNames2[\"ShaderNames_MultMaskedPremultipliedAlphaInverted\"] = 9] = \"ShaderNames_MultMaskedPremultipliedAlphaInverted\";\n  return ShaderNames2;\n})(ShaderNames || {});\nconst vertexShaderSrcSetupMask = \"attribute vec4     a_position;attribute vec2     a_texCoord;varying vec2       v_texCoord;varying vec4       v_myPos;uniform mat4       u_clipMatrix;void main(){   gl_Position = u_clipMatrix * a_position;   v_myPos = u_clipMatrix * a_position;   v_texCoord = a_texCoord;   v_texCoord.y = 1.0 - v_texCoord.y;}\";\nconst fragmentShaderSrcsetupMask = \"precision mediump float;varying vec2       v_texCoord;varying vec4       v_myPos;uniform vec4       u_baseColor;uniform vec4       u_channelFlag;uniform sampler2D  s_texture0;void main(){   float isInside =        step(u_baseColor.x, v_myPos.x/v_myPos.w)       * step(u_baseColor.y, v_myPos.y/v_myPos.w)       * step(v_myPos.x/v_myPos.w, u_baseColor.z)       * step(v_myPos.y/v_myPos.w, u_baseColor.w);   gl_FragColor = u_channelFlag * texture2D(s_texture0, v_texCoord).a * isInside;}\";\nconst vertexShaderSrc = \"attribute vec4     a_position;attribute vec2     a_texCoord;varying vec2       v_texCoord;uniform mat4       u_matrix;void main(){   gl_Position = u_matrix * a_position;   v_texCoord = a_texCoord;   v_texCoord.y = 1.0 - v_texCoord.y;}\";\nconst vertexShaderSrcMasked = \"attribute vec4     a_position;attribute vec2     a_texCoord;varying vec2       v_texCoord;varying vec4       v_clipPos;uniform mat4       u_matrix;uniform mat4       u_clipMatrix;void main(){   gl_Position = u_matrix * a_position;   v_clipPos = u_clipMatrix * a_position;   v_texCoord = a_texCoord;   v_texCoord.y = 1.0 - v_texCoord.y;}\";\nconst fragmentShaderSrcPremultipliedAlpha = \"precision mediump float;varying vec2       v_texCoord;uniform vec4       u_baseColor;uniform sampler2D  s_texture0;void main(){   gl_FragColor = texture2D(s_texture0 , v_texCoord) * u_baseColor;}\";\nconst fragmentShaderSrcMaskPremultipliedAlpha = \"precision mediump float;varying vec2       v_texCoord;varying vec4       v_clipPos;uniform vec4       u_baseColor;uniform vec4       u_channelFlag;uniform sampler2D  s_texture0;uniform sampler2D  s_texture1;void main(){   vec4 col_formask = texture2D(s_texture0 , v_texCoord) * u_baseColor;   vec4 clipMask = (1.0 - texture2D(s_texture1, v_clipPos.xy / v_clipPos.w)) * u_channelFlag;   float maskVal = clipMask.r + clipMask.g + clipMask.b + clipMask.a;   col_formask = col_formask * maskVal;   gl_FragColor = col_formask;}\";\nconst fragmentShaderSrcMaskInvertedPremultipliedAlpha = \"precision mediump float;varying vec2 v_texCoord;varying vec4 v_clipPos;uniform sampler2D s_texture0;uniform sampler2D s_texture1;uniform vec4 u_channelFlag;uniform vec4 u_baseColor;void main(){vec4 col_formask = texture2D(s_texture0, v_texCoord) * u_baseColor;vec4 clipMask = (1.0 - texture2D(s_texture1, v_clipPos.xy / v_clipPos.w)) * u_channelFlag;float maskVal = clipMask.r + clipMask.g + clipMask.b + clipMask.a;col_formask = col_formask * (1.0 - maskVal);gl_FragColor = col_formask;}\";\nclass CubismRenderer_WebGL extends CubismRenderer {\n  constructor() {\n    super();\n    this._clippingContextBufferForMask = null;\n    this._clippingContextBufferForDraw = null;\n    this._clippingManager = new CubismClippingManager_WebGL();\n    this.firstDraw = true;\n    this._textures = {};\n    this._sortedDrawableIndexList = [];\n    this._bufferData = {\n      vertex: null,\n      uv: null,\n      index: null\n    };\n  }\n  initialize(model) {\n    if (model.isUsingMasking()) {\n      this._clippingManager = new CubismClippingManager_WebGL();\n      this._clippingManager.initialize(model, model.getDrawableCount(), model.getDrawableMasks(), model.getDrawableMaskCounts());\n    }\n    for (let i = model.getDrawableCount() - 1; i >= 0; i--) {\n      this._sortedDrawableIndexList[i] = 0;\n    }\n    super.initialize(model);\n  }\n  bindTexture(modelTextureNo, glTexture) {\n    this._textures[modelTextureNo] = glTexture;\n  }\n  getBindedTextures() {\n    return this._textures;\n  }\n  setClippingMaskBufferSize(size) {\n    this._clippingManager.release();\n    this._clippingManager = new CubismClippingManager_WebGL();\n    this._clippingManager.setClippingMaskBufferSize(size);\n    this._clippingManager.initialize(this.getModel(), this.getModel().getDrawableCount(), this.getModel().getDrawableMasks(), this.getModel().getDrawableMaskCounts());\n  }\n  getClippingMaskBufferSize() {\n    return this._clippingManager.getClippingMaskBufferSize();\n  }\n  release() {\n    var _a, _b, _c;\n    const self = this;\n    this._clippingManager.release();\n    self._clippingManager = void 0;\n    (_a = this.gl) == null ? void 0 : _a.deleteBuffer(this._bufferData.vertex);\n    this._bufferData.vertex = null;\n    (_b = this.gl) == null ? void 0 : _b.deleteBuffer(this._bufferData.uv);\n    this._bufferData.uv = null;\n    (_c = this.gl) == null ? void 0 : _c.deleteBuffer(this._bufferData.index);\n    this._bufferData.index = null;\n    self._bufferData = void 0;\n    self._textures = void 0;\n  }\n  doDrawModel() {\n    this.preDraw();\n    if (this._clippingManager != null) {\n      this._clippingManager.setupClippingContext(this.getModel(), this);\n    }\n    const drawableCount = this.getModel().getDrawableCount();\n    const renderOrder = this.getModel().getDrawableRenderOrders();\n    for (let i = 0; i < drawableCount; ++i) {\n      const order = renderOrder[i];\n      this._sortedDrawableIndexList[order] = i;\n    }\n    for (let i = 0; i < drawableCount; ++i) {\n      const drawableIndex = this._sortedDrawableIndexList[i];\n      if (!this.getModel().getDrawableDynamicFlagIsVisible(drawableIndex)) {\n        continue;\n      }\n      this.setClippingContextBufferForDraw(this._clippingManager != null ? this._clippingManager.getClippingContextListForDraw()[drawableIndex] : null);\n      this.setIsCulling(this.getModel().getDrawableCulling(drawableIndex));\n      this.drawMesh(this.getModel().getDrawableTextureIndices(drawableIndex), this.getModel().getDrawableVertexIndexCount(drawableIndex), this.getModel().getDrawableVertexCount(drawableIndex), this.getModel().getDrawableVertexIndices(drawableIndex), this.getModel().getDrawableVertices(drawableIndex), this.getModel().getDrawableVertexUvs(drawableIndex), this.getModel().getDrawableOpacity(drawableIndex), this.getModel().getDrawableBlendMode(drawableIndex), this.getModel().getDrawableInvertedMaskBit(drawableIndex));\n    }\n  }\n  drawMesh(textureNo, indexCount, vertexCount, indexArray, vertexArray, uvArray, opacity, colorBlendMode, invertedMask) {\n    if (this.isCulling()) {\n      this.gl.enable(this.gl.CULL_FACE);\n    } else {\n      this.gl.disable(this.gl.CULL_FACE);\n    }\n    this.gl.frontFace(this.gl.CCW);\n    const modelColorRGBA = this.getModelColor();\n    if (this.getClippingContextBufferForMask() == null) {\n      modelColorRGBA.A *= opacity;\n      if (this.isPremultipliedAlpha()) {\n        modelColorRGBA.R *= modelColorRGBA.A;\n        modelColorRGBA.G *= modelColorRGBA.A;\n        modelColorRGBA.B *= modelColorRGBA.A;\n      }\n    }\n    let drawtexture = null;\n    if (this._textures[textureNo] != null) {\n      drawtexture = this._textures[textureNo];\n    }\n    CubismShader_WebGL.getInstance().setupShaderProgram(this, drawtexture, vertexCount, vertexArray, indexArray, uvArray, this._bufferData, opacity, colorBlendMode, modelColorRGBA, this.isPremultipliedAlpha(), this.getMvpMatrix(), invertedMask);\n    this.gl.drawElements(this.gl.TRIANGLES, indexCount, this.gl.UNSIGNED_SHORT, 0);\n    this.gl.useProgram(null);\n    this.setClippingContextBufferForDraw(null);\n    this.setClippingContextBufferForMask(null);\n  }\n  static doStaticRelease() {\n    CubismShader_WebGL.deleteInstance();\n  }\n  setRenderState(fbo, viewport) {\n    s_fbo = fbo;\n    s_viewport = viewport;\n  }\n  preDraw() {\n    if (this.firstDraw) {\n      this.firstDraw = false;\n      this._anisortopy = this.gl.getExtension(\"EXT_texture_filter_anisotropic\") || this.gl.getExtension(\"WEBKIT_EXT_texture_filter_anisotropic\") || this.gl.getExtension(\"MOZ_EXT_texture_filter_anisotropic\");\n    }\n    this.gl.disable(this.gl.SCISSOR_TEST);\n    this.gl.disable(this.gl.STENCIL_TEST);\n    this.gl.disable(this.gl.DEPTH_TEST);\n    this.gl.frontFace(this.gl.CW);\n    this.gl.enable(this.gl.BLEND);\n    this.gl.colorMask(true, true, true, true);\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, null);\n    this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, null);\n  }\n  setClippingContextBufferForMask(clip) {\n    this._clippingContextBufferForMask = clip;\n  }\n  getClippingContextBufferForMask() {\n    return this._clippingContextBufferForMask;\n  }\n  setClippingContextBufferForDraw(clip) {\n    this._clippingContextBufferForDraw = clip;\n  }\n  getClippingContextBufferForDraw() {\n    return this._clippingContextBufferForDraw;\n  }\n  startUp(gl) {\n    this.gl = gl;\n    this._clippingManager.setGL(gl);\n    CubismShader_WebGL.getInstance().setGl(gl);\n  }\n}\nCubismRenderer.staticRelease = () => {\n  CubismRenderer_WebGL.doStaticRelease();\n};\nclass CubismModelSettingsJson {\n  constructor(json) {\n    this.groups = json.Groups;\n    this.hitAreas = json.HitAreas;\n    this.layout = json.Layout;\n    this.moc = json.FileReferences.Moc;\n    this.expressions = json.FileReferences.Expressions;\n    this.motions = json.FileReferences.Motions;\n    this.textures = json.FileReferences.Textures;\n    this.physics = json.FileReferences.Physics;\n    this.pose = json.FileReferences.Pose;\n  }\n  getEyeBlinkParameters() {\n    var _a, _b;\n    return (_b = (_a = this.groups) == null ? void 0 : _a.find(group => group.Name === \"EyeBlink\")) == null ? void 0 : _b.Ids;\n  }\n  getLipSyncParameters() {\n    var _a, _b;\n    return (_b = (_a = this.groups) == null ? void 0 : _a.find(group => group.Name === \"LipSync\")) == null ? void 0 : _b.Ids;\n  }\n}\nconst HitAreaPrefix = \"HitArea\";\nconst HitAreaHead = \"Head\";\nconst HitAreaBody = \"Body\";\nconst PartsIdCore = \"Parts01Core\";\nconst PartsArmPrefix = \"Parts01Arm_\";\nconst PartsArmLPrefix = \"Parts01ArmL_\";\nconst PartsArmRPrefix = \"Parts01ArmR_\";\nconst ParamAngleX = \"ParamAngleX\";\nconst ParamAngleY = \"ParamAngleY\";\nconst ParamAngleZ = \"ParamAngleZ\";\nconst ParamEyeLOpen = \"ParamEyeLOpen\";\nconst ParamEyeLSmile = \"ParamEyeLSmile\";\nconst ParamEyeROpen = \"ParamEyeROpen\";\nconst ParamEyeRSmile = \"ParamEyeRSmile\";\nconst ParamEyeBallX = \"ParamEyeBallX\";\nconst ParamEyeBallY = \"ParamEyeBallY\";\nconst ParamEyeBallForm = \"ParamEyeBallForm\";\nconst ParamBrowLY = \"ParamBrowLY\";\nconst ParamBrowRY = \"ParamBrowRY\";\nconst ParamBrowLX = \"ParamBrowLX\";\nconst ParamBrowRX = \"ParamBrowRX\";\nconst ParamBrowLAngle = \"ParamBrowLAngle\";\nconst ParamBrowRAngle = \"ParamBrowRAngle\";\nconst ParamBrowLForm = \"ParamBrowLForm\";\nconst ParamBrowRForm = \"ParamBrowRForm\";\nconst ParamMouthForm = \"ParamMouthForm\";\nconst ParamMouthOpenY = \"ParamMouthOpenY\";\nconst ParamCheek = \"ParamCheek\";\nconst ParamBodyAngleX = \"ParamBodyAngleX\";\nconst ParamBodyAngleY = \"ParamBodyAngleY\";\nconst ParamBodyAngleZ = \"ParamBodyAngleZ\";\nconst ParamBreath = \"ParamBreath\";\nconst ParamArmLA = \"ParamArmLA\";\nconst ParamArmRA = \"ParamArmRA\";\nconst ParamArmLB = \"ParamArmLB\";\nconst ParamArmRB = \"ParamArmRB\";\nconst ParamHandL = \"ParamHandL\";\nconst ParamHandR = \"ParamHandR\";\nconst ParamHairFront = \"ParamHairFront\";\nconst ParamHairSide = \"ParamHairSide\";\nconst ParamHairBack = \"ParamHairBack\";\nconst ParamHairFluffy = \"ParamHairFluffy\";\nconst ParamShoulderY = \"ParamShoulderY\";\nconst ParamBustX = \"ParamBustX\";\nconst ParamBustY = \"ParamBustY\";\nconst ParamBaseX = \"ParamBaseX\";\nconst ParamBaseY = \"ParamBaseY\";\nconst ParamNONE = \"NONE:\";\nconst LOGICAL_WIDTH = 2;\nconst LOGICAL_HEIGHT = 2;\nvar config;\n(config2 => {\n  config2.LOG_LEVEL_VERBOSE = 0;\n  config2.LOG_LEVEL_WARNING = 1;\n  config2.LOG_LEVEL_ERROR = 2;\n  config2.LOG_LEVEL_NONE = 999;\n  config2.logLevel = config2.LOG_LEVEL_WARNING;\n  config2.sound = true;\n  config2.motionSync = true;\n  config2.motionFadingDuration = 500;\n  config2.idleMotionFadingDuration = 2e3;\n  config2.expressionFadingDuration = 500;\n  config2.preserveExpressionOnMotion = true;\n  config2.cubism4 = CubismConfig;\n})(config || (config = {}));\nconst VERSION = \"0.4.0\";\nconst logger = {\n  log(tag, ...messages) {\n    if (config.logLevel <= config.LOG_LEVEL_VERBOSE) {\n      console.log(`[${tag}]`, ...messages);\n    }\n  },\n  warn(tag, ...messages) {\n    if (config.logLevel <= config.LOG_LEVEL_WARNING) {\n      console.warn(`[${tag}]`, ...messages);\n    }\n  },\n  error(tag, ...messages) {\n    if (config.logLevel <= config.LOG_LEVEL_ERROR) {\n      console.error(`[${tag}]`, ...messages);\n    }\n  }\n};\nfunction clamp(num, lower, upper) {\n  return num < lower ? lower : num > upper ? upper : num;\n}\nfunction rand(min, max) {\n  return Math.random() * (max - min) + min;\n}\nfunction copyProperty(type, from, to, fromKey, toKey) {\n  const value = from[fromKey];\n  if (value !== null && typeof value === type) {\n    to[toKey] = value;\n  }\n}\nfunction copyArray(type, from, to, fromKey, toKey) {\n  const array = from[fromKey];\n  if (Array.isArray(array)) {\n    to[toKey] = array.filter(item => item !== null && typeof item === type);\n  }\n}\nfunction applyMixins(derivedCtor, baseCtors) {\n  baseCtors.forEach(baseCtor => {\n    Object.getOwnPropertyNames(baseCtor.prototype).forEach(name => {\n      if (name !== \"constructor\") {\n        Object.defineProperty(derivedCtor.prototype, name, Object.getOwnPropertyDescriptor(baseCtor.prototype, name));\n      }\n    });\n  });\n}\nfunction folderName(url2) {\n  let lastSlashIndex = url2.lastIndexOf(\"/\");\n  if (lastSlashIndex != -1) {\n    url2 = url2.slice(0, lastSlashIndex);\n  }\n  lastSlashIndex = url2.lastIndexOf(\"/\");\n  if (lastSlashIndex !== -1) {\n    url2 = url2.slice(lastSlashIndex + 1);\n  }\n  return url2;\n}\nfunction remove(array, item) {\n  const index = array.indexOf(item);\n  if (index !== -1) {\n    array.splice(index, 1);\n  }\n}\nclass ExpressionManager extends EventEmitter {\n  constructor(settings, options) {\n    super();\n    this.expressions = [];\n    this.reserveExpressionIndex = -1;\n    this.destroyed = false;\n    this.settings = settings;\n    this.tag = `ExpressionManager(${settings.name})`;\n  }\n  init() {\n    this.defaultExpression = this.createExpression({}, void 0);\n    this.currentExpression = this.defaultExpression;\n    this.stopAllExpressions();\n  }\n  loadExpression(index) {\n    return __async(this, null, function* () {\n      if (!this.definitions[index]) {\n        logger.warn(this.tag, `Undefined expression at [${index}]`);\n        return void 0;\n      }\n      if (this.expressions[index] === null) {\n        logger.warn(this.tag, `Cannot set expression at [${index}] because it's already failed in loading.`);\n        return void 0;\n      }\n      if (this.expressions[index]) {\n        return this.expressions[index];\n      }\n      const expression = yield this._loadExpression(index);\n      this.expressions[index] = expression;\n      return expression;\n    });\n  }\n  _loadExpression(index) {\n    throw new Error(\"Not implemented.\");\n  }\n  setRandomExpression() {\n    return __async(this, null, function* () {\n      if (this.definitions.length) {\n        const availableIndices = [];\n        for (let i = 0; i < this.definitions.length; i++) {\n          if (this.expressions[i] !== null && this.expressions[i] !== this.currentExpression && i !== this.reserveExpressionIndex) {\n            availableIndices.push(i);\n          }\n        }\n        if (availableIndices.length) {\n          const index = Math.floor(Math.random() * availableIndices.length);\n          return this.setExpression(index);\n        }\n      }\n      return false;\n    });\n  }\n  resetExpression() {\n    this._setExpression(this.defaultExpression);\n  }\n  restoreExpression() {\n    this._setExpression(this.currentExpression);\n  }\n  setExpression(index) {\n    return __async(this, null, function* () {\n      if (typeof index !== \"number\") {\n        index = this.getExpressionIndex(index);\n      }\n      if (!(index > -1 && index < this.definitions.length)) {\n        return false;\n      }\n      if (index === this.expressions.indexOf(this.currentExpression)) {\n        return false;\n      }\n      this.reserveExpressionIndex = index;\n      const expression = yield this.loadExpression(index);\n      if (!expression || this.reserveExpressionIndex !== index) {\n        return false;\n      }\n      this.reserveExpressionIndex = -1;\n      this.currentExpression = expression;\n      this._setExpression(expression);\n      return true;\n    });\n  }\n  update(model, now) {\n    if (!this.isFinished()) {\n      return this.updateParameters(model, now);\n    }\n    return false;\n  }\n  destroy() {\n    this.destroyed = true;\n    this.emit(\"destroy\");\n    const self = this;\n    self.definitions = void 0;\n    self.expressions = void 0;\n  }\n}\nconst EPSILON = 0.01;\nconst MAX_SPEED = 40 / 7.5;\nconst ACCELERATION_TIME = 1 / (0.15 * 1e3);\nclass FocusController {\n  constructor() {\n    this.targetX = 0;\n    this.targetY = 0;\n    this.x = 0;\n    this.y = 0;\n    this.vx = 0;\n    this.vy = 0;\n  }\n  focus(x, y, instant = false) {\n    this.targetX = clamp(x, -1, 1);\n    this.targetY = clamp(y, -1, 1);\n    if (instant) {\n      this.x = this.targetX;\n      this.y = this.targetY;\n    }\n  }\n  update(dt) {\n    const dx = this.targetX - this.x;\n    const dy = this.targetY - this.y;\n    if (Math.abs(dx) < EPSILON && Math.abs(dy) < EPSILON) return;\n    const d = Math.sqrt(__pow(dx, 2) + __pow(dy, 2));\n    const maxSpeed = MAX_SPEED / (1e3 / dt);\n    let ax = maxSpeed * (dx / d) - this.vx;\n    let ay = maxSpeed * (dy / d) - this.vy;\n    const a = Math.sqrt(__pow(ax, 2) + __pow(ay, 2));\n    const maxA = maxSpeed * ACCELERATION_TIME * dt;\n    if (a > maxA) {\n      ax *= maxA / a;\n      ay *= maxA / a;\n    }\n    this.vx += ax;\n    this.vy += ay;\n    const v = Math.sqrt(__pow(this.vx, 2) + __pow(this.vy, 2));\n    const maxV = 0.5 * (Math.sqrt(__pow(maxA, 2) + 8 * maxA * d) - maxA);\n    if (v > maxV) {\n      this.vx *= maxV / v;\n      this.vy *= maxV / v;\n    }\n    this.x += this.vx;\n    this.y += this.vy;\n  }\n}\nclass ModelSettings {\n  constructor(json) {\n    this.json = json;\n    let url2 = json.url;\n    if (typeof url2 !== \"string\") {\n      throw new TypeError(\"The `url` field in settings JSON must be defined as a string.\");\n    }\n    this.url = url2;\n    this.name = folderName(this.url);\n  }\n  resolveURL(path) {\n    return url.resolve(this.url, path);\n  }\n  replaceFiles(replacer) {\n    this.moc = replacer(this.moc, \"moc\");\n    if (this.pose !== void 0) {\n      this.pose = replacer(this.pose, \"pose\");\n    }\n    if (this.physics !== void 0) {\n      this.physics = replacer(this.physics, \"physics\");\n    }\n    for (let i = 0; i < this.textures.length; i++) {\n      this.textures[i] = replacer(this.textures[i], `textures[${i}]`);\n    }\n  }\n  getDefinedFiles() {\n    const files = [];\n    this.replaceFiles(file => {\n      files.push(file);\n      return file;\n    });\n    return files;\n  }\n  validateFiles(files) {\n    const assertFileExists = (expectedFile, shouldThrow) => {\n      const actualPath = this.resolveURL(expectedFile);\n      if (!files.includes(actualPath)) {\n        if (shouldThrow) {\n          throw new Error(`File \"${expectedFile}\" is defined in settings, but doesn't exist in given files`);\n        }\n        return false;\n      }\n      return true;\n    };\n    const essentialFiles = [this.moc, ...this.textures];\n    essentialFiles.forEach(texture => assertFileExists(texture, true));\n    const definedFiles = this.getDefinedFiles();\n    return definedFiles.filter(file => assertFileExists(file, false));\n  }\n}\nvar MotionPriority = /* @__PURE__ */(MotionPriority2 => {\n  MotionPriority2[MotionPriority2[\"NONE\"] = 0] = \"NONE\";\n  MotionPriority2[MotionPriority2[\"IDLE\"] = 1] = \"IDLE\";\n  MotionPriority2[MotionPriority2[\"NORMAL\"] = 2] = \"NORMAL\";\n  MotionPriority2[MotionPriority2[\"FORCE\"] = 3] = \"FORCE\";\n  return MotionPriority2;\n})(MotionPriority || {});\nclass MotionState {\n  constructor() {\n    this.debug = false;\n    this.currentPriority = 0;\n    this.reservePriority = 0;\n  }\n  reserve(group, index, priority) {\n    if (priority <= 0) {\n      logger.log(this.tag, `Cannot start a motion with MotionPriority.NONE.`);\n      return false;\n    }\n    if (group === this.currentGroup && index === this.currentIndex) {\n      logger.log(this.tag, `Motion is already playing.`, this.dump(group, index));\n      return false;\n    }\n    if (group === this.reservedGroup && index === this.reservedIndex || group === this.reservedIdleGroup && index === this.reservedIdleIndex) {\n      logger.log(this.tag, `Motion is already reserved.`, this.dump(group, index));\n      return false;\n    }\n    if (priority === 1) {\n      if (this.currentPriority !== 0) {\n        logger.log(this.tag, `Cannot start idle motion because another motion is playing.`, this.dump(group, index));\n        return false;\n      }\n      if (this.reservedIdleGroup !== void 0) {\n        logger.log(this.tag, `Cannot start idle motion because another idle motion has reserved.`, this.dump(group, index));\n        return false;\n      }\n      this.setReservedIdle(group, index);\n    } else {\n      if (priority < 3) {\n        if (priority <= this.currentPriority) {\n          logger.log(this.tag, \"Cannot start motion because another motion is playing as an equivalent or higher priority.\", this.dump(group, index));\n          return false;\n        }\n        if (priority <= this.reservePriority) {\n          logger.log(this.tag, \"Cannot start motion because another motion has reserved as an equivalent or higher priority.\", this.dump(group, index));\n          return false;\n        }\n      }\n      this.setReserved(group, index, priority);\n    }\n    return true;\n  }\n  start(motion, group, index, priority) {\n    if (priority === 1) {\n      this.setReservedIdle(void 0, void 0);\n      if (this.currentPriority !== 0) {\n        logger.log(this.tag, \"Cannot start idle motion because another motion is playing.\", this.dump(group, index));\n        return false;\n      }\n    } else {\n      if (group !== this.reservedGroup || index !== this.reservedIndex) {\n        logger.log(this.tag, \"Cannot start motion because another motion has taken the place.\", this.dump(group, index));\n        return false;\n      }\n      this.setReserved(void 0, void 0, 0);\n    }\n    if (!motion) {\n      return false;\n    }\n    this.setCurrent(group, index, priority);\n    return true;\n  }\n  complete() {\n    this.setCurrent(void 0, void 0, 0);\n  }\n  setCurrent(group, index, priority) {\n    this.currentPriority = priority;\n    this.currentGroup = group;\n    this.currentIndex = index;\n  }\n  setReserved(group, index, priority) {\n    this.reservePriority = priority;\n    this.reservedGroup = group;\n    this.reservedIndex = index;\n  }\n  setReservedIdle(group, index) {\n    this.reservedIdleGroup = group;\n    this.reservedIdleIndex = index;\n  }\n  isActive(group, index) {\n    return group === this.currentGroup && index === this.currentIndex || group === this.reservedGroup && index === this.reservedIndex || group === this.reservedIdleGroup && index === this.reservedIdleIndex;\n  }\n  reset() {\n    this.setCurrent(void 0, void 0, 0);\n    this.setReserved(void 0, void 0, 0);\n    this.setReservedIdle(void 0, void 0);\n  }\n  shouldRequestIdleMotion() {\n    return this.currentGroup === void 0 && this.reservedIdleGroup === void 0;\n  }\n  shouldOverrideExpression() {\n    return !config.preserveExpressionOnMotion && this.currentPriority > 1;\n  }\n  dump(requestedGroup, requestedIndex) {\n    if (this.debug) {\n      const keys = [\"currentPriority\", \"reservePriority\", \"currentGroup\", \"currentIndex\", \"reservedGroup\", \"reservedIndex\", \"reservedIdleGroup\", \"reservedIdleIndex\"];\n      return `\n<Requested> group = \"${requestedGroup}\", index = ${requestedIndex}\n` + keys.map(key => \"[\" + key + \"] \" + this[key]).join(\"\\n\");\n    }\n    return \"\";\n  }\n}\nconst TAG$2 = \"SoundManager\";\nconst VOLUME = 0.5;\nclass SoundManager {\n  static get volume() {\n    return this._volume;\n  }\n  static set volume(value) {\n    this._volume = (value > 1 ? 1 : value < 0 ? 0 : value) || 0;\n    this.audios.forEach(audio => audio.volume = this._volume);\n  }\n  static add(file, onFinish, onError) {\n    const audio = new Audio(file);\n    audio.volume = this._volume;\n    audio.preload = \"auto\";\n    audio.addEventListener(\"ended\", () => {\n      this.dispose(audio);\n      onFinish == null ? void 0 : onFinish();\n    });\n    audio.addEventListener(\"error\", e => {\n      this.dispose(audio);\n      logger.warn(TAG$2, `Error occurred on \"${file}\"`, e.error);\n      onError == null ? void 0 : onError(e.error);\n    });\n    this.audios.push(audio);\n    return audio;\n  }\n  static play(audio) {\n    return new Promise((resolve, reject) => {\n      var _a;\n      (_a = audio.play()) == null ? void 0 : _a.catch(e => {\n        audio.dispatchEvent(new ErrorEvent(\"error\", {\n          error: e\n        }));\n        reject(e);\n      });\n      if (audio.readyState === audio.HAVE_ENOUGH_DATA) {\n        resolve();\n      } else {\n        audio.addEventListener(\"canplaythrough\", resolve);\n      }\n    });\n  }\n  static dispose(audio) {\n    audio.pause();\n    audio.removeAttribute(\"src\");\n    remove(this.audios, audio);\n  }\n  static destroy() {\n    for (let i = this.audios.length - 1; i >= 0; i--) {\n      this.dispose(this.audios[i]);\n    }\n  }\n}\nSoundManager.audios = [];\nSoundManager._volume = VOLUME;\nvar MotionPreloadStrategy = /* @__PURE__ */(MotionPreloadStrategy2 => {\n  MotionPreloadStrategy2[\"ALL\"] = \"ALL\";\n  MotionPreloadStrategy2[\"IDLE\"] = \"IDLE\";\n  MotionPreloadStrategy2[\"NONE\"] = \"NONE\";\n  return MotionPreloadStrategy2;\n})(MotionPreloadStrategy || {});\nclass MotionManager extends EventEmitter {\n  constructor(settings, options) {\n    super();\n    this.motionGroups = {};\n    this.state = new MotionState();\n    this.playing = false;\n    this.destroyed = false;\n    this.settings = settings;\n    this.tag = `MotionManager(${settings.name})`;\n    this.state.tag = this.tag;\n  }\n  init(options) {\n    if (options == null ? void 0 : options.idleMotionGroup) {\n      this.groups.idle = options.idleMotionGroup;\n    }\n    this.setupMotions(options);\n    this.stopAllMotions();\n  }\n  setupMotions(options) {\n    for (const group of Object.keys(this.definitions)) {\n      this.motionGroups[group] = [];\n    }\n    let groups;\n    switch (options == null ? void 0 : options.motionPreload) {\n      case \"NONE\":\n        return;\n      case \"ALL\":\n        groups = Object.keys(this.definitions);\n        break;\n      case \"IDLE\":\n      default:\n        groups = [this.groups.idle];\n        break;\n    }\n    for (const group of groups) {\n      if (this.definitions[group]) {\n        for (let i = 0; i < this.definitions[group].length; i++) {\n          this.loadMotion(group, i).then();\n        }\n      }\n    }\n  }\n  loadMotion(group, index) {\n    return __async(this, null, function* () {\n      var _a;\n      if (!((_a = this.definitions[group]) == null ? void 0 : _a[index])) {\n        logger.warn(this.tag, `Undefined motion at \"${group}\"[${index}]`);\n        return void 0;\n      }\n      if (this.motionGroups[group][index] === null) {\n        logger.warn(this.tag, `Cannot start motion at \"${group}\"[${index}] because it's already failed in loading.`);\n        return void 0;\n      }\n      if (this.motionGroups[group][index]) {\n        return this.motionGroups[group][index];\n      }\n      const motion = yield this._loadMotion(group, index);\n      if (this.destroyed) {\n        return;\n      }\n      this.motionGroups[group][index] = motion != null ? motion : null;\n      return motion;\n    });\n  }\n  _loadMotion(group, index) {\n    throw new Error(\"Not implemented.\");\n  }\n  startMotion(_0, _1) {\n    return __async(this, arguments, function* (group, index, priority = MotionPriority.NORMAL) {\n      var _a;\n      if (!this.state.reserve(group, index, priority)) {\n        return false;\n      }\n      const definition = (_a = this.definitions[group]) == null ? void 0 : _a[index];\n      if (!definition) {\n        return false;\n      }\n      if (this.currentAudio) {\n        SoundManager.dispose(this.currentAudio);\n      }\n      let audio;\n      if (config.sound) {\n        const soundURL = this.getSoundFile(definition);\n        if (soundURL) {\n          try {\n            audio = SoundManager.add(this.settings.resolveURL(soundURL), () => this.currentAudio = void 0, () => this.currentAudio = void 0);\n            this.currentAudio = audio;\n          } catch (e) {\n            logger.warn(this.tag, \"Failed to create audio\", soundURL, e);\n          }\n        }\n      }\n      const motion = yield this.loadMotion(group, index);\n      if (audio) {\n        const readyToPlay = SoundManager.play(audio).catch(e => logger.warn(this.tag, \"Failed to play audio\", audio.src, e));\n        if (config.motionSync) {\n          yield readyToPlay;\n        }\n      }\n      if (!this.state.start(motion, group, index, priority)) {\n        if (audio) {\n          SoundManager.dispose(audio);\n          this.currentAudio = void 0;\n        }\n        return false;\n      }\n      logger.log(this.tag, \"Start motion:\", this.getMotionName(definition));\n      this.emit(\"motionStart\", group, index, audio);\n      if (this.state.shouldOverrideExpression()) {\n        this.expressionManager && this.expressionManager.resetExpression();\n      }\n      this.playing = true;\n      this._startMotion(motion);\n      return true;\n    });\n  }\n  startRandomMotion(group, priority) {\n    return __async(this, null, function* () {\n      const groupDefs = this.definitions[group];\n      if (groupDefs == null ? void 0 : groupDefs.length) {\n        const availableIndices = [];\n        for (let i = 0; i < groupDefs.length; i++) {\n          if (this.motionGroups[group][i] !== null && !this.state.isActive(group, i)) {\n            availableIndices.push(i);\n          }\n        }\n        if (availableIndices.length) {\n          const index = Math.floor(Math.random() * availableIndices.length);\n          return this.startMotion(group, availableIndices[index], priority);\n        }\n      }\n      return false;\n    });\n  }\n  stopAllMotions() {\n    this._stopAllMotions();\n    this.state.reset();\n    if (this.currentAudio) {\n      SoundManager.dispose(this.currentAudio);\n      this.currentAudio = void 0;\n    }\n  }\n  update(model, now) {\n    var _a;\n    if (this.isFinished()) {\n      if (this.playing) {\n        this.playing = false;\n        this.emit(\"motionFinish\");\n      }\n      if (this.state.shouldOverrideExpression()) {\n        (_a = this.expressionManager) == null ? void 0 : _a.restoreExpression();\n      }\n      this.state.complete();\n      if (this.state.shouldRequestIdleMotion()) {\n        this.startRandomMotion(this.groups.idle, MotionPriority.IDLE);\n      }\n    }\n    return this.updateParameters(model, now);\n  }\n  destroy() {\n    var _a;\n    this.destroyed = true;\n    this.emit(\"destroy\");\n    this.stopAllMotions();\n    (_a = this.expressionManager) == null ? void 0 : _a.destroy();\n    const self = this;\n    self.definitions = void 0;\n    self.motionGroups = void 0;\n  }\n}\nconst tempBounds = {\n  x: 0,\n  y: 0,\n  width: 0,\n  height: 0\n};\nclass InternalModel extends EventEmitter {\n  constructor() {\n    super(...arguments);\n    this.focusController = new FocusController();\n    this.originalWidth = 0;\n    this.originalHeight = 0;\n    this.width = 0;\n    this.height = 0;\n    this.localTransform = new Matrix();\n    this.drawingMatrix = new Matrix();\n    this.hitAreas = {};\n    this.textureFlipY = false;\n    this.viewport = [0, 0, 0, 0];\n    this.destroyed = false;\n  }\n  init() {\n    this.setupLayout();\n    this.setupHitAreas();\n  }\n  setupLayout() {\n    const self = this;\n    const size = this.getSize();\n    self.originalWidth = size[0];\n    self.originalHeight = size[1];\n    const layout = Object.assign({\n      width: LOGICAL_WIDTH,\n      height: LOGICAL_HEIGHT\n    }, this.getLayout());\n    this.localTransform.scale(layout.width / LOGICAL_WIDTH, layout.height / LOGICAL_HEIGHT);\n    self.width = this.originalWidth * this.localTransform.a;\n    self.height = this.originalHeight * this.localTransform.d;\n    const offsetX = layout.x !== void 0 && layout.x - layout.width / 2 || layout.centerX !== void 0 && layout.centerX || layout.left !== void 0 && layout.left - layout.width / 2 || layout.right !== void 0 && layout.right + layout.width / 2 || 0;\n    const offsetY = layout.y !== void 0 && layout.y - layout.height / 2 || layout.centerY !== void 0 && layout.centerY || layout.top !== void 0 && layout.top - layout.height / 2 || layout.bottom !== void 0 && layout.bottom + layout.height / 2 || 0;\n    this.localTransform.translate(this.width * offsetX, -this.height * offsetY);\n  }\n  setupHitAreas() {\n    const definitions = this.getHitAreaDefs().filter(hitArea => hitArea.index >= 0);\n    for (const def of definitions) {\n      this.hitAreas[def.name] = def;\n    }\n  }\n  hitTest(x, y) {\n    return Object.keys(this.hitAreas).filter(hitAreaName => this.isHit(hitAreaName, x, y));\n  }\n  isHit(hitAreaName, x, y) {\n    if (!this.hitAreas[hitAreaName]) {\n      return false;\n    }\n    const drawIndex = this.hitAreas[hitAreaName].index;\n    const bounds = this.getDrawableBounds(drawIndex, tempBounds);\n    return bounds.x <= x && x <= bounds.x + bounds.width && bounds.y <= y && y <= bounds.y + bounds.height;\n  }\n  getDrawableBounds(index, bounds) {\n    const vertices = this.getDrawableVertices(index);\n    let left = vertices[0];\n    let right = vertices[0];\n    let top = vertices[1];\n    let bottom = vertices[1];\n    for (let i = 0; i < vertices.length; i += 2) {\n      const vx = vertices[i];\n      const vy = vertices[i + 1];\n      left = Math.min(vx, left);\n      right = Math.max(vx, right);\n      top = Math.min(vy, top);\n      bottom = Math.max(vy, bottom);\n    }\n    bounds != null ? bounds : bounds = {};\n    bounds.x = left;\n    bounds.y = top;\n    bounds.width = right - left;\n    bounds.height = bottom - top;\n    return bounds;\n  }\n  updateTransform(transform) {\n    this.drawingMatrix.copyFrom(transform).append(this.localTransform);\n  }\n  update(dt, now) {\n    this.focusController.update(dt);\n  }\n  destroy() {\n    this.destroyed = true;\n    this.emit(\"destroy\");\n    this.motionManager.destroy();\n    this.motionManager = void 0;\n  }\n}\nconst TAG$1 = \"XHRLoader\";\nclass NetworkError extends Error {\n  constructor(message, url2, status, aborted = false) {\n    super(message);\n    this.url = url2;\n    this.status = status;\n    this.aborted = aborted;\n  }\n}\nconst _XHRLoader = class {\n  static createXHR(target, url2, type, onload, onerror) {\n    const xhr = new XMLHttpRequest();\n    _XHRLoader.allXhrSet.add(xhr);\n    if (target) {\n      let xhrSet = _XHRLoader.xhrMap.get(target);\n      if (!xhrSet) {\n        xhrSet = /* @__PURE__ */new Set([xhr]);\n        _XHRLoader.xhrMap.set(target, xhrSet);\n      } else {\n        xhrSet.add(xhr);\n      }\n      if (!target.listeners(\"destroy\").includes(_XHRLoader.cancelXHRs)) {\n        target.once(\"destroy\", _XHRLoader.cancelXHRs);\n      }\n    }\n    xhr.open(\"GET\", url2);\n    xhr.responseType = type;\n    xhr.onload = () => {\n      if ((xhr.status === 200 || xhr.status === 0) && xhr.response) {\n        onload(xhr.response);\n      } else {\n        xhr.onerror();\n      }\n    };\n    xhr.onerror = () => {\n      logger.warn(TAG$1, `Failed to load resource as ${xhr.responseType} (Status ${xhr.status}): ${url2}`);\n      onerror(new NetworkError(\"Network error.\", url2, xhr.status));\n    };\n    xhr.onabort = () => onerror(new NetworkError(\"Aborted.\", url2, xhr.status, true));\n    xhr.onloadend = () => {\n      var _a;\n      _XHRLoader.allXhrSet.delete(xhr);\n      if (target) {\n        (_a = _XHRLoader.xhrMap.get(target)) == null ? void 0 : _a.delete(xhr);\n      }\n    };\n    return xhr;\n  }\n  static cancelXHRs() {\n    var _a;\n    (_a = _XHRLoader.xhrMap.get(this)) == null ? void 0 : _a.forEach(xhr => {\n      xhr.abort();\n      _XHRLoader.allXhrSet.delete(xhr);\n    });\n    _XHRLoader.xhrMap.delete(this);\n  }\n  static release() {\n    _XHRLoader.allXhrSet.forEach(xhr => xhr.abort());\n    _XHRLoader.allXhrSet.clear();\n    _XHRLoader.xhrMap = /* @__PURE__ */new WeakMap();\n  }\n};\nlet XHRLoader = _XHRLoader;\nXHRLoader.xhrMap = /* @__PURE__ */new WeakMap();\nXHRLoader.allXhrSet = /* @__PURE__ */new Set();\nXHRLoader.loader = (context, next) => {\n  return new Promise((resolve, reject) => {\n    const xhr = _XHRLoader.createXHR(context.target, context.settings ? context.settings.resolveURL(context.url) : context.url, context.type, data => {\n      context.result = data;\n      resolve();\n    }, reject);\n    xhr.send();\n  });\n};\nfunction runMiddlewares(middleware, context) {\n  let index = -1;\n  return dispatch(0);\n  function dispatch(i, err) {\n    if (err) return Promise.reject(err);\n    if (i <= index) return Promise.reject(new Error(\"next() called multiple times\"));\n    index = i;\n    const fn = middleware[i];\n    if (!fn) return Promise.resolve();\n    try {\n      return Promise.resolve(fn(context, dispatch.bind(null, i + 1)));\n    } catch (err2) {\n      return Promise.reject(err2);\n    }\n  }\n}\nclass Live2DLoader {\n  static load(context) {\n    return runMiddlewares(this.middlewares, context).then(() => context.result);\n  }\n}\nLive2DLoader.middlewares = [XHRLoader.loader];\nfunction createTexture(url2, options = {}) {\n  var _a;\n  const textureOptions = {\n    resourceOptions: {\n      crossorigin: options.crossOrigin\n    }\n  };\n  if (Texture.fromURL) {\n    return Texture.fromURL(url2, textureOptions).catch(e => {\n      if (e instanceof Error) {\n        throw e;\n      }\n      const err = new Error(\"Texture loading error\");\n      err.event = e;\n      throw err;\n    });\n  }\n  textureOptions.resourceOptions.autoLoad = false;\n  const texture = Texture.from(url2, textureOptions);\n  if (texture.baseTexture.valid) {\n    return Promise.resolve(texture);\n  }\n  const resource = texture.baseTexture.resource;\n  (_a = resource._live2d_load) != null ? _a : resource._live2d_load = new Promise((resolve, reject) => {\n    const errorHandler = event => {\n      resource.source.removeEventListener(\"error\", errorHandler);\n      const err = new Error(\"Texture loading error\");\n      err.event = event;\n      reject(err);\n    };\n    resource.source.addEventListener(\"error\", errorHandler);\n    resource.load().then(() => resolve(texture)).catch(errorHandler);\n  });\n  return resource._live2d_load;\n}\nconst TAG = \"Live2DFactory\";\nconst urlToJSON = (context, next) => __async(void 0, null, function* () {\n  if (typeof context.source === \"string\") {\n    const data = yield Live2DLoader.load({\n      url: context.source,\n      type: \"json\",\n      target: context.live2dModel\n    });\n    data.url = context.source;\n    context.source = data;\n    context.live2dModel.emit(\"settingsJSONLoaded\", data);\n  }\n  return next();\n});\nconst jsonToSettings = (context, next) => __async(void 0, null, function* () {\n  if (context.source instanceof ModelSettings) {\n    context.settings = context.source;\n    return next();\n  } else if (typeof context.source === \"object\") {\n    const runtime = Live2DFactory.findRuntime(context.source);\n    if (runtime) {\n      const settings = runtime.createModelSettings(context.source);\n      context.settings = settings;\n      context.live2dModel.emit(\"settingsLoaded\", settings);\n      return next();\n    }\n  }\n  throw new TypeError(\"Unknown settings format.\");\n});\nconst waitUntilReady = (context, next) => {\n  if (context.settings) {\n    const runtime = Live2DFactory.findRuntime(context.settings);\n    if (runtime) {\n      return runtime.ready().then(next);\n    }\n  }\n  return next();\n};\nconst setupOptionals = (context, next) => __async(void 0, null, function* () {\n  yield next();\n  const internalModel = context.internalModel;\n  if (internalModel) {\n    const settings = context.settings;\n    const runtime = Live2DFactory.findRuntime(settings);\n    if (runtime) {\n      const tasks = [];\n      if (settings.pose) {\n        tasks.push(Live2DLoader.load({\n          settings,\n          url: settings.pose,\n          type: \"json\",\n          target: internalModel\n        }).then(data => {\n          internalModel.pose = runtime.createPose(internalModel.coreModel, data);\n          context.live2dModel.emit(\"poseLoaded\", internalModel.pose);\n        }).catch(e => {\n          context.live2dModel.emit(\"poseLoadError\", e);\n          logger.warn(TAG, \"Failed to load pose.\", e);\n        }));\n      }\n      if (settings.physics) {\n        tasks.push(Live2DLoader.load({\n          settings,\n          url: settings.physics,\n          type: \"json\",\n          target: internalModel\n        }).then(data => {\n          internalModel.physics = runtime.createPhysics(internalModel.coreModel, data);\n          context.live2dModel.emit(\"physicsLoaded\", internalModel.physics);\n        }).catch(e => {\n          context.live2dModel.emit(\"physicsLoadError\", e);\n          logger.warn(TAG, \"Failed to load physics.\", e);\n        }));\n      }\n      if (tasks.length) {\n        yield Promise.all(tasks);\n      }\n    }\n  }\n});\nconst setupEssentials = (context, next) => __async(void 0, null, function* () {\n  if (context.settings) {\n    const live2DModel = context.live2dModel;\n    const textureLoadings = context.settings.textures.map(tex => {\n      const url2 = context.settings.resolveURL(tex);\n      return createTexture(url2, {\n        crossOrigin: context.options.crossOrigin\n      });\n    });\n    yield next();\n    if (context.internalModel) {\n      live2DModel.internalModel = context.internalModel;\n      live2DModel.emit(\"modelLoaded\", context.internalModel);\n    } else {\n      throw new TypeError(\"Missing internal model.\");\n    }\n    live2DModel.textures = yield Promise.all(textureLoadings);\n    live2DModel.emit(\"textureLoaded\", live2DModel.textures);\n  } else {\n    throw new TypeError(\"Missing settings.\");\n  }\n});\nconst createInternalModel = (context, next) => __async(void 0, null, function* () {\n  const settings = context.settings;\n  if (settings instanceof ModelSettings) {\n    const runtime = Live2DFactory.findRuntime(settings);\n    if (!runtime) {\n      throw new TypeError(\"Unknown model settings.\");\n    }\n    const modelData = yield Live2DLoader.load({\n      settings,\n      url: settings.moc,\n      type: \"arraybuffer\",\n      target: context.live2dModel\n    });\n    if (!runtime.isValidMoc(modelData)) {\n      throw new Error(\"Invalid moc data\");\n    }\n    const coreModel = runtime.createCoreModel(modelData);\n    context.internalModel = runtime.createInternalModel(coreModel, settings, context.options);\n    return next();\n  }\n  throw new TypeError(\"Missing settings.\");\n});\nconst _Live2DFactory = class {\n  static registerRuntime(runtime) {\n    _Live2DFactory.runtimes.push(runtime);\n    _Live2DFactory.runtimes.sort((a, b) => b.version - a.version);\n  }\n  static findRuntime(source) {\n    for (const runtime of _Live2DFactory.runtimes) {\n      if (runtime.test(source)) {\n        return runtime;\n      }\n    }\n  }\n  static setupLive2DModel(live2dModel, source, options) {\n    return __async(this, null, function* () {\n      const textureLoaded = new Promise(resolve => live2dModel.once(\"textureLoaded\", resolve));\n      const modelLoaded = new Promise(resolve => live2dModel.once(\"modelLoaded\", resolve));\n      const readyEventEmitted = Promise.all([textureLoaded, modelLoaded]).then(() => live2dModel.emit(\"ready\"));\n      yield runMiddlewares(_Live2DFactory.live2DModelMiddlewares, {\n        live2dModel,\n        source,\n        options: options || {}\n      });\n      yield readyEventEmitted;\n      live2dModel.emit(\"load\");\n    });\n  }\n  static loadMotion(motionManager, group, index) {\n    var _a, _b;\n    const handleError = e => motionManager.emit(\"motionLoadError\", group, index, e);\n    try {\n      const definition = (_a = motionManager.definitions[group]) == null ? void 0 : _a[index];\n      if (!definition) {\n        return Promise.resolve(void 0);\n      }\n      if (!motionManager.listeners(\"destroy\").includes(_Live2DFactory.releaseTasks)) {\n        motionManager.once(\"destroy\", _Live2DFactory.releaseTasks);\n      }\n      let tasks = _Live2DFactory.motionTasksMap.get(motionManager);\n      if (!tasks) {\n        tasks = {};\n        _Live2DFactory.motionTasksMap.set(motionManager, tasks);\n      }\n      let taskGroup = tasks[group];\n      if (!taskGroup) {\n        taskGroup = [];\n        tasks[group] = taskGroup;\n      }\n      const path = motionManager.getMotionFile(definition);\n      (_b = taskGroup[index]) != null ? _b : taskGroup[index] = Live2DLoader.load({\n        url: path,\n        settings: motionManager.settings,\n        type: motionManager.motionDataType,\n        target: motionManager\n      }).then(data => {\n        var _a2;\n        const taskGroup2 = (_a2 = _Live2DFactory.motionTasksMap.get(motionManager)) == null ? void 0 : _a2[group];\n        if (taskGroup2) {\n          delete taskGroup2[index];\n        }\n        const motion = motionManager.createMotion(data, group, definition);\n        motionManager.emit(\"motionLoaded\", group, index, motion);\n        return motion;\n      }).catch(e => {\n        logger.warn(motionManager.tag, `Failed to load motion: ${path}\n`, e);\n        handleError(e);\n      });\n      return taskGroup[index];\n    } catch (e) {\n      logger.warn(motionManager.tag, `Failed to load motion at \"${group}\"[${index}]\n`, e);\n      handleError(e);\n    }\n    return Promise.resolve(void 0);\n  }\n  static loadExpression(expressionManager, index) {\n    var _a;\n    const handleError = e => expressionManager.emit(\"expressionLoadError\", index, e);\n    try {\n      const definition = expressionManager.definitions[index];\n      if (!definition) {\n        return Promise.resolve(void 0);\n      }\n      if (!expressionManager.listeners(\"destroy\").includes(_Live2DFactory.releaseTasks)) {\n        expressionManager.once(\"destroy\", _Live2DFactory.releaseTasks);\n      }\n      let tasks = _Live2DFactory.expressionTasksMap.get(expressionManager);\n      if (!tasks) {\n        tasks = [];\n        _Live2DFactory.expressionTasksMap.set(expressionManager, tasks);\n      }\n      const path = expressionManager.getExpressionFile(definition);\n      (_a = tasks[index]) != null ? _a : tasks[index] = Live2DLoader.load({\n        url: path,\n        settings: expressionManager.settings,\n        type: \"json\",\n        target: expressionManager\n      }).then(data => {\n        const tasks2 = _Live2DFactory.expressionTasksMap.get(expressionManager);\n        if (tasks2) {\n          delete tasks2[index];\n        }\n        const expression = expressionManager.createExpression(data, definition);\n        expressionManager.emit(\"expressionLoaded\", index, expression);\n        return expression;\n      }).catch(e => {\n        logger.warn(expressionManager.tag, `Failed to load expression: ${path}\n`, e);\n        handleError(e);\n      });\n      return tasks[index];\n    } catch (e) {\n      logger.warn(expressionManager.tag, `Failed to load expression at [${index}]\n`, e);\n      handleError(e);\n    }\n    return Promise.resolve(void 0);\n  }\n  static releaseTasks() {\n    if (this instanceof MotionManager) {\n      _Live2DFactory.motionTasksMap.delete(this);\n    } else {\n      _Live2DFactory.expressionTasksMap.delete(this);\n    }\n  }\n};\nlet Live2DFactory = _Live2DFactory;\nLive2DFactory.runtimes = [];\nLive2DFactory.urlToJSON = urlToJSON;\nLive2DFactory.jsonToSettings = jsonToSettings;\nLive2DFactory.waitUntilReady = waitUntilReady;\nLive2DFactory.setupOptionals = setupOptionals;\nLive2DFactory.setupEssentials = setupEssentials;\nLive2DFactory.createInternalModel = createInternalModel;\nLive2DFactory.live2DModelMiddlewares = [urlToJSON, jsonToSettings, waitUntilReady, setupOptionals, setupEssentials, createInternalModel];\nLive2DFactory.motionTasksMap = /* @__PURE__ */new WeakMap();\nLive2DFactory.expressionTasksMap = /* @__PURE__ */new WeakMap();\nMotionManager.prototype[\"_loadMotion\"] = function (group, index) {\n  return Live2DFactory.loadMotion(this, group, index);\n};\nExpressionManager.prototype[\"_loadExpression\"] = function (index) {\n  return Live2DFactory.loadExpression(this, index);\n};\nclass InteractionMixin {\n  constructor() {\n    this._autoInteract = false;\n  }\n  get autoInteract() {\n    return this._autoInteract;\n  }\n  set autoInteract(autoInteract) {\n    if (autoInteract !== this._autoInteract) {\n      if (autoInteract) {\n        this.on(\"pointertap\", onTap, this);\n      } else {\n        this.off(\"pointertap\", onTap, this);\n      }\n      this._autoInteract = autoInteract;\n    }\n  }\n  registerInteraction(manager) {\n    if (manager !== this.interactionManager) {\n      this.unregisterInteraction();\n      if (this._autoInteract && manager) {\n        this.interactionManager = manager;\n        manager.on(\"pointermove\", onPointerMove, this);\n      }\n    }\n  }\n  unregisterInteraction() {\n    var _a;\n    if (this.interactionManager) {\n      (_a = this.interactionManager) == null ? void 0 : _a.off(\"pointermove\", onPointerMove, this);\n      this.interactionManager = void 0;\n    }\n  }\n}\nfunction onTap(event) {\n  this.tap(event.data.global.x, event.data.global.y);\n}\nfunction onPointerMove(event) {\n  this.focus(event.data.global.x, event.data.global.y);\n}\nclass Live2DTransform extends Transform {}\nconst tempPoint = new Point();\nconst tempMatrix$1 = new Matrix();\nlet tickerRef;\nclass Live2DModel extends Container {\n  constructor(options) {\n    super();\n    this.tag = \"Live2DModel(uninitialized)\";\n    this.textures = [];\n    this.transform = new Live2DTransform();\n    this.anchor = new ObservablePoint(this.onAnchorChange, this, 0, 0);\n    this.glContextID = -1;\n    this.elapsedTime = performance.now();\n    this.deltaTime = 0;\n    this._autoUpdate = false;\n    this.once(\"modelLoaded\", () => this.init(options));\n  }\n  static from(source, options) {\n    const model = new this(options);\n    return Live2DFactory.setupLive2DModel(model, source, options).then(() => model);\n  }\n  static fromSync(source, options) {\n    const model = new this(options);\n    Live2DFactory.setupLive2DModel(model, source, options).then(options == null ? void 0 : options.onLoad).catch(options == null ? void 0 : options.onError);\n    return model;\n  }\n  static registerTicker(tickerClass) {\n    tickerRef = tickerClass;\n  }\n  get autoUpdate() {\n    return this._autoUpdate;\n  }\n  set autoUpdate(autoUpdate) {\n    var _a;\n    tickerRef || (tickerRef = (_a = window.PIXI) == null ? void 0 : _a.Ticker);\n    if (autoUpdate) {\n      if (!this._destroyed) {\n        if (tickerRef) {\n          tickerRef.shared.add(this.onTickerUpdate, this);\n          this._autoUpdate = true;\n        } else {\n          logger.warn(this.tag, \"No Ticker registered, please call Live2DModel.registerTicker(Ticker).\");\n        }\n      }\n    } else {\n      tickerRef == null ? void 0 : tickerRef.shared.remove(this.onTickerUpdate, this);\n      this._autoUpdate = false;\n    }\n  }\n  init(options) {\n    this.tag = `Live2DModel(${this.internalModel.settings.name})`;\n    const _options = Object.assign({\n      autoUpdate: true,\n      autoInteract: true\n    }, options);\n    if (_options.autoInteract) {\n      this.interactive = true;\n    }\n    this.autoInteract = _options.autoInteract;\n    this.autoUpdate = _options.autoUpdate;\n  }\n  onAnchorChange() {\n    this.pivot.set(this.anchor.x * this.internalModel.width, this.anchor.y * this.internalModel.height);\n  }\n  motion(group, index, priority) {\n    return index === void 0 ? this.internalModel.motionManager.startRandomMotion(group, priority) : this.internalModel.motionManager.startMotion(group, index, priority);\n  }\n  expression(id) {\n    if (this.internalModel.motionManager.expressionManager) {\n      return id === void 0 ? this.internalModel.motionManager.expressionManager.setRandomExpression() : this.internalModel.motionManager.expressionManager.setExpression(id);\n    }\n    return Promise.resolve(false);\n  }\n  focus(x, y, instant = false) {\n    tempPoint.x = x;\n    tempPoint.y = y;\n    this.toModelPosition(tempPoint, tempPoint, true);\n    let tx = tempPoint.x / this.internalModel.originalWidth * 2 - 1;\n    let ty = tempPoint.y / this.internalModel.originalHeight * 2 - 1;\n    let radian = Math.atan2(ty, tx);\n    this.internalModel.focusController.focus(Math.cos(radian), -Math.sin(radian), instant);\n  }\n  tap(x, y) {\n    const hitAreaNames = this.hitTest(x, y);\n    if (hitAreaNames.length) {\n      logger.log(this.tag, `Hit`, hitAreaNames);\n      this.emit(\"hit\", hitAreaNames);\n    }\n  }\n  hitTest(x, y) {\n    tempPoint.x = x;\n    tempPoint.y = y;\n    this.toModelPosition(tempPoint, tempPoint);\n    return this.internalModel.hitTest(tempPoint.x, tempPoint.y);\n  }\n  toModelPosition(position, result = position.clone(), skipUpdate) {\n    if (!skipUpdate) {\n      this._recursivePostUpdateTransform();\n      if (!this.parent) {\n        this.parent = this._tempDisplayObjectParent;\n        this.displayObjectUpdateTransform();\n        this.parent = null;\n      } else {\n        this.displayObjectUpdateTransform();\n      }\n    }\n    this.transform.worldTransform.applyInverse(position, result);\n    this.internalModel.localTransform.applyInverse(result, result);\n    return result;\n  }\n  containsPoint(point) {\n    return this.getBounds(true).contains(point.x, point.y);\n  }\n  _calculateBounds() {\n    this._bounds.addFrame(this.transform, 0, 0, this.internalModel.width, this.internalModel.height);\n  }\n  onTickerUpdate() {\n    this.update(tickerRef.shared.deltaMS);\n  }\n  update(dt) {\n    this.deltaTime += dt;\n    this.elapsedTime += dt;\n  }\n  _render(renderer) {\n    this.registerInteraction(renderer.plugins.interaction);\n    renderer.batch.reset();\n    renderer.geometry.reset();\n    renderer.shader.reset();\n    renderer.state.reset();\n    let shouldUpdateTexture = false;\n    if (this.glContextID !== renderer.CONTEXT_UID) {\n      this.glContextID = renderer.CONTEXT_UID;\n      this.internalModel.updateWebGLContext(renderer.gl, this.glContextID);\n      shouldUpdateTexture = true;\n    }\n    for (let i = 0; i < this.textures.length; i++) {\n      const texture = this.textures[i];\n      if (!texture.valid) {\n        continue;\n      }\n      if (shouldUpdateTexture || !texture.baseTexture._glTextures[this.glContextID]) {\n        renderer.gl.pixelStorei(WebGLRenderingContext.UNPACK_FLIP_Y_WEBGL, this.internalModel.textureFlipY);\n        renderer.texture.bind(texture.baseTexture, 0);\n      }\n      this.internalModel.bindTexture(i, texture.baseTexture._glTextures[this.glContextID].texture);\n      texture.baseTexture.touched = renderer.textureGC.count;\n    }\n    const viewport = renderer.framebuffer.viewport;\n    this.internalModel.viewport = [viewport.x, viewport.y, viewport.width, viewport.height];\n    if (this.deltaTime) {\n      this.internalModel.update(this.deltaTime, this.elapsedTime);\n      this.deltaTime = 0;\n    }\n    const internalTransform = tempMatrix$1.copyFrom(renderer.globalUniforms.uniforms.projectionMatrix).append(this.worldTransform);\n    this.internalModel.updateTransform(internalTransform);\n    this.internalModel.draw(renderer.gl);\n    renderer.state.reset();\n    renderer.texture.reset();\n  }\n  destroy(options) {\n    this.emit(\"destroy\");\n    this.autoUpdate = false;\n    this.unregisterInteraction();\n    if (options == null ? void 0 : options.texture) {\n      this.textures.forEach(texture => texture.destroy(options.baseTexture));\n    }\n    this.internalModel.destroy();\n    super.destroy(options);\n  }\n}\napplyMixins(Live2DModel, [InteractionMixin]);\nconst _FileLoader = class {\n  static resolveURL(settingsURL, filePath) {\n    var _a;\n    const resolved = (_a = _FileLoader.filesMap[settingsURL]) == null ? void 0 : _a[filePath];\n    if (resolved === void 0) {\n      throw new Error(\"Cannot find this file from uploaded files: \" + filePath);\n    }\n    return resolved;\n  }\n  static upload(files, settings) {\n    return __async(this, null, function* () {\n      const fileMap = {};\n      for (const definedFile of settings.getDefinedFiles()) {\n        const actualPath = decodeURI(url.resolve(settings.url, definedFile));\n        const actualFile = files.find(file => file.webkitRelativePath === actualPath);\n        if (actualFile) {\n          fileMap[definedFile] = URL.createObjectURL(actualFile);\n        }\n      }\n      _FileLoader.filesMap[settings._objectURL] = fileMap;\n    });\n  }\n  static createSettings(files) {\n    return __async(this, null, function* () {\n      const settingsFile = files.find(file => file.name.endsWith(\"model.json\") || file.name.endsWith(\"model3.json\"));\n      if (!settingsFile) {\n        throw new TypeError(\"Settings file not found\");\n      }\n      const settingsText = yield _FileLoader.readText(settingsFile);\n      const settingsJSON = JSON.parse(settingsText);\n      settingsJSON.url = settingsFile.webkitRelativePath;\n      const runtime = Live2DFactory.findRuntime(settingsJSON);\n      if (!runtime) {\n        throw new Error(\"Unknown settings JSON\");\n      }\n      const settings = runtime.createModelSettings(settingsJSON);\n      settings._objectURL = URL.createObjectURL(settingsFile);\n      return settings;\n    });\n  }\n  static readText(file) {\n    return __async(this, null, function* () {\n      return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = () => resolve(reader.result);\n        reader.onerror = reject;\n        reader.readAsText(file, \"utf8\");\n      });\n    });\n  }\n};\nlet FileLoader = _FileLoader;\nFileLoader.filesMap = {};\nFileLoader.factory = (context, next) => __async(void 0, null, function* () {\n  if (Array.isArray(context.source) && context.source[0] instanceof File) {\n    const files = context.source;\n    let settings = files.settings;\n    if (!settings) {\n      settings = yield _FileLoader.createSettings(files);\n    } else if (!settings._objectURL) {\n      throw new Error('\"_objectURL\" must be specified in ModelSettings');\n    }\n    settings.validateFiles(files.map(file => encodeURI(file.webkitRelativePath)));\n    yield _FileLoader.upload(files, settings);\n    settings.resolveURL = function (url2) {\n      return _FileLoader.resolveURL(this._objectURL, url2);\n    };\n    context.source = settings;\n    context.live2dModel.once(\"modelLoaded\", internalModel => {\n      internalModel.once(\"destroy\", function () {\n        const objectURL = this.settings._objectURL;\n        URL.revokeObjectURL(objectURL);\n        if (_FileLoader.filesMap[objectURL]) {\n          for (const resourceObjectURL of Object.values(_FileLoader.filesMap[objectURL])) {\n            URL.revokeObjectURL(resourceObjectURL);\n          }\n        }\n        delete _FileLoader.filesMap[objectURL];\n      });\n    });\n  }\n  return next();\n});\nLive2DFactory.live2DModelMiddlewares.unshift(FileLoader.factory);\nconst _ZipLoader = class {\n  static unzip(reader, settings) {\n    return __async(this, null, function* () {\n      const filePaths = yield _ZipLoader.getFilePaths(reader);\n      const requiredFilePaths = [];\n      for (const definedFile of settings.getDefinedFiles()) {\n        const actualPath = decodeURI(url.resolve(settings.url, definedFile));\n        if (filePaths.includes(actualPath)) {\n          requiredFilePaths.push(actualPath);\n        }\n      }\n      const files = yield _ZipLoader.getFiles(reader, requiredFilePaths);\n      for (let i = 0; i < files.length; i++) {\n        const path = requiredFilePaths[i];\n        const file = files[i];\n        Object.defineProperty(file, \"webkitRelativePath\", {\n          value: path\n        });\n      }\n      return files;\n    });\n  }\n  static createSettings(reader) {\n    return __async(this, null, function* () {\n      const filePaths = yield _ZipLoader.getFilePaths(reader);\n      const settingsFilePath = filePaths.find(path => path.endsWith(\"model.json\") || path.endsWith(\"model3.json\"));\n      if (!settingsFilePath) {\n        throw new Error(\"Settings file not found\");\n      }\n      const settingsText = yield _ZipLoader.readText(reader, settingsFilePath);\n      if (!settingsText) {\n        throw new Error(\"Empty settings file: \" + settingsFilePath);\n      }\n      const settingsJSON = JSON.parse(settingsText);\n      settingsJSON.url = settingsFilePath;\n      const runtime = Live2DFactory.findRuntime(settingsJSON);\n      if (!runtime) {\n        throw new Error(\"Unknown settings JSON\");\n      }\n      return runtime.createModelSettings(settingsJSON);\n    });\n  }\n  static zipReader(data, url2) {\n    return __async(this, null, function* () {\n      throw new Error(\"Not implemented\");\n    });\n  }\n  static getFilePaths(reader) {\n    return __async(this, null, function* () {\n      throw new Error(\"Not implemented\");\n    });\n  }\n  static getFiles(reader, paths) {\n    return __async(this, null, function* () {\n      throw new Error(\"Not implemented\");\n    });\n  }\n  static readText(reader, path) {\n    return __async(this, null, function* () {\n      throw new Error(\"Not implemented\");\n    });\n  }\n  static releaseReader(reader) {}\n};\nlet ZipLoader = _ZipLoader;\nZipLoader.ZIP_PROTOCOL = \"zip://\";\nZipLoader.uid = 0;\nZipLoader.factory = (context, next) => __async(void 0, null, function* () {\n  const source = context.source;\n  let sourceURL;\n  let zipBlob;\n  let settings;\n  if (typeof source === \"string\" && (source.endsWith(\".zip\") || source.startsWith(_ZipLoader.ZIP_PROTOCOL))) {\n    if (source.startsWith(_ZipLoader.ZIP_PROTOCOL)) {\n      sourceURL = source.slice(_ZipLoader.ZIP_PROTOCOL.length);\n    } else {\n      sourceURL = source;\n    }\n    zipBlob = yield Live2DLoader.load({\n      url: sourceURL,\n      type: \"blob\",\n      target: context.live2dModel\n    });\n  } else if (Array.isArray(source) && source.length === 1 && source[0] instanceof File && source[0].name.endsWith(\".zip\")) {\n    zipBlob = source[0];\n    sourceURL = URL.createObjectURL(zipBlob);\n    settings = source.settings;\n  }\n  if (zipBlob) {\n    if (!zipBlob.size) {\n      throw new Error(\"Empty zip file\");\n    }\n    const reader = yield _ZipLoader.zipReader(zipBlob, sourceURL);\n    if (!settings) {\n      settings = yield _ZipLoader.createSettings(reader);\n    }\n    settings._objectURL = _ZipLoader.ZIP_PROTOCOL + _ZipLoader.uid + \"/\" + settings.url;\n    const files = yield _ZipLoader.unzip(reader, settings);\n    files.settings = settings;\n    context.source = files;\n    if (sourceURL.startsWith(\"blob:\")) {\n      context.live2dModel.once(\"modelLoaded\", internalModel => {\n        internalModel.once(\"destroy\", function () {\n          URL.revokeObjectURL(sourceURL);\n        });\n      });\n    }\n    _ZipLoader.releaseReader(reader);\n  }\n  return next();\n});\nLive2DFactory.live2DModelMiddlewares.unshift(ZipLoader.factory);\nif (!window.Live2DCubismCore) {\n  throw new Error(\"Could not find Cubism 4 runtime. This plugin requires live2dcubismcore.js to be loaded.\");\n}\nclass Cubism4ExpressionManager extends ExpressionManager {\n  constructor(settings, options) {\n    var _a;\n    super(settings, options);\n    this.queueManager = new CubismMotionQueueManager();\n    this.definitions = (_a = settings.expressions) != null ? _a : [];\n    this.init();\n  }\n  isFinished() {\n    return this.queueManager.isFinished();\n  }\n  getExpressionIndex(name) {\n    return this.definitions.findIndex(def => def.Name === name);\n  }\n  getExpressionFile(definition) {\n    return definition.File;\n  }\n  createExpression(data, definition) {\n    return CubismExpressionMotion.create(data);\n  }\n  _setExpression(motion) {\n    return this.queueManager.startMotion(motion, false, performance.now());\n  }\n  stopAllExpressions() {\n    this.queueManager.stopAllMotions();\n  }\n  updateParameters(model, now) {\n    return this.queueManager.doUpdateMotion(model, now);\n  }\n}\nclass Cubism4ModelSettings extends ModelSettings {\n  constructor(json) {\n    super(json);\n    if (!Cubism4ModelSettings.isValidJSON(json)) {\n      throw new TypeError(\"Invalid JSON.\");\n    }\n    Object.assign(this, new CubismModelSettingsJson(json));\n  }\n  static isValidJSON(json) {\n    var _a;\n    return !!(json == null ? void 0 : json.FileReferences) && typeof json.FileReferences.Moc === \"string\" && ((_a = json.FileReferences.Textures) == null ? void 0 : _a.length) > 0 && json.FileReferences.Textures.every(item => typeof item === \"string\");\n  }\n  replaceFiles(replace) {\n    super.replaceFiles(replace);\n    if (this.motions) {\n      for (const [group, motions] of Object.entries(this.motions)) {\n        for (let i = 0; i < motions.length; i++) {\n          motions[i].File = replace(motions[i].File, `motions.${group}[${i}].File`);\n          if (motions[i].Sound !== void 0) {\n            motions[i].Sound = replace(motions[i].Sound, `motions.${group}[${i}].Sound`);\n          }\n        }\n      }\n    }\n    if (this.expressions) {\n      for (let i = 0; i < this.expressions.length; i++) {\n        this.expressions[i].File = replace(this.expressions[i].File, `expressions[${i}].File`);\n      }\n    }\n  }\n}\napplyMixins(Cubism4ModelSettings, [CubismModelSettingsJson]);\nclass Cubism4MotionManager extends MotionManager {\n  constructor(settings, options) {\n    var _a;\n    super(settings, options);\n    this.groups = {\n      idle: \"Idle\"\n    };\n    this.motionDataType = \"json\";\n    this.queueManager = new CubismMotionQueueManager();\n    this.definitions = (_a = settings.motions) != null ? _a : {};\n    this.eyeBlinkIds = settings.getEyeBlinkParameters() || [];\n    this.lipSyncIds = settings.getLipSyncParameters() || [];\n    this.init(options);\n  }\n  init(options) {\n    super.init(options);\n    if (this.settings.expressions) {\n      this.expressionManager = new Cubism4ExpressionManager(this.settings, options);\n    }\n    this.queueManager.setEventCallback((caller, eventValue, customData) => {\n      this.emit(\"motion:\" + eventValue);\n    });\n  }\n  isFinished() {\n    return this.queueManager.isFinished();\n  }\n  _startMotion(motion, onFinish) {\n    motion.setFinishedMotionHandler(onFinish);\n    this.queueManager.stopAllMotions();\n    return this.queueManager.startMotion(motion, false, performance.now());\n  }\n  _stopAllMotions() {\n    this.queueManager.stopAllMotions();\n  }\n  createMotion(data, group, definition) {\n    const motion = CubismMotion.create(data);\n    const json = new CubismMotionJson(data);\n    const defaultFadingDuration = (group === this.groups.idle ? config.idleMotionFadingDuration : config.motionFadingDuration) / 1e3;\n    if (json.getMotionFadeInTime() === void 0) {\n      motion.setFadeInTime(definition.FadeInTime > 0 ? definition.FadeInTime : defaultFadingDuration);\n    }\n    if (json.getMotionFadeOutTime() === void 0) {\n      motion.setFadeOutTime(definition.FadeOutTime > 0 ? definition.FadeOutTime : defaultFadingDuration);\n    }\n    motion.setEffectIds(this.eyeBlinkIds, this.lipSyncIds);\n    return motion;\n  }\n  getMotionFile(definition) {\n    return definition.File;\n  }\n  getMotionName(definition) {\n    return definition.File;\n  }\n  getSoundFile(definition) {\n    return definition.Sound;\n  }\n  updateParameters(model, now) {\n    return this.queueManager.doUpdateMotion(model, now);\n  }\n  destroy() {\n    super.destroy();\n    this.queueManager.release();\n    this.queueManager = void 0;\n  }\n}\nconst tempMatrix = new CubismMatrix44();\nclass Cubism4InternalModel extends InternalModel {\n  constructor(coreModel, settings, options) {\n    super();\n    this.lipSync = true;\n    this.breath = CubismBreath.create();\n    this.renderer = new CubismRenderer_WebGL();\n    this.idParamAngleX = ParamAngleX;\n    this.idParamAngleY = ParamAngleY;\n    this.idParamAngleZ = ParamAngleZ;\n    this.idParamEyeBallX = ParamEyeBallX;\n    this.idParamEyeBallY = ParamEyeBallY;\n    this.idParamBodyAngleX = ParamBodyAngleX;\n    this.idParamBreath = ParamBreath;\n    this.pixelsPerUnit = 1;\n    this.centeringTransform = new Matrix();\n    this.coreModel = coreModel;\n    this.settings = settings;\n    this.motionManager = new Cubism4MotionManager(settings, options);\n    this.init();\n  }\n  init() {\n    var _a;\n    super.init();\n    if (((_a = this.settings.getEyeBlinkParameters()) == null ? void 0 : _a.length) > 0) {\n      this.eyeBlink = CubismEyeBlink.create(this.settings);\n    }\n    this.breath.setParameters([new BreathParameterData(this.idParamAngleX, 0, 15, 6.5345, 0.5), new BreathParameterData(this.idParamAngleY, 0, 8, 3.5345, 0.5), new BreathParameterData(this.idParamAngleZ, 0, 10, 5.5345, 0.5), new BreathParameterData(this.idParamBodyAngleX, 0, 4, 15.5345, 0.5), new BreathParameterData(this.idParamBreath, 0, 0.5, 3.2345, 0.5)]);\n    this.renderer.initialize(this.coreModel);\n    this.renderer.setIsPremultipliedAlpha(true);\n  }\n  getSize() {\n    return [this.coreModel.getModel().canvasinfo.CanvasWidth, this.coreModel.getModel().canvasinfo.CanvasHeight];\n  }\n  getLayout() {\n    const layout = {};\n    if (this.settings.layout) {\n      for (const key of Object.keys(this.settings.layout)) {\n        const commonKey = key.charAt(0).toLowerCase() + key.slice(1);\n        layout[commonKey] = this.settings.layout[key];\n      }\n    }\n    return layout;\n  }\n  setupLayout() {\n    super.setupLayout();\n    this.pixelsPerUnit = this.coreModel.getModel().canvasinfo.PixelsPerUnit;\n    this.centeringTransform.scale(this.pixelsPerUnit, this.pixelsPerUnit).translate(this.originalWidth / 2, this.originalHeight / 2);\n  }\n  updateWebGLContext(gl, glContextID) {\n    this.renderer.firstDraw = true;\n    this.renderer._bufferData = {\n      vertex: null,\n      uv: null,\n      index: null\n    };\n    this.renderer.startUp(gl);\n    this.renderer._clippingManager._currentFrameNo = glContextID;\n    this.renderer._clippingManager._maskTexture = void 0;\n    CubismShader_WebGL.getInstance()._shaderSets = [];\n  }\n  bindTexture(index, texture) {\n    this.renderer.bindTexture(index, texture);\n  }\n  getHitAreaDefs() {\n    var _a, _b;\n    return (_b = (_a = this.settings.hitAreas) == null ? void 0 : _a.map(hitArea => ({\n      id: hitArea.Id,\n      name: hitArea.Name,\n      index: this.coreModel.getDrawableIndex(hitArea.Id)\n    }))) != null ? _b : [];\n  }\n  getDrawableIDs() {\n    return this.coreModel.getDrawableIds();\n  }\n  getDrawableIndex(id) {\n    return this.coreModel.getDrawableIndex(id);\n  }\n  getDrawableVertices(drawIndex) {\n    if (typeof drawIndex === \"string\") {\n      drawIndex = this.coreModel.getDrawableIndex(drawIndex);\n      if (drawIndex === -1) throw new TypeError(\"Unable to find drawable ID: \" + drawIndex);\n    }\n    const arr = this.coreModel.getDrawableVertices(drawIndex).slice();\n    for (let i = 0; i < arr.length; i += 2) {\n      arr[i] = arr[i] * this.pixelsPerUnit + this.originalWidth / 2;\n      arr[i + 1] = -arr[i + 1] * this.pixelsPerUnit + this.originalHeight / 2;\n    }\n    return arr;\n  }\n  updateTransform(transform) {\n    this.drawingMatrix.copyFrom(this.centeringTransform).prepend(this.localTransform).prepend(transform);\n  }\n  update(dt, now) {\n    var _a, _b, _c, _d;\n    super.update(dt, now);\n    dt /= 1e3;\n    now /= 1e3;\n    const model = this.coreModel;\n    this.emit(\"beforeMotionUpdate\");\n    const motionUpdated = this.motionManager.update(this.coreModel, now);\n    this.emit(\"afterMotionUpdate\");\n    model.saveParameters();\n    (_a = this.motionManager.expressionManager) == null ? void 0 : _a.update(model, now);\n    if (!motionUpdated) {\n      (_b = this.eyeBlink) == null ? void 0 : _b.updateParameters(model, dt);\n    }\n    this.updateFocus();\n    this.updateNaturalMovements(dt * 1e3, now * 1e3);\n    (_c = this.physics) == null ? void 0 : _c.evaluate(model, dt);\n    (_d = this.pose) == null ? void 0 : _d.updateParameters(model, dt);\n    this.emit(\"beforeModelUpdate\");\n    model.update();\n    model.loadParameters();\n  }\n  updateFocus() {\n    this.coreModel.addParameterValueById(this.idParamEyeBallX, this.focusController.x);\n    this.coreModel.addParameterValueById(this.idParamEyeBallY, this.focusController.y);\n    this.coreModel.addParameterValueById(this.idParamAngleX, this.focusController.x * 30);\n    this.coreModel.addParameterValueById(this.idParamAngleY, this.focusController.y * 30);\n    this.coreModel.addParameterValueById(this.idParamAngleZ, this.focusController.x * this.focusController.y * -30);\n    this.coreModel.addParameterValueById(this.idParamBodyAngleX, this.focusController.x * 10);\n  }\n  updateNaturalMovements(dt, now) {\n    var _a;\n    (_a = this.breath) == null ? void 0 : _a.updateParameters(this.coreModel, dt / 1e3);\n  }\n  draw(gl) {\n    const matrix = this.drawingMatrix;\n    const array = tempMatrix.getArray();\n    array[0] = matrix.a;\n    array[1] = matrix.b;\n    array[4] = -matrix.c;\n    array[5] = -matrix.d;\n    array[12] = matrix.tx;\n    array[13] = matrix.ty;\n    this.renderer.setMvpMatrix(tempMatrix);\n    this.renderer.setRenderState(gl.getParameter(gl.FRAMEBUFFER_BINDING), this.viewport);\n    this.renderer.drawModel();\n  }\n  destroy() {\n    super.destroy();\n    this.renderer.release();\n    this.coreModel.release();\n    this.renderer = void 0;\n    this.coreModel = void 0;\n  }\n}\nlet startupPromise;\nlet startupRetries = 20;\nfunction cubism4Ready() {\n  if (CubismFramework.isStarted()) {\n    return Promise.resolve();\n  }\n  startupPromise != null ? startupPromise : startupPromise = new Promise((resolve, reject) => {\n    function startUpWithRetry() {\n      try {\n        startUpCubism4();\n        resolve();\n      } catch (e) {\n        startupRetries--;\n        if (startupRetries < 0) {\n          const err = new Error(\"Failed to start up Cubism 4 framework.\");\n          err.cause = e;\n          reject(err);\n          return;\n        }\n        logger.log(\"Cubism4\", \"Startup failed, retrying 10ms later...\");\n        setTimeout(startUpWithRetry, 10);\n      }\n    }\n    startUpWithRetry();\n  });\n  return startupPromise;\n}\nfunction startUpCubism4(options) {\n  options = Object.assign({\n    logFunction: console.log,\n    loggingLevel: LogLevel.LogLevel_Verbose\n  }, options);\n  CubismFramework.startUp(options);\n  CubismFramework.initialize();\n}\nLive2DFactory.registerRuntime({\n  version: 4,\n  ready: cubism4Ready,\n  test(source) {\n    return source instanceof Cubism4ModelSettings || Cubism4ModelSettings.isValidJSON(source);\n  },\n  isValidMoc(modelData) {\n    if (modelData.byteLength < 4) {\n      return false;\n    }\n    const view = new Int8Array(modelData, 0, 4);\n    return String.fromCharCode(...view) === \"MOC3\";\n  },\n  createModelSettings(json) {\n    return new Cubism4ModelSettings(json);\n  },\n  createCoreModel(data) {\n    const moc = CubismMoc.create(data);\n    try {\n      const model = moc.createModel();\n      model.__moc = moc;\n      return model;\n    } catch (e) {\n      try {\n        moc.release();\n      } catch (ignored) {}\n      throw e;\n    }\n  },\n  createInternalModel(coreModel, settings, options) {\n    const model = new Cubism4InternalModel(coreModel, settings, options);\n    const coreModelWithMoc = coreModel;\n    if (coreModelWithMoc.__moc) {\n      model.__moc = coreModelWithMoc.__moc;\n      delete coreModelWithMoc.__moc;\n      model.once(\"destroy\", releaseMoc);\n    }\n    return model;\n  },\n  createPhysics(coreModel, data) {\n    return CubismPhysics.create(data);\n  },\n  createPose(coreModel, data) {\n    return CubismPose.create(data);\n  }\n});\nfunction releaseMoc() {\n  var _a;\n  (_a = this.__moc) == null ? void 0 : _a.release();\n}\nexport { ACubismMotion, BreathParameterData, CSM_ASSERT, Constant, Cubism4ExpressionManager, Cubism4InternalModel, Cubism4ModelSettings, Cubism4MotionManager, CubismBlendMode, CubismBreath, CubismClippingContext, CubismClippingManager_WebGL, CubismConfig, CubismDebug, CubismExpressionMotion, CubismEyeBlink, CubismFramework, CubismLogDebug, CubismLogError, CubismLogInfo, CubismLogVerbose, CubismLogWarning, CubismMath, CubismMatrix44, CubismMoc, CubismModel, CubismModelSettingsJson, CubismModelUserData, CubismModelUserDataJson, CubismMotion, CubismMotionCurve, CubismMotionCurveTarget, CubismMotionData, CubismMotionEvent, CubismMotionJson, CubismMotionManager, CubismMotionPoint, CubismMotionQueueEntry, CubismMotionQueueManager, CubismMotionSegment, CubismMotionSegmentType, CubismPhysics, CubismPhysicsInput, CubismPhysicsJson, CubismPhysicsOutput, CubismPhysicsParticle, CubismPhysicsRig, CubismPhysicsSource, CubismPhysicsSubRig, CubismPhysicsTargetType, CubismPose, CubismRenderTextureResource, CubismRenderer, CubismRenderer_WebGL, CubismShader_WebGL, CubismTextureColor, CubismVector2, EvaluationOptionFlag, ExpressionBlendType, ExpressionManager, EyeState, FileLoader, FocusController, HitAreaBody, HitAreaHead, HitAreaPrefix, InteractionMixin, InternalModel, InvalidMotionQueueEntryHandleValue, LOGICAL_HEIGHT, LOGICAL_WIDTH, Live2DFactory, Live2DLoader, Live2DModel, Live2DTransform, LogLevel, ModelSettings, MotionManager, MotionPreloadStrategy, MotionPriority, MotionState, Options, ParamAngleX, ParamAngleY, ParamAngleZ, ParamArmLA, ParamArmLB, ParamArmRA, ParamArmRB, ParamBaseX, ParamBaseY, ParamBodyAngleX, ParamBodyAngleY, ParamBodyAngleZ, ParamBreath, ParamBrowLAngle, ParamBrowLForm, ParamBrowLX, ParamBrowLY, ParamBrowRAngle, ParamBrowRForm, ParamBrowRX, ParamBrowRY, ParamBustX, ParamBustY, ParamCheek, ParamEyeBallForm, ParamEyeBallX, ParamEyeBallY, ParamEyeLOpen, ParamEyeLSmile, ParamEyeROpen, ParamEyeRSmile, ParamHairBack, ParamHairFluffy, ParamHairFront, ParamHairSide, ParamHandL, ParamHandR, ParamMouthForm, ParamMouthOpenY, ParamNONE, ParamShoulderY, PartData, PartsArmLPrefix, PartsArmPrefix, PartsArmRPrefix, PartsIdCore, PhysicsJsonEffectiveForces, ShaderNames, SoundManager, VERSION, XHRLoader, ZipLoader, applyMixins, clamp, config, copyArray, copyProperty, csmRect, cubism4Ready, folderName, fragmentShaderSrcMaskInvertedPremultipliedAlpha, fragmentShaderSrcMaskPremultipliedAlpha, fragmentShaderSrcPremultipliedAlpha, fragmentShaderSrcsetupMask, logger, rand, remove, startUpCubism4, vertexShaderSrc, vertexShaderSrcMasked, vertexShaderSrcSetupMask };","map":{"version":3,"names":["__pow","Math","pow","__async","__this","__arguments","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","throw","x","done","then","apply","EventEmitter","url","Matrix","Transform","Point","ObservablePoint","Texture","Container","CubismBreath","constructor","_breathParameters","_currentTime","create","setParameters","breathParameters","getParameters","updateParameters","model","deltaTimeSeconds","t","i","length","data","addParameterValueById","parameterId","offset","peak","sin","cycle","weight","BreathParameterData","_CubismEyeBlink","modelSetting","setBlinkingInterval","blinkingInterval","_blinkingIntervalSeconds","setBlinkingSetting","closing","closed","opening","_closingSeconds","_closedSeconds","_openingSeconds","setParameterIds","parameterIds","_parameterIds","getParameterIds","_userTimeSeconds","parameterValue","_blinkingState","EyeState","EyeState_Closing","_stateStartTimeSeconds","EyeState_Closed","EyeState_Opening","EyeState_Interval","_nextBlinkingTime","determinNextBlinkingTiming","EyeState_First","CloseIfZero","setParameterValueById","_a","_b","getEyeBlinkParameters","slice","r","random","CubismEyeBlink","EyeState2","Epsilon","DefaultFadeInSeconds","CubismPose","pose3json","ret","FadeInTime","_fadeTimeSeconds","poseListInfo","Groups","poseCount","poseIndex","idListInfo","idCount","groupCount","groupIndex","partInfo","partData","PartData","partId","Id","linkListInfo","Link","linkCount","linkIndex","linkPart","link","push","_partGroups","_partGroupCounts","_lastModel","reset","beginIndex","partGroupCount","doFade","copyPartOpacities","j","initialize","partsIndex","partIndex","paramIndex","parameterIndex","setPartOpacityByIndex","setParameterValueByIndex","k","opacity","getPartOpacityByIndex","linkPartIndex","visiblePartIndex","newOpacity","phi","backOpacityThreshold","getParameterValueByIndex","a1","backOpacity","v","assignment","map","clone","getParameterIndex","getPartIndex","clonePartData","CubismVector2","y","add","vector2","substract","multiply","multiplyByScaler","scalar","division","divisionByScalar","getLength","sqrt","getDistanceWith","a","dot","normalize","isEqual","rhs","isNotEqual","_CubismMath","range","min","max","cos","abs","cbrt","cx","isNegativeNumber","Infinity","exp","log","getEasingSine","PI","left","right","degreesToRadian","degrees","radianToDegrees","radian","directionToRadian","from","to","q1","atan2","q2","directionToDegrees","degree","radianToDirection","totalAngle","quadraticEquation","b","c","cardanoAlgorithmForBezier","d","ba","ca","da","p","p3","q","discriminant","center","threshold","mp3","mp33","cosphi","acos","crtr","t1","root12","root2","root3","u12","sd","u1","v1","root1","CubismMath","CubismMatrix44","_tr","Float32Array","loadIdentity","dst","n","setMatrix","tr","getArray","getScaleX","getScaleY","getTranslateX","getTranslateY","transformX","src","transformY","invertTransformX","invertTransformY","translateRelative","tr1","translate","translateX","translateY","scaleRelative","scale","multiplyByMatrix","m","cloneMatrix","CubismRenderer","_model","drawModel","getModel","doDrawModel","setMvpMatrix","matrix44","_mvpMatrix4x4","getMvpMatrix","setModelColor","red","green","blue","alpha","_modelColor","R","G","B","A","getModelColor","Object","assign","setIsPremultipliedAlpha","enable","_isPremultipliedAlpha","isPremultipliedAlpha","setIsCulling","culling","_isCulling","isCulling","setAnisotropy","_anisortopy","getAnisotropy","CubismTextureColor","CubismBlendMode","CubismBlendMode2","s_isStarted","s_isInitialized","s_option","Constant","vertexOffset","vertexStep","CubismFramework","startUp","option","CubismLogInfo","Live2DCubismCore","_isStarted","Logging","csmSetLogFunction","logFunction","version","Version","csmGetVersion","major","minor","patch","versionNumber","cleanUp","CubismLogWarning","dispose","staticRelease","isStarted","isInitialized","coreLogFunction","message","csmGetLogFunction","getLoggingLevel","loggingLevel","LogLevel","LogLevel_Off","LogLevel2","CSM_ASSERT","CubismLogVerbose","fmt","args","CubismDebug","print","LogLevel_Verbose","CubismLogDebug","LogLevel_Debug","LogLevel_Info","LogLevel_Warning","CubismLogError","LogLevel_Error","logLevel","format","logPrint","buffer","replace","dumpBytes","CubismModel","update","drawables","resetDynamicFlags","getCanvasWidth","canvasinfo","CanvasWidth","PixelsPerUnit","getCanvasHeight","CanvasHeight","saveParameters","parameterCount","parameters","count","savedParameterCount","_savedParameters","_parameterValues","partCount","parts","_partIds","_notExistPartId","_notExistPartOpacities","getPartCount","_partOpacities","setPartOpacityById","index","getPartOpacityById","_notExistParameterId","keys","_notExistParameterValues","getParameterCount","getParameterMaximumValue","maximumValues","getParameterMinimumValue","minimumValues","getParameterDefaultValue","defaultValues","getParameterValueById","addParameterValueByIndex","multiplyParameterValueById","multiplyParameterValueByIndex","getDrawableIds","_drawableIds","getDrawableIndex","drawableId","drawableCount","drawableIndex","getDrawableCount","getDrawableId","ids","getDrawableRenderOrders","renderOrders","getDrawableTextureIndices","textureIndices","getDrawableDynamicFlagVertexPositionsDidChange","dynamicFlags","Utils","hasVertexPositionsDidChangeBit","getDrawableVertexIndexCount","indexCounts","getDrawableVertexCount","vertexCounts","getDrawableVertices","getDrawableVertexPositions","getDrawableVertexIndices","indices","vertexPositions","getDrawableVertexUvs","vertexUvs","getDrawableOpacity","opacities","getDrawableCulling","constantFlags","hasIsDoubleSidedBit","getDrawableBlendMode","hasBlendAdditiveBit","CubismBlendMode_Additive","hasBlendMultiplicativeBit","CubismBlendMode_Multiplicative","CubismBlendMode_Normal","getDrawableInvertedMaskBit","hasIsInvertedMaskBit","getDrawableMasks","masks","getDrawableMaskCounts","maskCounts","isUsingMasking","getDrawableDynamicFlagIsVisible","hasIsVisibleBit","getDrawableDynamicFlagVisibilityDidChange","hasVisibilityDidChangeBit","getDrawableDynamicFlagOpacityDidChange","hasOpacityDidChangeBit","getDrawableDynamicFlagRenderOrderDidChange","hasRenderOrderDidChangeBit","loadParameters","values","_parameterMaximumValues","_parameterMinimumValues","partIds","drawableIds","release","CubismMoc","mocBytes","moc","Moc","fromArrayBuffer","Error","createModel","cubismModel","Model","fromMoc","_moc","_modelCount","deleteModel","_release","CubismModelUserDataJson","json","size","_json","getUserDataCount","Meta","UserDataCount","getTotalUserDataSize","TotalUserDataSize","getUserDataTargetType","UserData","Target","getUserDataId","getUserDataValue","Value","ArtMesh","CubismModelUserData","parseUserData","getArtMeshUserDatas","_artMeshUserDataNode","typeOfArtMesh","nodeCount","addNode","targetId","targetType","_userDataNodes","ACubismMotion","_fadeInSeconds","_fadeOutSeconds","_weight","_offsetSeconds","_firedEventValues","motionQueueEntry","userTimeSeconds","isAvailable","isFinished","setIsStarted","setStartTime","setFadeInStartTime","duration","getDuration","getEndTime","setEndTime","getStartTime","fadeWeight","fadeIn","getFadeInStartTime","fadeOut","setState","doUpdateParameters","setIsFinished","setFadeInTime","fadeInSeconds","setFadeOutTime","fadeOutSeconds","getFadeOutTime","getFadeInTime","setWeight","getWeight","getLoopDuration","setOffsetTime","offsetSeconds","getFiredEvent","beforeCheckTimeSeconds","motionTimeSeconds","setFinishedMotionHandler","onFinishedMotionHandler","_onFinishedMotion","getFinishedMotionHandler","DefaultFadeTime","CubismExpressionMotion","_parameters","expression","fadeInTime","fadeOutTime","FadeOutTime","Parameters","param","blendType","Blend","ExpressionBlendType","ExpressionBlendType_Multiply","ExpressionBlendType_Overwrite","ExpressionBlendType_Add","item","parameter","ExpressionBlendType2","CubismConfig","CubismConfig2","supportMoreMaskDivisions","setOpacityFromMotion","CubismMotionCurveTarget","CubismMotionCurveTarget2","CubismMotionSegmentType","CubismMotionSegmentType2","CubismMotionPoint","time","CubismMotionSegment","basePointIndex","segmentType","CubismMotionCurve","id","type","segmentCount","baseSegmentIndex","CubismMotionEvent","fireTime","CubismMotionData","loop","curveCount","eventCount","fps","curves","segments","points","events","CubismMotionJson","getMotionDuration","Duration","isMotionLoop","Loop","getEvaluationOptionFlag","flagType","EvaluationOptionFlag","EvaluationOptionFlag_AreBeziersRistricted","AreBeziersRestricted","getMotionCurveCount","CurveCount","getMotionFps","Fps","getMotionTotalSegmentCount","TotalSegmentCount","getMotionTotalPointCount","TotalPointCount","getMotionFadeInTime","getMotionFadeOutTime","getMotionCurveTarget","curveIndex","Curves","getMotionCurveId","getMotionCurveFadeInTime","getMotionCurveFadeOutTime","getMotionCurveSegmentCount","Segments","getMotionCurveSegment","segmentIndex","getEventCount","getTotalEventValueSize","getEventTime","userDataIndex","Time","getEventValue","EvaluationOptionFlag2","EffectNameEyeBlink","EffectNameLipSync","TargetNameModel","TargetNameParameter","TargetNamePartOpacity","UseOldBeziersCurveMotion","lerpPoints","result","linearEvaluate","bezierEvaluate","p01","p12","p23","p012","p123","bezierEvaluateCardanoInterpretation","x1","x2","cx1","cx2","steppedEvaluate","inverseSteppedEvaluate","evaluateCurve","motionData","curve","target","totalSegmentCount","pointPosition","CubismMotionSegmentType_Bezier","segment","evaluate","CubismMotion","_eyeBlinkParameterIds","_lipSyncParameterIds","_sourceFrameRate","_loopDurationSeconds","_isLoop","_isLoopFadeIn","_lastWeight","parse","_motionData","_modelCurveIdEyeBlink","_modelCurveIdLipSync","timeOffsetSeconds","lipSyncValue","Number","MAX_VALUE","eyeBlinkValue","MaxTargetSize","lipSyncFlags","eyeBlinkFlags","tmpFadeIn","tmpFadeOut","CubismMotionCurveTarget_Model","CubismMotionCurveTarget_Parameter","sourceValue","fin","fout","paramWeight","CubismMotionCurveTarget_PartOpacity","setIsLoop","isLoop","setIsLoopFadeIn","loopFadeIn","isLoopFadeIn","setParameterFadeInTime","setParameterFadeOutTime","getParameterFadeInTime","getParameterFadeOutTime","setEffectIds","eyeBlinkParameterIds","lipSyncParameterIds","motionJson","areBeziersRestructed","Array","totalPointCount","segmentPosition","CubismMotionSegmentType_Linear","CubismMotionSegmentType_Stepped","CubismMotionSegmentType_InverseStepped","userdatacount","u","CubismMotionQueueEntry","_autoDelete","_available","_finished","_started","_startTimeSeconds","_fadeInStartTimeSeconds","_endTimeSeconds","_stateTimeSeconds","_stateWeight","_lastEventCheckSeconds","_motionQueueEntryHandle","_isTriggeredFadeOut","_motion","setFadeOut","startFadeOut","newEndTimeSeconds","startTime","endTime","f","setIsAvailable","timeSeconds","getStateTime","getStateWeight","getLastCheckEventSeconds","setLastCheckEventSeconds","checkSeconds","isTriggeredFadeOut","getFadeOutSeconds","CubismMotionQueueManager","_eventCustomData","_motions","startMotion","motion","autoDelete","InvalidMotionQueueEntryHandleValue","splice","isFinishedByHandle","motionQueueEntryNumber","stopAllMotions","getCubismMotionQueueEntry","find","entry","setEventCallback","callback","customData","_eventCallBack","doUpdateMotion","updated","firedList","i2","CubismMotionManager","_currentPriority","_reservePriority","getCurrentPriority","getReservePriority","setReservePriority","val","startMotionPriority","priority","updateMotion","reserveMotion","CubismPhysicsTargetType","CubismPhysicsTargetType2","CubismPhysicsSource","CubismPhysicsSource2","PhysicsJsonEffectiveForces","gravity","wind","CubismPhysicsParticle","initialPosition","position","lastPosition","lastGravity","force","velocity","CubismPhysicsSubRig","normalizationPosition","normalizationAngle","CubismPhysicsInput","source","CubismPhysicsOutput","destination","translationScale","CubismPhysicsRig","settings","inputs","outputs","particles","CubismPhysicsJson","getGravity","EffectiveForces","Gravity","X","Y","getWind","Wind","getSubRigCount","PhysicsSettingCount","getTotalInputCount","TotalInputCount","getTotalOutputCount","TotalOutputCount","getVertexCount","VertexCount","getNormalizationPositionMinimumValue","physicsSettingIndex","PhysicsSettings","Normalization","Position","Minimum","getNormalizationPositionMaximumValue","Maximum","getNormalizationPositionDefaultValue","Default","getNormalizationAngleMinimumValue","Angle","getNormalizationAngleMaximumValue","getNormalizationAngleDefaultValue","getInputCount","Input","getInputWeight","inputIndex","Weight","getInputReflect","Reflect","getInputType","Type","getInputSourceId","Source","getOutputCount","Output","getOutputVertexIndex","outputIndex","VertexIndex","getOutputAngleScale","Scale","getOutputWeight","getOutputDestinationId","Destination","getOutputType","getOutputReflect","getParticleCount","Vertices","getParticleMobility","vertexIndex","Mobility","getParticleDelay","Delay","getParticleAcceleration","Acceleration","getParticleRadius","Radius","getParticlePosition","PhysicsTypeTagX","PhysicsTypeTagY","PhysicsTypeTagAngle","AirResistance","MaximumWeight","MovementThreshold","CubismPhysics","_physicsRig","radAngle","outputValue","totalTranslation","currentSetting","currentInput","currentOutput","currentParticles","parameterMaximumValue","parameterMinimumValue","parameterDefaultValue","settingIndex","subRigCount","angle","baseInputIndex","baseOutputIndex","baseParticleIndex","inputCount","sourceParameterIndex","getNormalizedParameterValue","reflect","updateParticles","particleCount","_options","maximum","outputCount","particleIndex","destinationParameterIndex","translation","getValue","outParameterValue","prototype","JSON","stringify","subarray","updateOutputParameterValue","outParamIndex","setOptions","options","getOption","Options","physicsJson","setting","minimum","defalut","input","CubismPhysicsSource_X","getInputTranslationXFromNormalizedParameterValue","CubismPhysicsSource_Y","getInputTranslationYFromNormalizedParamterValue","CubismPhysicsSource_Angle","getInputAngleFromNormalizedParameterValue","CubismPhysicsTargetType_Parameter","output","angleScale","getOutputTranslationX","getScale","getOutputScaleTranslationX","getOutputTranslationY","getOutputScaleTranslationY","getOutputAngle","getOutputScaleAngle","particle","mobility","delay","acceleration","radius","strand","targetTranslation","targetAngle","isInverted","normalizeParameterValue","normalizaitionPosition","parentGravity","getRangeValue","getDefaultValue","minValue","strandCount","windDirection","thresholdValue","airResistance","totalRadian","currentGravity","direction","newDirection","parameterValueMinimum","parameterValueMaximum","outputScale","valueBelowMinimum","valueExceededMaximum","parameterMinimum","parameterMaximum","parameterDefault","normalizedMinimum","normalizedMaximum","normalizedDefault","maxValue","minNormValue","maxNormValue","middleNormValue","middleValue","paramValue","sign","nLength","pLength","csmRect","w","h","width","height","getCenterX","getCenterY","getRight","getBottom","setRect","expand","ColorChannelCount","shaderCount","s_instance","s_viewport","s_fbo","CubismClippingManager_WebGL","getChannelFlagAsColor","channelNo","_channelColors","getMaskRenderTexture","_maskTexture","texture","frameNo","_currentFrameNo","_clippingMaskBufferSize","_colorBuffer","gl","createTexture","bindTexture","TEXTURE_2D","texImage2D","RGBA","UNSIGNED_BYTE","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_MAG_FILTER","createFramebuffer","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","COLOR_ATTACHMENT0","CubismRenderTextureResource","setGL","calcClippedDrawTotalBounds","clippingContext","clippedDrawTotalMinX","clippedDrawTotalMinY","clippedDrawTotalMaxX","MIN_VALUE","clippedDrawTotalMaxY","clippedDrawCount","_clippedDrawableIndexList","clippedDrawableIndex","drawableVertexCount","drawableVertexes","minX","minY","maxX","maxY","pi","_allClippedDrawRect","_isUsing","_maskRenderTexture","_clippingContextListForMask","_clippingContextListForDraw","_tmpBoundsOnModel","_tmpMatrix","_tmpMatrixForMask","_tmpMatrixForDraw","tmp","_c","self","deleteFramebuffer","deleteTexture","drawableMasks","drawableMaskCounts","findSameClip","CubismClippingContext","addClippedDrawable","setupClippingContext","renderer","usingClipCount","clipIndex","cc","viewport","preDraw","setupLayoutBounds","clearColor","clear","COLOR_BUFFER_BIT","clipContext","allClipedDrawRect","layoutBoundsOnTex01","_layoutBounds","MARGIN","scaleX","scaleY","_matrixForMask","_matrixForDraw","clipDrawCount","_clippingIdCount","clipDrawIndex","_clippingIdList","setClippingContextBufferForMask","drawMesh","sameCount","clipId","div","mod","curClipIndex","layoutCount","_layoutChannelNo","xpos","ypos","getColorBuffer","getClippingContextListForDraw","setClippingMaskBufferSize","getClippingMaskBufferSize","manager","clippingDrawableIndices","clipCount","_owner","getClippingManager","setGl","CubismShader_WebGL","getInstance","deleteInstance","_shaderSets","releaseShaderProgram","setupShaderProgram","textureId","vertexCount","vertexArray","indexArray","uvArray","bufferData","colorBlendMode","baseColor","matrix4x4","invertedMask","generateShaders","SRC_COLOR","DST_COLOR","SRC_ALPHA","DST_ALPHA","clippingContextBufferForMask","getClippingContextBufferForMask","shaderSet","ShaderNames","ShaderNames_SetupMask","useProgram","shaderProgram","activeTexture","TEXTURE0","uniform1i","samplerTexture0Location","vertex","createBuffer","bindBuffer","ARRAY_BUFFER","DYNAMIC_DRAW","enableVertexAttribArray","attributePositionLocation","vertexAttribPointer","FLOAT","uv","attributeTexCoordLocation","colorChannel","uniform4f","uniformChannelFlagLocation","uniformMatrix4fv","uniformClipMatrixLocation","rect","uniformBaseColorLocation","ZERO","ONE_MINUS_SRC_COLOR","ONE_MINUS_SRC_ALPHA","clippingContextBufferForDraw","getClippingContextBufferForDraw","masked","ShaderNames_NormalPremultipliedAlpha","ONE","ShaderNames_AddPremultipliedAlpha","ShaderNames_MultPremultipliedAlpha","TEXTURE1","tex","samplerTexture1Location","uniformMatrixLocation","ELEMENT_ARRAY_BUFFER","blendFuncSeparate","deleteProgram","loadShaderProgram","vertexShaderSrcSetupMask","fragmentShaderSrcsetupMask","vertexShaderSrc","fragmentShaderSrcPremultipliedAlpha","vertexShaderSrcMasked","fragmentShaderSrcMaskPremultipliedAlpha","fragmentShaderSrcMaskInvertedPremultipliedAlpha","getAttribLocation","getUniformLocation","vertexShaderSource","fragmentShaderSource","createProgram","vertShader","compileShaderSource","VERTEX_SHADER","fragShader","FRAGMENT_SHADER","attachShader","linkProgram","linkStatus","getProgramParameter","LINK_STATUS","deleteShader","shaderType","shaderSource","shader","createShader","compileShader","getShaderInfoLog","status","getShaderParameter","COMPILE_STATUS","ShaderNames2","CubismRenderer_WebGL","_clippingContextBufferForMask","_clippingContextBufferForDraw","_clippingManager","firstDraw","_textures","_sortedDrawableIndexList","_bufferData","modelTextureNo","glTexture","getBindedTextures","deleteBuffer","renderOrder","order","setClippingContextBufferForDraw","textureNo","indexCount","CULL_FACE","disable","frontFace","CCW","modelColorRGBA","drawtexture","drawElements","TRIANGLES","UNSIGNED_SHORT","doStaticRelease","setRenderState","fbo","getExtension","SCISSOR_TEST","STENCIL_TEST","DEPTH_TEST","CW","BLEND","colorMask","clip","CubismModelSettingsJson","groups","hitAreas","HitAreas","layout","Layout","FileReferences","expressions","Expressions","motions","Motions","textures","Textures","physics","Physics","pose","Pose","group","Name","Ids","getLipSyncParameters","HitAreaPrefix","HitAreaHead","HitAreaBody","PartsIdCore","PartsArmPrefix","PartsArmLPrefix","PartsArmRPrefix","ParamAngleX","ParamAngleY","ParamAngleZ","ParamEyeLOpen","ParamEyeLSmile","ParamEyeROpen","ParamEyeRSmile","ParamEyeBallX","ParamEyeBallY","ParamEyeBallForm","ParamBrowLY","ParamBrowRY","ParamBrowLX","ParamBrowRX","ParamBrowLAngle","ParamBrowRAngle","ParamBrowLForm","ParamBrowRForm","ParamMouthForm","ParamMouthOpenY","ParamCheek","ParamBodyAngleX","ParamBodyAngleY","ParamBodyAngleZ","ParamBreath","ParamArmLA","ParamArmRA","ParamArmLB","ParamArmRB","ParamHandL","ParamHandR","ParamHairFront","ParamHairSide","ParamHairBack","ParamHairFluffy","ParamShoulderY","ParamBustX","ParamBustY","ParamBaseX","ParamBaseY","ParamNONE","LOGICAL_WIDTH","LOGICAL_HEIGHT","config","config2","LOG_LEVEL_VERBOSE","LOG_LEVEL_WARNING","LOG_LEVEL_ERROR","LOG_LEVEL_NONE","sound","motionSync","motionFadingDuration","idleMotionFadingDuration","expressionFadingDuration","preserveExpressionOnMotion","cubism4","VERSION","logger","tag","messages","console","warn","error","clamp","num","lower","upper","rand","copyProperty","fromKey","toKey","copyArray","array","isArray","filter","applyMixins","derivedCtor","baseCtors","forEach","baseCtor","getOwnPropertyNames","name","defineProperty","getOwnPropertyDescriptor","folderName","url2","lastSlashIndex","lastIndexOf","remove","indexOf","ExpressionManager","reserveExpressionIndex","destroyed","init","defaultExpression","createExpression","currentExpression","stopAllExpressions","loadExpression","definitions","_loadExpression","setRandomExpression","availableIndices","floor","setExpression","resetExpression","_setExpression","restoreExpression","getExpressionIndex","now","destroy","emit","EPSILON","MAX_SPEED","ACCELERATION_TIME","FocusController","targetX","targetY","vx","vy","focus","instant","dt","dx","dy","maxSpeed","ax","ay","maxA","maxV","ModelSettings","TypeError","resolveURL","path","replaceFiles","replacer","getDefinedFiles","files","file","validateFiles","assertFileExists","expectedFile","shouldThrow","actualPath","includes","essentialFiles","definedFiles","MotionPriority","MotionPriority2","MotionState","debug","currentPriority","reservePriority","reserve","currentGroup","currentIndex","dump","reservedGroup","reservedIndex","reservedIdleGroup","reservedIdleIndex","setReservedIdle","setReserved","start","setCurrent","complete","isActive","shouldRequestIdleMotion","shouldOverrideExpression","requestedGroup","requestedIndex","key","join","TAG$2","VOLUME","SoundManager","volume","_volume","audios","audio","onFinish","onError","Audio","preload","addEventListener","play","catch","dispatchEvent","ErrorEvent","readyState","HAVE_ENOUGH_DATA","pause","removeAttribute","MotionPreloadStrategy","MotionPreloadStrategy2","MotionManager","motionGroups","state","playing","idleMotionGroup","idle","setupMotions","motionPreload","loadMotion","_loadMotion","_0","_1","arguments","NORMAL","definition","currentAudio","soundURL","getSoundFile","readyToPlay","getMotionName","expressionManager","_startMotion","startRandomMotion","groupDefs","_stopAllMotions","IDLE","tempBounds","InternalModel","focusController","originalWidth","originalHeight","localTransform","drawingMatrix","textureFlipY","setupLayout","setupHitAreas","getSize","getLayout","offsetX","centerX","offsetY","centerY","top","bottom","getHitAreaDefs","hitArea","def","hitTest","hitAreaName","isHit","drawIndex","bounds","getDrawableBounds","vertices","updateTransform","transform","copyFrom","append","motionManager","TAG$1","NetworkError","aborted","_XHRLoader","createXHR","onload","onerror","xhr","XMLHttpRequest","allXhrSet","xhrSet","xhrMap","get","Set","set","listeners","cancelXHRs","once","open","responseType","response","onabort","onloadend","delete","abort","WeakMap","XHRLoader","loader","context","send","runMiddlewares","middleware","dispatch","err","fn","bind","err2","Live2DLoader","load","middlewares","textureOptions","resourceOptions","crossorigin","crossOrigin","fromURL","event","autoLoad","baseTexture","valid","resource","_live2d_load","errorHandler","removeEventListener","TAG","urlToJSON","live2dModel","jsonToSettings","runtime","Live2DFactory","findRuntime","createModelSettings","waitUntilReady","ready","setupOptionals","internalModel","tasks","createPose","coreModel","createPhysics","all","setupEssentials","live2DModel","textureLoadings","createInternalModel","modelData","isValidMoc","createCoreModel","_Live2DFactory","registerRuntime","runtimes","sort","test","setupLive2DModel","textureLoaded","modelLoaded","readyEventEmitted","live2DModelMiddlewares","handleError","releaseTasks","motionTasksMap","taskGroup","getMotionFile","motionDataType","_a2","taskGroup2","createMotion","expressionTasksMap","getExpressionFile","tasks2","InteractionMixin","_autoInteract","autoInteract","on","onTap","off","registerInteraction","interactionManager","unregisterInteraction","onPointerMove","tap","global","Live2DTransform","tempPoint","tempMatrix$1","tickerRef","Live2DModel","anchor","onAnchorChange","glContextID","elapsedTime","performance","deltaTime","_autoUpdate","fromSync","onLoad","registerTicker","tickerClass","autoUpdate","window","PIXI","Ticker","_destroyed","shared","onTickerUpdate","interactive","pivot","toModelPosition","tx","ty","hitAreaNames","skipUpdate","_recursivePostUpdateTransform","parent","_tempDisplayObjectParent","displayObjectUpdateTransform","worldTransform","applyInverse","containsPoint","point","getBounds","contains","_calculateBounds","_bounds","addFrame","deltaMS","_render","plugins","interaction","batch","geometry","shouldUpdateTexture","CONTEXT_UID","updateWebGLContext","_glTextures","pixelStorei","WebGLRenderingContext","UNPACK_FLIP_Y_WEBGL","touched","textureGC","framebuffer","internalTransform","globalUniforms","uniforms","projectionMatrix","draw","_FileLoader","settingsURL","filePath","resolved","filesMap","upload","fileMap","definedFile","decodeURI","actualFile","webkitRelativePath","URL","createObjectURL","_objectURL","createSettings","settingsFile","endsWith","settingsText","readText","settingsJSON","reader","FileReader","readAsText","FileLoader","factory","File","encodeURI","objectURL","revokeObjectURL","resourceObjectURL","unshift","_ZipLoader","unzip","filePaths","getFilePaths","requiredFilePaths","getFiles","settingsFilePath","zipReader","paths","releaseReader","ZipLoader","ZIP_PROTOCOL","uid","sourceURL","zipBlob","startsWith","Cubism4ExpressionManager","queueManager","findIndex","Cubism4ModelSettings","isValidJSON","every","entries","Sound","Cubism4MotionManager","eyeBlinkIds","lipSyncIds","caller","eventValue","defaultFadingDuration","tempMatrix","Cubism4InternalModel","lipSync","breath","idParamAngleX","idParamAngleY","idParamAngleZ","idParamEyeBallX","idParamEyeBallY","idParamBodyAngleX","idParamBreath","pixelsPerUnit","centeringTransform","eyeBlink","commonKey","charAt","toLowerCase","getDrawableIDs","arr","prepend","_d","motionUpdated","updateFocus","updateNaturalMovements","matrix","getParameter","FRAMEBUFFER_BINDING","startupPromise","startupRetries","cubism4Ready","startUpWithRetry","startUpCubism4","cause","setTimeout","byteLength","view","Int8Array","String","fromCharCode","__moc","ignored","coreModelWithMoc","releaseMoc"],"sources":["/home/fan/docker_image/live2d/demo/node_modules/pixi-live2d-display/dist/cubism4.es.js"],"sourcesContent":["var __pow = Math.pow;\nvar __async = (__this, __arguments, generator) => {\n  return new Promise((resolve, reject) => {\n    var fulfilled = (value) => {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var rejected = (value) => {\n      try {\n        step(generator.throw(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var step = (x) => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);\n    step((generator = generator.apply(__this, __arguments)).next());\n  });\n};\nimport { EventEmitter, url } from \"@pixi/utils\";\nimport { Matrix, Transform, Point, ObservablePoint } from \"@pixi/math\";\nimport { Texture } from \"@pixi/core\";\nimport { Container } from \"@pixi/display\";\nclass CubismBreath {\n  constructor() {\n    this._breathParameters = [];\n    this._currentTime = 0;\n  }\n  static create() {\n    return new CubismBreath();\n  }\n  setParameters(breathParameters) {\n    this._breathParameters = breathParameters;\n  }\n  getParameters() {\n    return this._breathParameters;\n  }\n  updateParameters(model, deltaTimeSeconds) {\n    this._currentTime += deltaTimeSeconds;\n    const t = this._currentTime * 2 * 3.14159;\n    for (let i = 0; i < this._breathParameters.length; ++i) {\n      const data = this._breathParameters[i];\n      model.addParameterValueById(data.parameterId, data.offset + data.peak * Math.sin(t / data.cycle), data.weight);\n    }\n  }\n}\nclass BreathParameterData {\n  constructor(parameterId, offset, peak, cycle, weight) {\n    this.parameterId = parameterId == void 0 ? void 0 : parameterId;\n    this.offset = offset == void 0 ? 0 : offset;\n    this.peak = peak == void 0 ? 0 : peak;\n    this.cycle = cycle == void 0 ? 0 : cycle;\n    this.weight = weight == void 0 ? 0 : weight;\n  }\n}\nconst _CubismEyeBlink = class {\n  static create(modelSetting) {\n    return new _CubismEyeBlink(modelSetting);\n  }\n  setBlinkingInterval(blinkingInterval) {\n    this._blinkingIntervalSeconds = blinkingInterval;\n  }\n  setBlinkingSetting(closing, closed, opening) {\n    this._closingSeconds = closing;\n    this._closedSeconds = closed;\n    this._openingSeconds = opening;\n  }\n  setParameterIds(parameterIds) {\n    this._parameterIds = parameterIds;\n  }\n  getParameterIds() {\n    return this._parameterIds;\n  }\n  updateParameters(model, deltaTimeSeconds) {\n    this._userTimeSeconds += deltaTimeSeconds;\n    let parameterValue;\n    let t = 0;\n    switch (this._blinkingState) {\n      case EyeState.EyeState_Closing:\n        t = (this._userTimeSeconds - this._stateStartTimeSeconds) / this._closingSeconds;\n        if (t >= 1) {\n          t = 1;\n          this._blinkingState = EyeState.EyeState_Closed;\n          this._stateStartTimeSeconds = this._userTimeSeconds;\n        }\n        parameterValue = 1 - t;\n        break;\n      case EyeState.EyeState_Closed:\n        t = (this._userTimeSeconds - this._stateStartTimeSeconds) / this._closedSeconds;\n        if (t >= 1) {\n          this._blinkingState = EyeState.EyeState_Opening;\n          this._stateStartTimeSeconds = this._userTimeSeconds;\n        }\n        parameterValue = 0;\n        break;\n      case EyeState.EyeState_Opening:\n        t = (this._userTimeSeconds - this._stateStartTimeSeconds) / this._openingSeconds;\n        if (t >= 1) {\n          t = 1;\n          this._blinkingState = EyeState.EyeState_Interval;\n          this._nextBlinkingTime = this.determinNextBlinkingTiming();\n        }\n        parameterValue = t;\n        break;\n      case EyeState.EyeState_Interval:\n        if (this._nextBlinkingTime < this._userTimeSeconds) {\n          this._blinkingState = EyeState.EyeState_Closing;\n          this._stateStartTimeSeconds = this._userTimeSeconds;\n        }\n        parameterValue = 1;\n        break;\n      case EyeState.EyeState_First:\n      default:\n        this._blinkingState = EyeState.EyeState_Interval;\n        this._nextBlinkingTime = this.determinNextBlinkingTiming();\n        parameterValue = 1;\n        break;\n    }\n    if (!_CubismEyeBlink.CloseIfZero) {\n      parameterValue = -parameterValue;\n    }\n    for (let i = 0; i < this._parameterIds.length; ++i) {\n      model.setParameterValueById(this._parameterIds[i], parameterValue);\n    }\n  }\n  constructor(modelSetting) {\n    var _a, _b;\n    this._blinkingState = EyeState.EyeState_First;\n    this._nextBlinkingTime = 0;\n    this._stateStartTimeSeconds = 0;\n    this._blinkingIntervalSeconds = 4;\n    this._closingSeconds = 0.1;\n    this._closedSeconds = 0.05;\n    this._openingSeconds = 0.15;\n    this._userTimeSeconds = 0;\n    this._parameterIds = [];\n    if (modelSetting == null) {\n      return;\n    }\n    this._parameterIds = (_b = (_a = modelSetting.getEyeBlinkParameters()) == null ? void 0 : _a.slice()) != null ? _b : this._parameterIds;\n  }\n  determinNextBlinkingTiming() {\n    const r = Math.random();\n    return this._userTimeSeconds + r * (2 * this._blinkingIntervalSeconds - 1);\n  }\n};\nlet CubismEyeBlink = _CubismEyeBlink;\nCubismEyeBlink.CloseIfZero = true;\nvar EyeState = /* @__PURE__ */ ((EyeState2) => {\n  EyeState2[EyeState2[\"EyeState_First\"] = 0] = \"EyeState_First\";\n  EyeState2[EyeState2[\"EyeState_Interval\"] = 1] = \"EyeState_Interval\";\n  EyeState2[EyeState2[\"EyeState_Closing\"] = 2] = \"EyeState_Closing\";\n  EyeState2[EyeState2[\"EyeState_Closed\"] = 3] = \"EyeState_Closed\";\n  EyeState2[EyeState2[\"EyeState_Opening\"] = 4] = \"EyeState_Opening\";\n  return EyeState2;\n})(EyeState || {});\nconst Epsilon = 1e-3;\nconst DefaultFadeInSeconds = 0.5;\nclass CubismPose {\n  static create(pose3json) {\n    const ret = new CubismPose();\n    if (typeof pose3json.FadeInTime === \"number\") {\n      ret._fadeTimeSeconds = pose3json.FadeInTime;\n      if (ret._fadeTimeSeconds <= 0) {\n        ret._fadeTimeSeconds = DefaultFadeInSeconds;\n      }\n    }\n    const poseListInfo = pose3json.Groups;\n    const poseCount = poseListInfo.length;\n    for (let poseIndex = 0; poseIndex < poseCount; ++poseIndex) {\n      const idListInfo = poseListInfo[poseIndex];\n      const idCount = idListInfo.length;\n      let groupCount = 0;\n      for (let groupIndex = 0; groupIndex < idCount; ++groupIndex) {\n        const partInfo = idListInfo[groupIndex];\n        const partData = new PartData();\n        partData.partId = partInfo.Id;\n        const linkListInfo = partInfo.Link;\n        if (linkListInfo) {\n          const linkCount = linkListInfo.length;\n          for (let linkIndex = 0; linkIndex < linkCount; ++linkIndex) {\n            const linkPart = new PartData();\n            linkPart.partId = linkListInfo[linkIndex];\n            partData.link.push(linkPart);\n          }\n        }\n        ret._partGroups.push(partData);\n        ++groupCount;\n      }\n      ret._partGroupCounts.push(groupCount);\n    }\n    return ret;\n  }\n  updateParameters(model, deltaTimeSeconds) {\n    if (model != this._lastModel) {\n      this.reset(model);\n    }\n    this._lastModel = model;\n    if (deltaTimeSeconds < 0) {\n      deltaTimeSeconds = 0;\n    }\n    let beginIndex = 0;\n    for (let i = 0; i < this._partGroupCounts.length; i++) {\n      const partGroupCount = this._partGroupCounts[i];\n      this.doFade(model, deltaTimeSeconds, beginIndex, partGroupCount);\n      beginIndex += partGroupCount;\n    }\n    this.copyPartOpacities(model);\n  }\n  reset(model) {\n    let beginIndex = 0;\n    for (let i = 0; i < this._partGroupCounts.length; ++i) {\n      const groupCount = this._partGroupCounts[i];\n      for (let j = beginIndex; j < beginIndex + groupCount; ++j) {\n        this._partGroups[j].initialize(model);\n        const partsIndex = this._partGroups[j].partIndex;\n        const paramIndex = this._partGroups[j].parameterIndex;\n        if (partsIndex < 0) {\n          continue;\n        }\n        model.setPartOpacityByIndex(partsIndex, j == beginIndex ? 1 : 0);\n        model.setParameterValueByIndex(paramIndex, j == beginIndex ? 1 : 0);\n        for (let k = 0; k < this._partGroups[j].link.length; ++k) {\n          this._partGroups[j].link[k].initialize(model);\n        }\n      }\n      beginIndex += groupCount;\n    }\n  }\n  copyPartOpacities(model) {\n    for (let groupIndex = 0; groupIndex < this._partGroups.length; ++groupIndex) {\n      const partData = this._partGroups[groupIndex];\n      if (partData.link.length == 0) {\n        continue;\n      }\n      const partIndex = this._partGroups[groupIndex].partIndex;\n      const opacity = model.getPartOpacityByIndex(partIndex);\n      for (let linkIndex = 0; linkIndex < partData.link.length; ++linkIndex) {\n        const linkPart = partData.link[linkIndex];\n        const linkPartIndex = linkPart.partIndex;\n        if (linkPartIndex < 0) {\n          continue;\n        }\n        model.setPartOpacityByIndex(linkPartIndex, opacity);\n      }\n    }\n  }\n  doFade(model, deltaTimeSeconds, beginIndex, partGroupCount) {\n    let visiblePartIndex = -1;\n    let newOpacity = 1;\n    const phi = 0.5;\n    const backOpacityThreshold = 0.15;\n    for (let i = beginIndex; i < beginIndex + partGroupCount; ++i) {\n      const partIndex = this._partGroups[i].partIndex;\n      const paramIndex = this._partGroups[i].parameterIndex;\n      if (model.getParameterValueByIndex(paramIndex) > Epsilon) {\n        if (visiblePartIndex >= 0) {\n          break;\n        }\n        visiblePartIndex = i;\n        newOpacity = model.getPartOpacityByIndex(partIndex);\n        newOpacity += deltaTimeSeconds / this._fadeTimeSeconds;\n        if (newOpacity > 1) {\n          newOpacity = 1;\n        }\n      }\n    }\n    if (visiblePartIndex < 0) {\n      visiblePartIndex = 0;\n      newOpacity = 1;\n    }\n    for (let i = beginIndex; i < beginIndex + partGroupCount; ++i) {\n      const partsIndex = this._partGroups[i].partIndex;\n      if (visiblePartIndex == i) {\n        model.setPartOpacityByIndex(partsIndex, newOpacity);\n      } else {\n        let opacity = model.getPartOpacityByIndex(partsIndex);\n        let a1;\n        if (newOpacity < phi) {\n          a1 = newOpacity * (phi - 1) / phi + 1;\n        } else {\n          a1 = (1 - newOpacity) * phi / (1 - phi);\n        }\n        const backOpacity = (1 - a1) * (1 - newOpacity);\n        if (backOpacity > backOpacityThreshold) {\n          a1 = 1 - backOpacityThreshold / (1 - newOpacity);\n        }\n        if (opacity > a1) {\n          opacity = a1;\n        }\n        model.setPartOpacityByIndex(partsIndex, opacity);\n      }\n    }\n  }\n  constructor() {\n    this._fadeTimeSeconds = DefaultFadeInSeconds;\n    this._lastModel = void 0;\n    this._partGroups = [];\n    this._partGroupCounts = [];\n  }\n}\nclass PartData {\n  constructor(v) {\n    this.parameterIndex = 0;\n    this.partIndex = 0;\n    this.partId = \"\";\n    this.link = [];\n    if (v != void 0) {\n      this.assignment(v);\n    }\n  }\n  assignment(v) {\n    this.partId = v.partId;\n    this.link = v.link.map((link) => link.clone());\n    return this;\n  }\n  initialize(model) {\n    this.parameterIndex = model.getParameterIndex(this.partId);\n    this.partIndex = model.getPartIndex(this.partId);\n    model.setParameterValueByIndex(this.parameterIndex, 1);\n  }\n  clone() {\n    const clonePartData = new PartData();\n    clonePartData.partId = this.partId;\n    clonePartData.parameterIndex = this.parameterIndex;\n    clonePartData.partIndex = this.partIndex;\n    clonePartData.link = this.link.map((link) => link.clone());\n    return clonePartData;\n  }\n}\nclass CubismVector2 {\n  constructor(x, y) {\n    this.x = x || 0;\n    this.y = y || 0;\n  }\n  add(vector2) {\n    const ret = new CubismVector2(0, 0);\n    ret.x = this.x + vector2.x;\n    ret.y = this.y + vector2.y;\n    return ret;\n  }\n  substract(vector2) {\n    const ret = new CubismVector2(0, 0);\n    ret.x = this.x - vector2.x;\n    ret.y = this.y - vector2.y;\n    return ret;\n  }\n  multiply(vector2) {\n    const ret = new CubismVector2(0, 0);\n    ret.x = this.x * vector2.x;\n    ret.y = this.y * vector2.y;\n    return ret;\n  }\n  multiplyByScaler(scalar) {\n    return this.multiply(new CubismVector2(scalar, scalar));\n  }\n  division(vector2) {\n    const ret = new CubismVector2(0, 0);\n    ret.x = this.x / vector2.x;\n    ret.y = this.y / vector2.y;\n    return ret;\n  }\n  divisionByScalar(scalar) {\n    return this.division(new CubismVector2(scalar, scalar));\n  }\n  getLength() {\n    return Math.sqrt(this.x * this.x + this.y * this.y);\n  }\n  getDistanceWith(a) {\n    return Math.sqrt((this.x - a.x) * (this.x - a.x) + (this.y - a.y) * (this.y - a.y));\n  }\n  dot(a) {\n    return this.x * a.x + this.y * a.y;\n  }\n  normalize() {\n    const length = Math.pow(this.x * this.x + this.y * this.y, 0.5);\n    this.x = this.x / length;\n    this.y = this.y / length;\n  }\n  isEqual(rhs) {\n    return this.x == rhs.x && this.y == rhs.y;\n  }\n  isNotEqual(rhs) {\n    return !this.isEqual(rhs);\n  }\n}\nconst _CubismMath = class {\n  static range(value, min, max) {\n    if (value < min) {\n      value = min;\n    } else if (value > max) {\n      value = max;\n    }\n    return value;\n  }\n  static sin(x) {\n    return Math.sin(x);\n  }\n  static cos(x) {\n    return Math.cos(x);\n  }\n  static abs(x) {\n    return Math.abs(x);\n  }\n  static sqrt(x) {\n    return Math.sqrt(x);\n  }\n  static cbrt(x) {\n    if (x === 0) {\n      return x;\n    }\n    let cx = x;\n    const isNegativeNumber = cx < 0;\n    if (isNegativeNumber) {\n      cx = -cx;\n    }\n    let ret;\n    if (cx === Infinity) {\n      ret = Infinity;\n    } else {\n      ret = Math.exp(Math.log(cx) / 3);\n      ret = (cx / (ret * ret) + 2 * ret) / 3;\n    }\n    return isNegativeNumber ? -ret : ret;\n  }\n  static getEasingSine(value) {\n    if (value < 0) {\n      return 0;\n    } else if (value > 1) {\n      return 1;\n    }\n    return 0.5 - 0.5 * this.cos(value * Math.PI);\n  }\n  static max(left, right) {\n    return left > right ? left : right;\n  }\n  static min(left, right) {\n    return left > right ? right : left;\n  }\n  static degreesToRadian(degrees) {\n    return degrees / 180 * Math.PI;\n  }\n  static radianToDegrees(radian) {\n    return radian * 180 / Math.PI;\n  }\n  static directionToRadian(from, to) {\n    const q1 = Math.atan2(to.y, to.x);\n    const q2 = Math.atan2(from.y, from.x);\n    let ret = q1 - q2;\n    while (ret < -Math.PI) {\n      ret += Math.PI * 2;\n    }\n    while (ret > Math.PI) {\n      ret -= Math.PI * 2;\n    }\n    return ret;\n  }\n  static directionToDegrees(from, to) {\n    const radian = this.directionToRadian(from, to);\n    let degree = this.radianToDegrees(radian);\n    if (to.x - from.x > 0) {\n      degree = -degree;\n    }\n    return degree;\n  }\n  static radianToDirection(totalAngle) {\n    const ret = new CubismVector2();\n    ret.x = this.sin(totalAngle);\n    ret.y = this.cos(totalAngle);\n    return ret;\n  }\n  static quadraticEquation(a, b, c) {\n    if (this.abs(a) < _CubismMath.Epsilon) {\n      if (this.abs(b) < _CubismMath.Epsilon) {\n        return -c;\n      }\n      return -c / b;\n    }\n    return -(b + this.sqrt(b * b - 4 * a * c)) / (2 * a);\n  }\n  static cardanoAlgorithmForBezier(a, b, c, d) {\n    if (this.sqrt(a) < _CubismMath.Epsilon) {\n      return this.range(this.quadraticEquation(b, c, d), 0, 1);\n    }\n    const ba = b / a;\n    const ca = c / a;\n    const da = d / a;\n    const p = (3 * ca - ba * ba) / 3;\n    const p3 = p / 3;\n    const q = (2 * ba * ba * ba - 9 * ba * ca + 27 * da) / 27;\n    const q2 = q / 2;\n    const discriminant = q2 * q2 + p3 * p3 * p3;\n    const center = 0.5;\n    const threshold = center + 0.01;\n    if (discriminant < 0) {\n      const mp3 = -p / 3;\n      const mp33 = mp3 * mp3 * mp3;\n      const r = this.sqrt(mp33);\n      const t = -q / (2 * r);\n      const cosphi = this.range(t, -1, 1);\n      const phi = Math.acos(cosphi);\n      const crtr = this.cbrt(r);\n      const t1 = 2 * crtr;\n      const root12 = t1 * this.cos(phi / 3) - ba / 3;\n      if (this.abs(root12 - center) < threshold) {\n        return this.range(root12, 0, 1);\n      }\n      const root2 = t1 * this.cos((phi + 2 * Math.PI) / 3) - ba / 3;\n      if (this.abs(root2 - center) < threshold) {\n        return this.range(root2, 0, 1);\n      }\n      const root3 = t1 * this.cos((phi + 4 * Math.PI) / 3) - ba / 3;\n      return this.range(root3, 0, 1);\n    }\n    if (discriminant == 0) {\n      let u12;\n      if (q2 < 0) {\n        u12 = this.cbrt(-q2);\n      } else {\n        u12 = -this.cbrt(q2);\n      }\n      const root12 = 2 * u12 - ba / 3;\n      if (this.abs(root12 - center) < threshold) {\n        return this.range(root12, 0, 1);\n      }\n      const root2 = -u12 - ba / 3;\n      return this.range(root2, 0, 1);\n    }\n    const sd = this.sqrt(discriminant);\n    const u1 = this.cbrt(sd - q2);\n    const v1 = this.cbrt(sd + q2);\n    const root1 = u1 - v1 - ba / 3;\n    return this.range(root1, 0, 1);\n  }\n  constructor() {\n  }\n};\nlet CubismMath = _CubismMath;\nCubismMath.Epsilon = 1e-5;\nclass CubismMatrix44 {\n  constructor() {\n    this._tr = new Float32Array(16);\n    this.loadIdentity();\n  }\n  static multiply(a, b, dst) {\n    const c = new Float32Array([\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0\n    ]);\n    const n = 4;\n    for (let i = 0; i < n; ++i) {\n      for (let j = 0; j < n; ++j) {\n        for (let k = 0; k < n; ++k) {\n          c[j + i * 4] += a[k + i * 4] * b[j + k * 4];\n        }\n      }\n    }\n    for (let i = 0; i < 16; ++i) {\n      dst[i] = c[i];\n    }\n  }\n  loadIdentity() {\n    const c = new Float32Array([\n      1,\n      0,\n      0,\n      0,\n      0,\n      1,\n      0,\n      0,\n      0,\n      0,\n      1,\n      0,\n      0,\n      0,\n      0,\n      1\n    ]);\n    this.setMatrix(c);\n  }\n  setMatrix(tr) {\n    for (let i = 0; i < 16; ++i) {\n      this._tr[i] = tr[i];\n    }\n  }\n  getArray() {\n    return this._tr;\n  }\n  getScaleX() {\n    return this._tr[0];\n  }\n  getScaleY() {\n    return this._tr[5];\n  }\n  getTranslateX() {\n    return this._tr[12];\n  }\n  getTranslateY() {\n    return this._tr[13];\n  }\n  transformX(src) {\n    return this._tr[0] * src + this._tr[12];\n  }\n  transformY(src) {\n    return this._tr[5] * src + this._tr[13];\n  }\n  invertTransformX(src) {\n    return (src - this._tr[12]) / this._tr[0];\n  }\n  invertTransformY(src) {\n    return (src - this._tr[13]) / this._tr[5];\n  }\n  translateRelative(x, y) {\n    const tr1 = new Float32Array([\n      1,\n      0,\n      0,\n      0,\n      0,\n      1,\n      0,\n      0,\n      0,\n      0,\n      1,\n      0,\n      x,\n      y,\n      0,\n      1\n    ]);\n    CubismMatrix44.multiply(tr1, this._tr, this._tr);\n  }\n  translate(x, y) {\n    this._tr[12] = x;\n    this._tr[13] = y;\n  }\n  translateX(x) {\n    this._tr[12] = x;\n  }\n  translateY(y) {\n    this._tr[13] = y;\n  }\n  scaleRelative(x, y) {\n    const tr1 = new Float32Array([\n      x,\n      0,\n      0,\n      0,\n      0,\n      y,\n      0,\n      0,\n      0,\n      0,\n      1,\n      0,\n      0,\n      0,\n      0,\n      1\n    ]);\n    CubismMatrix44.multiply(tr1, this._tr, this._tr);\n  }\n  scale(x, y) {\n    this._tr[0] = x;\n    this._tr[5] = y;\n  }\n  multiplyByMatrix(m) {\n    CubismMatrix44.multiply(m.getArray(), this._tr, this._tr);\n  }\n  clone() {\n    const cloneMatrix = new CubismMatrix44();\n    for (let i = 0; i < this._tr.length; i++) {\n      cloneMatrix._tr[i] = this._tr[i];\n    }\n    return cloneMatrix;\n  }\n}\nclass CubismRenderer {\n  initialize(model) {\n    this._model = model;\n  }\n  drawModel() {\n    if (this.getModel() == null)\n      return;\n    this.doDrawModel();\n  }\n  setMvpMatrix(matrix44) {\n    this._mvpMatrix4x4.setMatrix(matrix44.getArray());\n  }\n  getMvpMatrix() {\n    return this._mvpMatrix4x4;\n  }\n  setModelColor(red, green, blue, alpha) {\n    if (red < 0) {\n      red = 0;\n    } else if (red > 1) {\n      red = 1;\n    }\n    if (green < 0) {\n      green = 0;\n    } else if (green > 1) {\n      green = 1;\n    }\n    if (blue < 0) {\n      blue = 0;\n    } else if (blue > 1) {\n      blue = 1;\n    }\n    if (alpha < 0) {\n      alpha = 0;\n    } else if (alpha > 1) {\n      alpha = 1;\n    }\n    this._modelColor.R = red;\n    this._modelColor.G = green;\n    this._modelColor.B = blue;\n    this._modelColor.A = alpha;\n  }\n  getModelColor() {\n    return Object.assign({}, this._modelColor);\n  }\n  setIsPremultipliedAlpha(enable) {\n    this._isPremultipliedAlpha = enable;\n  }\n  isPremultipliedAlpha() {\n    return this._isPremultipliedAlpha;\n  }\n  setIsCulling(culling) {\n    this._isCulling = culling;\n  }\n  isCulling() {\n    return this._isCulling;\n  }\n  setAnisotropy(n) {\n    this._anisortopy = n;\n  }\n  getAnisotropy() {\n    return this._anisortopy;\n  }\n  getModel() {\n    return this._model;\n  }\n  constructor() {\n    this._isCulling = false;\n    this._isPremultipliedAlpha = false;\n    this._anisortopy = 0;\n    this._modelColor = new CubismTextureColor();\n    this._mvpMatrix4x4 = new CubismMatrix44();\n    this._mvpMatrix4x4.loadIdentity();\n  }\n}\nvar CubismBlendMode = /* @__PURE__ */ ((CubismBlendMode2) => {\n  CubismBlendMode2[CubismBlendMode2[\"CubismBlendMode_Normal\"] = 0] = \"CubismBlendMode_Normal\";\n  CubismBlendMode2[CubismBlendMode2[\"CubismBlendMode_Additive\"] = 1] = \"CubismBlendMode_Additive\";\n  CubismBlendMode2[CubismBlendMode2[\"CubismBlendMode_Multiplicative\"] = 2] = \"CubismBlendMode_Multiplicative\";\n  return CubismBlendMode2;\n})(CubismBlendMode || {});\nclass CubismTextureColor {\n  constructor() {\n    this.R = 1;\n    this.G = 1;\n    this.B = 1;\n    this.A = 1;\n  }\n}\nlet s_isStarted = false;\nlet s_isInitialized = false;\nlet s_option = void 0;\nconst Constant = {\n  vertexOffset: 0,\n  vertexStep: 2\n};\nclass CubismFramework {\n  static startUp(option) {\n    if (s_isStarted) {\n      CubismLogInfo(\"CubismFramework.startUp() is already done.\");\n      return s_isStarted;\n    }\n    if (Live2DCubismCore._isStarted) {\n      s_isStarted = true;\n      return true;\n    }\n    Live2DCubismCore._isStarted = true;\n    s_option = option;\n    if (s_option) {\n      Live2DCubismCore.Logging.csmSetLogFunction(s_option.logFunction);\n    }\n    s_isStarted = true;\n    if (s_isStarted) {\n      const version = Live2DCubismCore.Version.csmGetVersion();\n      const major = (version & 4278190080) >> 24;\n      const minor = (version & 16711680) >> 16;\n      const patch = version & 65535;\n      const versionNumber = version;\n      CubismLogInfo(`Live2D Cubism Core version: {0}.{1}.{2} ({3})`, (\"00\" + major).slice(-2), (\"00\" + minor).slice(-2), (\"0000\" + patch).slice(-4), versionNumber);\n    }\n    CubismLogInfo(\"CubismFramework.startUp() is complete.\");\n    return s_isStarted;\n  }\n  static cleanUp() {\n    s_isStarted = false;\n    s_isInitialized = false;\n    s_option = void 0;\n  }\n  static initialize() {\n    if (!s_isStarted) {\n      CubismLogWarning(\"CubismFramework is not started.\");\n      return;\n    }\n    if (s_isInitialized) {\n      CubismLogWarning(\"CubismFramework.initialize() skipped, already initialized.\");\n      return;\n    }\n    s_isInitialized = true;\n    CubismLogInfo(\"CubismFramework.initialize() is complete.\");\n  }\n  static dispose() {\n    if (!s_isStarted) {\n      CubismLogWarning(\"CubismFramework is not started.\");\n      return;\n    }\n    if (!s_isInitialized) {\n      CubismLogWarning(\"CubismFramework.dispose() skipped, not initialized.\");\n      return;\n    }\n    CubismRenderer.staticRelease();\n    s_isInitialized = false;\n    CubismLogInfo(\"CubismFramework.dispose() is complete.\");\n  }\n  static isStarted() {\n    return s_isStarted;\n  }\n  static isInitialized() {\n    return s_isInitialized;\n  }\n  static coreLogFunction(message) {\n    if (!Live2DCubismCore.Logging.csmGetLogFunction()) {\n      return;\n    }\n    Live2DCubismCore.Logging.csmGetLogFunction()(message);\n  }\n  static getLoggingLevel() {\n    if (s_option != null) {\n      return s_option.loggingLevel;\n    }\n    return LogLevel.LogLevel_Off;\n  }\n  constructor() {\n  }\n}\nvar LogLevel = /* @__PURE__ */ ((LogLevel2) => {\n  LogLevel2[LogLevel2[\"LogLevel_Verbose\"] = 0] = \"LogLevel_Verbose\";\n  LogLevel2[LogLevel2[\"LogLevel_Debug\"] = 1] = \"LogLevel_Debug\";\n  LogLevel2[LogLevel2[\"LogLevel_Info\"] = 2] = \"LogLevel_Info\";\n  LogLevel2[LogLevel2[\"LogLevel_Warning\"] = 3] = \"LogLevel_Warning\";\n  LogLevel2[LogLevel2[\"LogLevel_Error\"] = 4] = \"LogLevel_Error\";\n  LogLevel2[LogLevel2[\"LogLevel_Off\"] = 5] = \"LogLevel_Off\";\n  return LogLevel2;\n})(LogLevel || {});\nconst CSM_ASSERT = () => {\n};\nfunction CubismLogVerbose(fmt, ...args) {\n  CubismDebug.print(LogLevel.LogLevel_Verbose, \"[CSM][V]\" + fmt + \"\\n\", args);\n}\nfunction CubismLogDebug(fmt, ...args) {\n  CubismDebug.print(LogLevel.LogLevel_Debug, \"[CSM][D]\" + fmt + \"\\n\", args);\n}\nfunction CubismLogInfo(fmt, ...args) {\n  CubismDebug.print(LogLevel.LogLevel_Info, \"[CSM][I]\" + fmt + \"\\n\", args);\n}\nfunction CubismLogWarning(fmt, ...args) {\n  CubismDebug.print(LogLevel.LogLevel_Warning, \"[CSM][W]\" + fmt + \"\\n\", args);\n}\nfunction CubismLogError(fmt, ...args) {\n  CubismDebug.print(LogLevel.LogLevel_Error, \"[CSM][E]\" + fmt + \"\\n\", args);\n}\nclass CubismDebug {\n  static print(logLevel, format, args) {\n    if (logLevel < CubismFramework.getLoggingLevel()) {\n      return;\n    }\n    const logPrint = CubismFramework.coreLogFunction;\n    if (!logPrint)\n      return;\n    const buffer = format.replace(/{(\\d+)}/g, (m, k) => {\n      return args[k];\n    });\n    logPrint(buffer);\n  }\n  static dumpBytes(logLevel, data, length) {\n    for (let i = 0; i < length; i++) {\n      if (i % 16 == 0 && i > 0)\n        this.print(logLevel, \"\\n\");\n      else if (i % 8 == 0 && i > 0)\n        this.print(logLevel, \"  \");\n      this.print(logLevel, \"{0} \", [data[i] & 255]);\n    }\n    this.print(logLevel, \"\\n\");\n  }\n  constructor() {\n  }\n}\nclass CubismModel {\n  update() {\n    this._model.update();\n    this._model.drawables.resetDynamicFlags();\n  }\n  getCanvasWidth() {\n    if (this._model == null) {\n      return 0;\n    }\n    return this._model.canvasinfo.CanvasWidth / this._model.canvasinfo.PixelsPerUnit;\n  }\n  getCanvasHeight() {\n    if (this._model == null) {\n      return 0;\n    }\n    return this._model.canvasinfo.CanvasHeight / this._model.canvasinfo.PixelsPerUnit;\n  }\n  saveParameters() {\n    const parameterCount = this._model.parameters.count;\n    const savedParameterCount = this._savedParameters.length;\n    for (let i = 0; i < parameterCount; ++i) {\n      if (i < savedParameterCount) {\n        this._savedParameters[i] = this._parameterValues[i];\n      } else {\n        this._savedParameters.push(this._parameterValues[i]);\n      }\n    }\n  }\n  getModel() {\n    return this._model;\n  }\n  getPartIndex(partId) {\n    let partIndex;\n    const partCount = this._model.parts.count;\n    for (partIndex = 0; partIndex < partCount; ++partIndex) {\n      if (partId == this._partIds[partIndex]) {\n        return partIndex;\n      }\n    }\n    if (partId in this._notExistPartId) {\n      return this._notExistPartId[partId];\n    }\n    partIndex = partCount + this._notExistPartId.length;\n    this._notExistPartId[partId] = partIndex;\n    this._notExistPartOpacities[partIndex] = 0;\n    return partIndex;\n  }\n  getPartCount() {\n    return this._model.parts.count;\n  }\n  setPartOpacityByIndex(partIndex, opacity) {\n    if (partIndex in this._notExistPartOpacities) {\n      this._notExistPartOpacities[partIndex] = opacity;\n      return;\n    }\n    CSM_ASSERT(0 <= partIndex && partIndex < this.getPartCount());\n    this._partOpacities[partIndex] = opacity;\n  }\n  setPartOpacityById(partId, opacity) {\n    const index = this.getPartIndex(partId);\n    if (index < 0) {\n      return;\n    }\n    this.setPartOpacityByIndex(index, opacity);\n  }\n  getPartOpacityByIndex(partIndex) {\n    if (partIndex in this._notExistPartOpacities) {\n      return this._notExistPartOpacities[partIndex];\n    }\n    CSM_ASSERT(0 <= partIndex && partIndex < this.getPartCount());\n    return this._partOpacities[partIndex];\n  }\n  getPartOpacityById(partId) {\n    const index = this.getPartIndex(partId);\n    if (index < 0) {\n      return 0;\n    }\n    return this.getPartOpacityByIndex(index);\n  }\n  getParameterIndex(parameterId) {\n    let parameterIndex;\n    const idCount = this._model.parameters.count;\n    for (parameterIndex = 0; parameterIndex < idCount; ++parameterIndex) {\n      if (parameterId != this._parameterIds[parameterIndex]) {\n        continue;\n      }\n      return parameterIndex;\n    }\n    if (parameterId in this._notExistParameterId) {\n      return this._notExistParameterId[parameterId];\n    }\n    parameterIndex = this._model.parameters.count + Object.keys(this._notExistParameterId).length;\n    this._notExistParameterId[parameterId] = parameterIndex;\n    this._notExistParameterValues[parameterIndex] = 0;\n    return parameterIndex;\n  }\n  getParameterCount() {\n    return this._model.parameters.count;\n  }\n  getParameterMaximumValue(parameterIndex) {\n    return this._model.parameters.maximumValues[parameterIndex];\n  }\n  getParameterMinimumValue(parameterIndex) {\n    return this._model.parameters.minimumValues[parameterIndex];\n  }\n  getParameterDefaultValue(parameterIndex) {\n    return this._model.parameters.defaultValues[parameterIndex];\n  }\n  getParameterValueByIndex(parameterIndex) {\n    if (parameterIndex in this._notExistParameterValues) {\n      return this._notExistParameterValues[parameterIndex];\n    }\n    CSM_ASSERT(0 <= parameterIndex && parameterIndex < this.getParameterCount());\n    return this._parameterValues[parameterIndex];\n  }\n  getParameterValueById(parameterId) {\n    const parameterIndex = this.getParameterIndex(parameterId);\n    return this.getParameterValueByIndex(parameterIndex);\n  }\n  setParameterValueByIndex(parameterIndex, value, weight = 1) {\n    if (parameterIndex in this._notExistParameterValues) {\n      this._notExistParameterValues[parameterIndex] = weight == 1 ? value : this._notExistParameterValues[parameterIndex] * (1 - weight) + value * weight;\n      return;\n    }\n    CSM_ASSERT(0 <= parameterIndex && parameterIndex < this.getParameterCount());\n    if (this._model.parameters.maximumValues[parameterIndex] < value) {\n      value = this._model.parameters.maximumValues[parameterIndex];\n    }\n    if (this._model.parameters.minimumValues[parameterIndex] > value) {\n      value = this._model.parameters.minimumValues[parameterIndex];\n    }\n    this._parameterValues[parameterIndex] = weight == 1 ? value : this._parameterValues[parameterIndex] = this._parameterValues[parameterIndex] * (1 - weight) + value * weight;\n  }\n  setParameterValueById(parameterId, value, weight = 1) {\n    const index = this.getParameterIndex(parameterId);\n    this.setParameterValueByIndex(index, value, weight);\n  }\n  addParameterValueByIndex(parameterIndex, value, weight = 1) {\n    this.setParameterValueByIndex(parameterIndex, this.getParameterValueByIndex(parameterIndex) + value * weight);\n  }\n  addParameterValueById(parameterId, value, weight = 1) {\n    const index = this.getParameterIndex(parameterId);\n    this.addParameterValueByIndex(index, value, weight);\n  }\n  multiplyParameterValueById(parameterId, value, weight = 1) {\n    const index = this.getParameterIndex(parameterId);\n    this.multiplyParameterValueByIndex(index, value, weight);\n  }\n  multiplyParameterValueByIndex(parameterIndex, value, weight = 1) {\n    this.setParameterValueByIndex(parameterIndex, this.getParameterValueByIndex(parameterIndex) * (1 + (value - 1) * weight));\n  }\n  getDrawableIds() {\n    return this._drawableIds.slice();\n  }\n  getDrawableIndex(drawableId) {\n    const drawableCount = this._model.drawables.count;\n    for (let drawableIndex = 0; drawableIndex < drawableCount; ++drawableIndex) {\n      if (this._drawableIds[drawableIndex] == drawableId) {\n        return drawableIndex;\n      }\n    }\n    return -1;\n  }\n  getDrawableCount() {\n    return this._model.drawables.count;\n  }\n  getDrawableId(drawableIndex) {\n    return this._model.drawables.ids[drawableIndex];\n  }\n  getDrawableRenderOrders() {\n    return this._model.drawables.renderOrders;\n  }\n  getDrawableTextureIndices(drawableIndex) {\n    return this._model.drawables.textureIndices[drawableIndex];\n  }\n  getDrawableDynamicFlagVertexPositionsDidChange(drawableIndex) {\n    const dynamicFlags = this._model.drawables.dynamicFlags;\n    return Live2DCubismCore.Utils.hasVertexPositionsDidChangeBit(dynamicFlags[drawableIndex]);\n  }\n  getDrawableVertexIndexCount(drawableIndex) {\n    return this._model.drawables.indexCounts[drawableIndex];\n  }\n  getDrawableVertexCount(drawableIndex) {\n    return this._model.drawables.vertexCounts[drawableIndex];\n  }\n  getDrawableVertices(drawableIndex) {\n    return this.getDrawableVertexPositions(drawableIndex);\n  }\n  getDrawableVertexIndices(drawableIndex) {\n    return this._model.drawables.indices[drawableIndex];\n  }\n  getDrawableVertexPositions(drawableIndex) {\n    return this._model.drawables.vertexPositions[drawableIndex];\n  }\n  getDrawableVertexUvs(drawableIndex) {\n    return this._model.drawables.vertexUvs[drawableIndex];\n  }\n  getDrawableOpacity(drawableIndex) {\n    return this._model.drawables.opacities[drawableIndex];\n  }\n  getDrawableCulling(drawableIndex) {\n    const constantFlags = this._model.drawables.constantFlags;\n    return !Live2DCubismCore.Utils.hasIsDoubleSidedBit(constantFlags[drawableIndex]);\n  }\n  getDrawableBlendMode(drawableIndex) {\n    const constantFlags = this._model.drawables.constantFlags;\n    return Live2DCubismCore.Utils.hasBlendAdditiveBit(constantFlags[drawableIndex]) ? CubismBlendMode.CubismBlendMode_Additive : Live2DCubismCore.Utils.hasBlendMultiplicativeBit(constantFlags[drawableIndex]) ? CubismBlendMode.CubismBlendMode_Multiplicative : CubismBlendMode.CubismBlendMode_Normal;\n  }\n  getDrawableInvertedMaskBit(drawableIndex) {\n    const constantFlags = this._model.drawables.constantFlags;\n    return Live2DCubismCore.Utils.hasIsInvertedMaskBit(constantFlags[drawableIndex]);\n  }\n  getDrawableMasks() {\n    return this._model.drawables.masks;\n  }\n  getDrawableMaskCounts() {\n    return this._model.drawables.maskCounts;\n  }\n  isUsingMasking() {\n    for (let d = 0; d < this._model.drawables.count; ++d) {\n      if (this._model.drawables.maskCounts[d] <= 0) {\n        continue;\n      }\n      return true;\n    }\n    return false;\n  }\n  getDrawableDynamicFlagIsVisible(drawableIndex) {\n    const dynamicFlags = this._model.drawables.dynamicFlags;\n    return Live2DCubismCore.Utils.hasIsVisibleBit(dynamicFlags[drawableIndex]);\n  }\n  getDrawableDynamicFlagVisibilityDidChange(drawableIndex) {\n    const dynamicFlags = this._model.drawables.dynamicFlags;\n    return Live2DCubismCore.Utils.hasVisibilityDidChangeBit(dynamicFlags[drawableIndex]);\n  }\n  getDrawableDynamicFlagOpacityDidChange(drawableIndex) {\n    const dynamicFlags = this._model.drawables.dynamicFlags;\n    return Live2DCubismCore.Utils.hasOpacityDidChangeBit(dynamicFlags[drawableIndex]);\n  }\n  getDrawableDynamicFlagRenderOrderDidChange(drawableIndex) {\n    const dynamicFlags = this._model.drawables.dynamicFlags;\n    return Live2DCubismCore.Utils.hasRenderOrderDidChangeBit(dynamicFlags[drawableIndex]);\n  }\n  loadParameters() {\n    let parameterCount = this._model.parameters.count;\n    const savedParameterCount = this._savedParameters.length;\n    if (parameterCount > savedParameterCount) {\n      parameterCount = savedParameterCount;\n    }\n    for (let i = 0; i < parameterCount; ++i) {\n      this._parameterValues[i] = this._savedParameters[i];\n    }\n  }\n  initialize() {\n    this._parameterValues = this._model.parameters.values;\n    this._partOpacities = this._model.parts.opacities;\n    this._parameterMaximumValues = this._model.parameters.maximumValues;\n    this._parameterMinimumValues = this._model.parameters.minimumValues;\n    {\n      const parameterIds = this._model.parameters.ids;\n      const parameterCount = this._model.parameters.count;\n      for (let i = 0; i < parameterCount; ++i) {\n        this._parameterIds.push(parameterIds[i]);\n      }\n    }\n    {\n      const partIds = this._model.parts.ids;\n      const partCount = this._model.parts.count;\n      for (let i = 0; i < partCount; ++i) {\n        this._partIds.push(partIds[i]);\n      }\n    }\n    {\n      const drawableIds = this._model.drawables.ids;\n      const drawableCount = this._model.drawables.count;\n      for (let i = 0; i < drawableCount; ++i) {\n        this._drawableIds.push(drawableIds[i]);\n      }\n    }\n  }\n  constructor(model) {\n    this._model = model;\n    this._savedParameters = [];\n    this._parameterIds = [];\n    this._drawableIds = [];\n    this._partIds = [];\n    this._notExistPartId = {};\n    this._notExistParameterId = {};\n    this._notExistParameterValues = {};\n    this._notExistPartOpacities = {};\n    this.initialize();\n  }\n  release() {\n    this._model.release();\n    this._model = void 0;\n  }\n}\nclass CubismMoc {\n  static create(mocBytes) {\n    const moc = Live2DCubismCore.Moc.fromArrayBuffer(mocBytes);\n    if (moc) {\n      return new CubismMoc(moc);\n    }\n    throw new Error(\"Unknown error\");\n  }\n  createModel() {\n    let cubismModel;\n    const model = Live2DCubismCore.Model.fromMoc(this._moc);\n    if (model) {\n      cubismModel = new CubismModel(model);\n      ++this._modelCount;\n      return cubismModel;\n    }\n    throw new Error(\"Unknown error\");\n  }\n  deleteModel(model) {\n    if (model != null) {\n      --this._modelCount;\n    }\n  }\n  constructor(moc) {\n    this._moc = moc;\n    this._modelCount = 0;\n  }\n  release() {\n    this._moc._release();\n    this._moc = void 0;\n  }\n}\nclass CubismModelUserDataJson {\n  constructor(json, size) {\n    this._json = json;\n  }\n  release() {\n    this._json = void 0;\n  }\n  getUserDataCount() {\n    return this._json.Meta.UserDataCount;\n  }\n  getTotalUserDataSize() {\n    return this._json.Meta.TotalUserDataSize;\n  }\n  getUserDataTargetType(i) {\n    return this._json.UserData[i].Target;\n  }\n  getUserDataId(i) {\n    return this._json.UserData[i].Id;\n  }\n  getUserDataValue(i) {\n    return this._json.UserData[i].Value;\n  }\n}\nconst ArtMesh = \"ArtMesh\";\nclass CubismModelUserData {\n  static create(json, size) {\n    const ret = new CubismModelUserData();\n    ret.parseUserData(json, size);\n    return ret;\n  }\n  getArtMeshUserDatas() {\n    return this._artMeshUserDataNode;\n  }\n  parseUserData(data, size) {\n    let json = new CubismModelUserDataJson(data, size);\n    const typeOfArtMesh = ArtMesh;\n    const nodeCount = json.getUserDataCount();\n    for (let i = 0; i < nodeCount; i++) {\n      const addNode = {\n        targetId: json.getUserDataId(i),\n        targetType: json.getUserDataTargetType(i),\n        value: json.getUserDataValue(i)\n      };\n      this._userDataNodes.push(addNode);\n      if (addNode.targetType == typeOfArtMesh) {\n        this._artMeshUserDataNode.push(addNode);\n      }\n    }\n    json.release();\n  }\n  constructor() {\n    this._userDataNodes = [];\n    this._artMeshUserDataNode = [];\n  }\n  release() {\n    this._userDataNodes = null;\n  }\n}\nclass ACubismMotion {\n  constructor() {\n    this._fadeInSeconds = -1;\n    this._fadeOutSeconds = -1;\n    this._weight = 1;\n    this._offsetSeconds = 0;\n    this._firedEventValues = [];\n  }\n  release() {\n    this._weight = 0;\n  }\n  updateParameters(model, motionQueueEntry, userTimeSeconds) {\n    if (!motionQueueEntry.isAvailable() || motionQueueEntry.isFinished()) {\n      return;\n    }\n    if (!motionQueueEntry.isStarted()) {\n      motionQueueEntry.setIsStarted(true);\n      motionQueueEntry.setStartTime(userTimeSeconds - this._offsetSeconds);\n      motionQueueEntry.setFadeInStartTime(userTimeSeconds);\n      const duration = this.getDuration();\n      if (motionQueueEntry.getEndTime() < 0) {\n        motionQueueEntry.setEndTime(duration <= 0 ? -1 : motionQueueEntry.getStartTime() + duration);\n      }\n    }\n    let fadeWeight = this._weight;\n    const fadeIn = this._fadeInSeconds == 0 ? 1 : CubismMath.getEasingSine((userTimeSeconds - motionQueueEntry.getFadeInStartTime()) / this._fadeInSeconds);\n    const fadeOut = this._fadeOutSeconds == 0 || motionQueueEntry.getEndTime() < 0 ? 1 : CubismMath.getEasingSine((motionQueueEntry.getEndTime() - userTimeSeconds) / this._fadeOutSeconds);\n    fadeWeight = fadeWeight * fadeIn * fadeOut;\n    motionQueueEntry.setState(userTimeSeconds, fadeWeight);\n    this.doUpdateParameters(model, userTimeSeconds, fadeWeight, motionQueueEntry);\n    if (motionQueueEntry.getEndTime() > 0 && motionQueueEntry.getEndTime() < userTimeSeconds) {\n      motionQueueEntry.setIsFinished(true);\n    }\n  }\n  setFadeInTime(fadeInSeconds) {\n    this._fadeInSeconds = fadeInSeconds;\n  }\n  setFadeOutTime(fadeOutSeconds) {\n    this._fadeOutSeconds = fadeOutSeconds;\n  }\n  getFadeOutTime() {\n    return this._fadeOutSeconds;\n  }\n  getFadeInTime() {\n    return this._fadeInSeconds;\n  }\n  setWeight(weight) {\n    this._weight = weight;\n  }\n  getWeight() {\n    return this._weight;\n  }\n  getDuration() {\n    return -1;\n  }\n  getLoopDuration() {\n    return -1;\n  }\n  setOffsetTime(offsetSeconds) {\n    this._offsetSeconds = offsetSeconds;\n  }\n  getFiredEvent(beforeCheckTimeSeconds, motionTimeSeconds) {\n    return this._firedEventValues;\n  }\n  setFinishedMotionHandler(onFinishedMotionHandler) {\n    this._onFinishedMotion = onFinishedMotionHandler;\n  }\n  getFinishedMotionHandler() {\n    return this._onFinishedMotion;\n  }\n}\nconst DefaultFadeTime = 1;\nclass CubismExpressionMotion extends ACubismMotion {\n  constructor() {\n    super();\n    this._parameters = [];\n  }\n  static create(json) {\n    const expression = new CubismExpressionMotion();\n    const fadeInTime = json.FadeInTime;\n    const fadeOutTime = json.FadeOutTime;\n    expression.setFadeInTime(fadeInTime !== void 0 ? fadeInTime : DefaultFadeTime);\n    expression.setFadeOutTime(fadeOutTime !== void 0 ? fadeOutTime : DefaultFadeTime);\n    const parameters = json.Parameters || [];\n    for (let i = 0; i < parameters.length; ++i) {\n      const param = parameters[i];\n      const parameterId = param.Id;\n      const value = param.Value;\n      let blendType;\n      switch (param.Blend) {\n        case \"Multiply\":\n          blendType = ExpressionBlendType.ExpressionBlendType_Multiply;\n          break;\n        case \"Overwrite\":\n          blendType = ExpressionBlendType.ExpressionBlendType_Overwrite;\n          break;\n        case \"Add\":\n        default:\n          blendType = ExpressionBlendType.ExpressionBlendType_Add;\n          break;\n      }\n      const item = {\n        parameterId,\n        blendType,\n        value\n      };\n      expression._parameters.push(item);\n    }\n    return expression;\n  }\n  doUpdateParameters(model, userTimeSeconds, weight, motionQueueEntry) {\n    for (let i = 0; i < this._parameters.length; ++i) {\n      const parameter = this._parameters[i];\n      switch (parameter.blendType) {\n        case ExpressionBlendType.ExpressionBlendType_Add: {\n          model.addParameterValueById(parameter.parameterId, parameter.value, weight);\n          break;\n        }\n        case ExpressionBlendType.ExpressionBlendType_Multiply: {\n          model.multiplyParameterValueById(parameter.parameterId, parameter.value, weight);\n          break;\n        }\n        case ExpressionBlendType.ExpressionBlendType_Overwrite: {\n          model.setParameterValueById(parameter.parameterId, parameter.value, weight);\n          break;\n        }\n      }\n    }\n  }\n}\nvar ExpressionBlendType = /* @__PURE__ */ ((ExpressionBlendType2) => {\n  ExpressionBlendType2[ExpressionBlendType2[\"ExpressionBlendType_Add\"] = 0] = \"ExpressionBlendType_Add\";\n  ExpressionBlendType2[ExpressionBlendType2[\"ExpressionBlendType_Multiply\"] = 1] = \"ExpressionBlendType_Multiply\";\n  ExpressionBlendType2[ExpressionBlendType2[\"ExpressionBlendType_Overwrite\"] = 2] = \"ExpressionBlendType_Overwrite\";\n  return ExpressionBlendType2;\n})(ExpressionBlendType || {});\nvar CubismConfig;\n((CubismConfig2) => {\n  CubismConfig2.supportMoreMaskDivisions = true;\n  CubismConfig2.setOpacityFromMotion = false;\n})(CubismConfig || (CubismConfig = {}));\nvar CubismMotionCurveTarget = /* @__PURE__ */ ((CubismMotionCurveTarget2) => {\n  CubismMotionCurveTarget2[CubismMotionCurveTarget2[\"CubismMotionCurveTarget_Model\"] = 0] = \"CubismMotionCurveTarget_Model\";\n  CubismMotionCurveTarget2[CubismMotionCurveTarget2[\"CubismMotionCurveTarget_Parameter\"] = 1] = \"CubismMotionCurveTarget_Parameter\";\n  CubismMotionCurveTarget2[CubismMotionCurveTarget2[\"CubismMotionCurveTarget_PartOpacity\"] = 2] = \"CubismMotionCurveTarget_PartOpacity\";\n  return CubismMotionCurveTarget2;\n})(CubismMotionCurveTarget || {});\nvar CubismMotionSegmentType = /* @__PURE__ */ ((CubismMotionSegmentType2) => {\n  CubismMotionSegmentType2[CubismMotionSegmentType2[\"CubismMotionSegmentType_Linear\"] = 0] = \"CubismMotionSegmentType_Linear\";\n  CubismMotionSegmentType2[CubismMotionSegmentType2[\"CubismMotionSegmentType_Bezier\"] = 1] = \"CubismMotionSegmentType_Bezier\";\n  CubismMotionSegmentType2[CubismMotionSegmentType2[\"CubismMotionSegmentType_Stepped\"] = 2] = \"CubismMotionSegmentType_Stepped\";\n  CubismMotionSegmentType2[CubismMotionSegmentType2[\"CubismMotionSegmentType_InverseStepped\"] = 3] = \"CubismMotionSegmentType_InverseStepped\";\n  return CubismMotionSegmentType2;\n})(CubismMotionSegmentType || {});\nclass CubismMotionPoint {\n  constructor(time = 0, value = 0) {\n    this.time = time;\n    this.value = value;\n  }\n}\nclass CubismMotionSegment {\n  constructor() {\n    this.basePointIndex = 0;\n    this.segmentType = 0;\n  }\n}\nclass CubismMotionCurve {\n  constructor() {\n    this.id = \"\";\n    this.type = 0;\n    this.segmentCount = 0;\n    this.baseSegmentIndex = 0;\n    this.fadeInTime = 0;\n    this.fadeOutTime = 0;\n  }\n}\nclass CubismMotionEvent {\n  constructor() {\n    this.fireTime = 0;\n    this.value = \"\";\n  }\n}\nclass CubismMotionData {\n  constructor() {\n    this.duration = 0;\n    this.loop = false;\n    this.curveCount = 0;\n    this.eventCount = 0;\n    this.fps = 0;\n    this.curves = [];\n    this.segments = [];\n    this.points = [];\n    this.events = [];\n  }\n}\nclass CubismMotionJson {\n  constructor(json) {\n    this._json = json;\n  }\n  release() {\n    this._json = void 0;\n  }\n  getMotionDuration() {\n    return this._json.Meta.Duration;\n  }\n  isMotionLoop() {\n    return this._json.Meta.Loop || false;\n  }\n  getEvaluationOptionFlag(flagType) {\n    if (EvaluationOptionFlag.EvaluationOptionFlag_AreBeziersRistricted == flagType) {\n      return !!this._json.Meta.AreBeziersRestricted;\n    }\n    return false;\n  }\n  getMotionCurveCount() {\n    return this._json.Meta.CurveCount;\n  }\n  getMotionFps() {\n    return this._json.Meta.Fps;\n  }\n  getMotionTotalSegmentCount() {\n    return this._json.Meta.TotalSegmentCount;\n  }\n  getMotionTotalPointCount() {\n    return this._json.Meta.TotalPointCount;\n  }\n  getMotionFadeInTime() {\n    return this._json.Meta.FadeInTime;\n  }\n  getMotionFadeOutTime() {\n    return this._json.Meta.FadeOutTime;\n  }\n  getMotionCurveTarget(curveIndex) {\n    return this._json.Curves[curveIndex].Target;\n  }\n  getMotionCurveId(curveIndex) {\n    return this._json.Curves[curveIndex].Id;\n  }\n  getMotionCurveFadeInTime(curveIndex) {\n    return this._json.Curves[curveIndex].FadeInTime;\n  }\n  getMotionCurveFadeOutTime(curveIndex) {\n    return this._json.Curves[curveIndex].FadeOutTime;\n  }\n  getMotionCurveSegmentCount(curveIndex) {\n    return this._json.Curves[curveIndex].Segments.length;\n  }\n  getMotionCurveSegment(curveIndex, segmentIndex) {\n    return this._json.Curves[curveIndex].Segments[segmentIndex];\n  }\n  getEventCount() {\n    return this._json.Meta.UserDataCount || 0;\n  }\n  getTotalEventValueSize() {\n    return this._json.Meta.TotalUserDataSize;\n  }\n  getEventTime(userDataIndex) {\n    return this._json.UserData[userDataIndex].Time;\n  }\n  getEventValue(userDataIndex) {\n    return this._json.UserData[userDataIndex].Value;\n  }\n}\nvar EvaluationOptionFlag = /* @__PURE__ */ ((EvaluationOptionFlag2) => {\n  EvaluationOptionFlag2[EvaluationOptionFlag2[\"EvaluationOptionFlag_AreBeziersRistricted\"] = 0] = \"EvaluationOptionFlag_AreBeziersRistricted\";\n  return EvaluationOptionFlag2;\n})(EvaluationOptionFlag || {});\nconst EffectNameEyeBlink = \"EyeBlink\";\nconst EffectNameLipSync = \"LipSync\";\nconst TargetNameModel = \"Model\";\nconst TargetNameParameter = \"Parameter\";\nconst TargetNamePartOpacity = \"PartOpacity\";\nconst UseOldBeziersCurveMotion = false;\nfunction lerpPoints(a, b, t) {\n  const result = new CubismMotionPoint();\n  result.time = a.time + (b.time - a.time) * t;\n  result.value = a.value + (b.value - a.value) * t;\n  return result;\n}\nfunction linearEvaluate(points, time) {\n  let t = (time - points[0].time) / (points[1].time - points[0].time);\n  if (t < 0) {\n    t = 0;\n  }\n  return points[0].value + (points[1].value - points[0].value) * t;\n}\nfunction bezierEvaluate(points, time) {\n  let t = (time - points[0].time) / (points[3].time - points[0].time);\n  if (t < 0) {\n    t = 0;\n  }\n  const p01 = lerpPoints(points[0], points[1], t);\n  const p12 = lerpPoints(points[1], points[2], t);\n  const p23 = lerpPoints(points[2], points[3], t);\n  const p012 = lerpPoints(p01, p12, t);\n  const p123 = lerpPoints(p12, p23, t);\n  return lerpPoints(p012, p123, t).value;\n}\nfunction bezierEvaluateCardanoInterpretation(points, time) {\n  const x = time;\n  const x1 = points[0].time;\n  const x2 = points[3].time;\n  const cx1 = points[1].time;\n  const cx2 = points[2].time;\n  const a = x2 - 3 * cx2 + 3 * cx1 - x1;\n  const b = 3 * cx2 - 6 * cx1 + 3 * x1;\n  const c = 3 * cx1 - 3 * x1;\n  const d = x1 - x;\n  const t = CubismMath.cardanoAlgorithmForBezier(a, b, c, d);\n  const p01 = lerpPoints(points[0], points[1], t);\n  const p12 = lerpPoints(points[1], points[2], t);\n  const p23 = lerpPoints(points[2], points[3], t);\n  const p012 = lerpPoints(p01, p12, t);\n  const p123 = lerpPoints(p12, p23, t);\n  return lerpPoints(p012, p123, t).value;\n}\nfunction steppedEvaluate(points, time) {\n  return points[0].value;\n}\nfunction inverseSteppedEvaluate(points, time) {\n  return points[1].value;\n}\nfunction evaluateCurve(motionData, index, time) {\n  const curve = motionData.curves[index];\n  let target = -1;\n  const totalSegmentCount = curve.baseSegmentIndex + curve.segmentCount;\n  let pointPosition = 0;\n  for (let i = curve.baseSegmentIndex; i < totalSegmentCount; ++i) {\n    pointPosition = motionData.segments[i].basePointIndex + (motionData.segments[i].segmentType == CubismMotionSegmentType.CubismMotionSegmentType_Bezier ? 3 : 1);\n    if (motionData.points[pointPosition].time > time) {\n      target = i;\n      break;\n    }\n  }\n  if (target == -1) {\n    return motionData.points[pointPosition].value;\n  }\n  const segment = motionData.segments[target];\n  return segment.evaluate(motionData.points.slice(segment.basePointIndex), time);\n}\nclass CubismMotion extends ACubismMotion {\n  constructor() {\n    super();\n    this._eyeBlinkParameterIds = [];\n    this._lipSyncParameterIds = [];\n    this._sourceFrameRate = 30;\n    this._loopDurationSeconds = -1;\n    this._isLoop = false;\n    this._isLoopFadeIn = true;\n    this._lastWeight = 0;\n  }\n  static create(json, onFinishedMotionHandler) {\n    const ret = new CubismMotion();\n    ret.parse(json);\n    ret._sourceFrameRate = ret._motionData.fps;\n    ret._loopDurationSeconds = ret._motionData.duration;\n    ret._onFinishedMotion = onFinishedMotionHandler;\n    return ret;\n  }\n  doUpdateParameters(model, userTimeSeconds, fadeWeight, motionQueueEntry) {\n    if (this._modelCurveIdEyeBlink == null) {\n      this._modelCurveIdEyeBlink = EffectNameEyeBlink;\n    }\n    if (this._modelCurveIdLipSync == null) {\n      this._modelCurveIdLipSync = EffectNameLipSync;\n    }\n    let timeOffsetSeconds = userTimeSeconds - motionQueueEntry.getStartTime();\n    if (timeOffsetSeconds < 0) {\n      timeOffsetSeconds = 0;\n    }\n    let lipSyncValue = Number.MAX_VALUE;\n    let eyeBlinkValue = Number.MAX_VALUE;\n    const MaxTargetSize = 64;\n    let lipSyncFlags = 0;\n    let eyeBlinkFlags = 0;\n    if (this._eyeBlinkParameterIds.length > MaxTargetSize) {\n      CubismLogDebug(\"too many eye blink targets : {0}\", this._eyeBlinkParameterIds.length);\n    }\n    if (this._lipSyncParameterIds.length > MaxTargetSize) {\n      CubismLogDebug(\"too many lip sync targets : {0}\", this._lipSyncParameterIds.length);\n    }\n    const tmpFadeIn = this._fadeInSeconds <= 0 ? 1 : CubismMath.getEasingSine((userTimeSeconds - motionQueueEntry.getFadeInStartTime()) / this._fadeInSeconds);\n    const tmpFadeOut = this._fadeOutSeconds <= 0 || motionQueueEntry.getEndTime() < 0 ? 1 : CubismMath.getEasingSine((motionQueueEntry.getEndTime() - userTimeSeconds) / this._fadeOutSeconds);\n    let value;\n    let c, parameterIndex;\n    let time = timeOffsetSeconds;\n    if (this._isLoop) {\n      while (time > this._motionData.duration) {\n        time -= this._motionData.duration;\n      }\n    }\n    const curves = this._motionData.curves;\n    for (c = 0; c < this._motionData.curveCount && curves[c].type == CubismMotionCurveTarget.CubismMotionCurveTarget_Model; ++c) {\n      value = evaluateCurve(this._motionData, c, time);\n      if (curves[c].id == this._modelCurveIdEyeBlink) {\n        eyeBlinkValue = value;\n      } else if (curves[c].id == this._modelCurveIdLipSync) {\n        lipSyncValue = value;\n      }\n    }\n    for (; c < this._motionData.curveCount && curves[c].type == CubismMotionCurveTarget.CubismMotionCurveTarget_Parameter; ++c) {\n      parameterIndex = model.getParameterIndex(curves[c].id);\n      if (parameterIndex == -1) {\n        continue;\n      }\n      const sourceValue = model.getParameterValueByIndex(parameterIndex);\n      value = evaluateCurve(this._motionData, c, time);\n      if (eyeBlinkValue != Number.MAX_VALUE) {\n        for (let i = 0; i < this._eyeBlinkParameterIds.length && i < MaxTargetSize; ++i) {\n          if (this._eyeBlinkParameterIds[i] == curves[c].id) {\n            value *= eyeBlinkValue;\n            eyeBlinkFlags |= 1 << i;\n            break;\n          }\n        }\n      }\n      if (lipSyncValue != Number.MAX_VALUE) {\n        for (let i = 0; i < this._lipSyncParameterIds.length && i < MaxTargetSize; ++i) {\n          if (this._lipSyncParameterIds[i] == curves[c].id) {\n            value += lipSyncValue;\n            lipSyncFlags |= 1 << i;\n            break;\n          }\n        }\n      }\n      let v;\n      if (curves[c].fadeInTime < 0 && curves[c].fadeOutTime < 0) {\n        v = sourceValue + (value - sourceValue) * fadeWeight;\n      } else {\n        let fin;\n        let fout;\n        if (curves[c].fadeInTime < 0) {\n          fin = tmpFadeIn;\n        } else {\n          fin = curves[c].fadeInTime == 0 ? 1 : CubismMath.getEasingSine((userTimeSeconds - motionQueueEntry.getFadeInStartTime()) / curves[c].fadeInTime);\n        }\n        if (curves[c].fadeOutTime < 0) {\n          fout = tmpFadeOut;\n        } else {\n          fout = curves[c].fadeOutTime == 0 || motionQueueEntry.getEndTime() < 0 ? 1 : CubismMath.getEasingSine((motionQueueEntry.getEndTime() - userTimeSeconds) / curves[c].fadeOutTime);\n        }\n        const paramWeight = this._weight * fin * fout;\n        v = sourceValue + (value - sourceValue) * paramWeight;\n      }\n      model.setParameterValueByIndex(parameterIndex, v, 1);\n    }\n    {\n      if (eyeBlinkValue != Number.MAX_VALUE) {\n        for (let i = 0; i < this._eyeBlinkParameterIds.length && i < MaxTargetSize; ++i) {\n          const sourceValue = model.getParameterValueById(this._eyeBlinkParameterIds[i]);\n          if (eyeBlinkFlags >> i & 1) {\n            continue;\n          }\n          const v = sourceValue + (eyeBlinkValue - sourceValue) * fadeWeight;\n          model.setParameterValueById(this._eyeBlinkParameterIds[i], v);\n        }\n      }\n      if (lipSyncValue != Number.MAX_VALUE) {\n        for (let i = 0; i < this._lipSyncParameterIds.length && i < MaxTargetSize; ++i) {\n          const sourceValue = model.getParameterValueById(this._lipSyncParameterIds[i]);\n          if (lipSyncFlags >> i & 1) {\n            continue;\n          }\n          const v = sourceValue + (lipSyncValue - sourceValue) * fadeWeight;\n          model.setParameterValueById(this._lipSyncParameterIds[i], v);\n        }\n      }\n    }\n    for (; c < this._motionData.curveCount && curves[c].type == CubismMotionCurveTarget.CubismMotionCurveTarget_PartOpacity; ++c) {\n      value = evaluateCurve(this._motionData, c, time);\n      if (CubismConfig.setOpacityFromMotion) {\n        model.setPartOpacityById(curves[c].id, value);\n      } else {\n        parameterIndex = model.getParameterIndex(curves[c].id);\n        if (parameterIndex == -1) {\n          continue;\n        }\n        model.setParameterValueByIndex(parameterIndex, value);\n      }\n    }\n    if (timeOffsetSeconds >= this._motionData.duration) {\n      if (this._isLoop) {\n        motionQueueEntry.setStartTime(userTimeSeconds);\n        if (this._isLoopFadeIn) {\n          motionQueueEntry.setFadeInStartTime(userTimeSeconds);\n        }\n      } else {\n        if (this._onFinishedMotion) {\n          this._onFinishedMotion(this);\n        }\n        motionQueueEntry.setIsFinished(true);\n      }\n    }\n    this._lastWeight = fadeWeight;\n  }\n  setIsLoop(loop) {\n    this._isLoop = loop;\n  }\n  isLoop() {\n    return this._isLoop;\n  }\n  setIsLoopFadeIn(loopFadeIn) {\n    this._isLoopFadeIn = loopFadeIn;\n  }\n  isLoopFadeIn() {\n    return this._isLoopFadeIn;\n  }\n  getDuration() {\n    return this._isLoop ? -1 : this._loopDurationSeconds;\n  }\n  getLoopDuration() {\n    return this._loopDurationSeconds;\n  }\n  setParameterFadeInTime(parameterId, value) {\n    const curves = this._motionData.curves;\n    for (let i = 0; i < this._motionData.curveCount; ++i) {\n      if (parameterId == curves[i].id) {\n        curves[i].fadeInTime = value;\n        return;\n      }\n    }\n  }\n  setParameterFadeOutTime(parameterId, value) {\n    const curves = this._motionData.curves;\n    for (let i = 0; i < this._motionData.curveCount; ++i) {\n      if (parameterId == curves[i].id) {\n        curves[i].fadeOutTime = value;\n        return;\n      }\n    }\n  }\n  getParameterFadeInTime(parameterId) {\n    const curves = this._motionData.curves;\n    for (let i = 0; i < this._motionData.curveCount; ++i) {\n      if (parameterId == curves[i].id) {\n        return curves[i].fadeInTime;\n      }\n    }\n    return -1;\n  }\n  getParameterFadeOutTime(parameterId) {\n    const curves = this._motionData.curves;\n    for (let i = 0; i < this._motionData.curveCount; ++i) {\n      if (parameterId == curves[i].id) {\n        return curves[i].fadeOutTime;\n      }\n    }\n    return -1;\n  }\n  setEffectIds(eyeBlinkParameterIds, lipSyncParameterIds) {\n    this._eyeBlinkParameterIds = eyeBlinkParameterIds;\n    this._lipSyncParameterIds = lipSyncParameterIds;\n  }\n  release() {\n    this._motionData = void 0;\n  }\n  parse(motionJson) {\n    this._motionData = new CubismMotionData();\n    let json = new CubismMotionJson(motionJson);\n    this._motionData.duration = json.getMotionDuration();\n    this._motionData.loop = json.isMotionLoop();\n    this._motionData.curveCount = json.getMotionCurveCount();\n    this._motionData.fps = json.getMotionFps();\n    this._motionData.eventCount = json.getEventCount();\n    const areBeziersRestructed = json.getEvaluationOptionFlag(EvaluationOptionFlag.EvaluationOptionFlag_AreBeziersRistricted);\n    const fadeInSeconds = json.getMotionFadeInTime();\n    const fadeOutSeconds = json.getMotionFadeOutTime();\n    if (fadeInSeconds !== void 0) {\n      this._fadeInSeconds = fadeInSeconds < 0 ? 1 : fadeInSeconds;\n    } else {\n      this._fadeInSeconds = 1;\n    }\n    if (fadeOutSeconds !== void 0) {\n      this._fadeOutSeconds = fadeOutSeconds < 0 ? 1 : fadeOutSeconds;\n    } else {\n      this._fadeOutSeconds = 1;\n    }\n    this._motionData.curves = Array.from({ length: this._motionData.curveCount }).map(() => new CubismMotionCurve());\n    this._motionData.segments = Array.from({ length: json.getMotionTotalSegmentCount() }).map(() => new CubismMotionSegment());\n    this._motionData.events = Array.from({ length: this._motionData.eventCount }).map(() => new CubismMotionEvent());\n    this._motionData.points = [];\n    let totalPointCount = 0;\n    let totalSegmentCount = 0;\n    for (let curveCount = 0; curveCount < this._motionData.curveCount; ++curveCount) {\n      const curve = this._motionData.curves[curveCount];\n      switch (json.getMotionCurveTarget(curveCount)) {\n        case TargetNameModel:\n          curve.type = CubismMotionCurveTarget.CubismMotionCurveTarget_Model;\n          break;\n        case TargetNameParameter:\n          curve.type = CubismMotionCurveTarget.CubismMotionCurveTarget_Parameter;\n          break;\n        case TargetNamePartOpacity:\n          curve.type = CubismMotionCurveTarget.CubismMotionCurveTarget_PartOpacity;\n          break;\n        default:\n          CubismLogWarning('Warning : Unable to get segment type from Curve! The number of \"CurveCount\" may be incorrect!');\n      }\n      curve.id = json.getMotionCurveId(curveCount);\n      curve.baseSegmentIndex = totalSegmentCount;\n      const fadeInTime = json.getMotionCurveFadeInTime(curveCount);\n      const fadeOutTime = json.getMotionCurveFadeOutTime(curveCount);\n      curve.fadeInTime = fadeInTime !== void 0 ? fadeInTime : -1;\n      curve.fadeOutTime = fadeOutTime !== void 0 ? fadeOutTime : -1;\n      for (let segmentPosition = 0; segmentPosition < json.getMotionCurveSegmentCount(curveCount); ) {\n        if (segmentPosition == 0) {\n          this._motionData.segments[totalSegmentCount].basePointIndex = totalPointCount;\n          this._motionData.points[totalPointCount] = new CubismMotionPoint(json.getMotionCurveSegment(curveCount, segmentPosition), json.getMotionCurveSegment(curveCount, segmentPosition + 1));\n          totalPointCount += 1;\n          segmentPosition += 2;\n        } else {\n          this._motionData.segments[totalSegmentCount].basePointIndex = totalPointCount - 1;\n        }\n        const segment = json.getMotionCurveSegment(curveCount, segmentPosition);\n        switch (segment) {\n          case CubismMotionSegmentType.CubismMotionSegmentType_Linear: {\n            this._motionData.segments[totalSegmentCount].segmentType = CubismMotionSegmentType.CubismMotionSegmentType_Linear;\n            this._motionData.segments[totalSegmentCount].evaluate = linearEvaluate;\n            this._motionData.points[totalPointCount] = new CubismMotionPoint(json.getMotionCurveSegment(curveCount, segmentPosition + 1), json.getMotionCurveSegment(curveCount, segmentPosition + 2));\n            totalPointCount += 1;\n            segmentPosition += 3;\n            break;\n          }\n          case CubismMotionSegmentType.CubismMotionSegmentType_Bezier: {\n            this._motionData.segments[totalSegmentCount].segmentType = CubismMotionSegmentType.CubismMotionSegmentType_Bezier;\n            if (areBeziersRestructed || UseOldBeziersCurveMotion) {\n              this._motionData.segments[totalSegmentCount].evaluate = bezierEvaluate;\n            } else {\n              this._motionData.segments[totalSegmentCount].evaluate = bezierEvaluateCardanoInterpretation;\n            }\n            this._motionData.points[totalPointCount] = new CubismMotionPoint(json.getMotionCurveSegment(curveCount, segmentPosition + 1), json.getMotionCurveSegment(curveCount, segmentPosition + 2));\n            this._motionData.points[totalPointCount + 1] = new CubismMotionPoint(json.getMotionCurveSegment(curveCount, segmentPosition + 3), json.getMotionCurveSegment(curveCount, segmentPosition + 4));\n            this._motionData.points[totalPointCount + 2] = new CubismMotionPoint(json.getMotionCurveSegment(curveCount, segmentPosition + 5), json.getMotionCurveSegment(curveCount, segmentPosition + 6));\n            totalPointCount += 3;\n            segmentPosition += 7;\n            break;\n          }\n          case CubismMotionSegmentType.CubismMotionSegmentType_Stepped: {\n            this._motionData.segments[totalSegmentCount].segmentType = CubismMotionSegmentType.CubismMotionSegmentType_Stepped;\n            this._motionData.segments[totalSegmentCount].evaluate = steppedEvaluate;\n            this._motionData.points[totalPointCount] = new CubismMotionPoint(json.getMotionCurveSegment(curveCount, segmentPosition + 1), json.getMotionCurveSegment(curveCount, segmentPosition + 2));\n            totalPointCount += 1;\n            segmentPosition += 3;\n            break;\n          }\n          case CubismMotionSegmentType.CubismMotionSegmentType_InverseStepped: {\n            this._motionData.segments[totalSegmentCount].segmentType = CubismMotionSegmentType.CubismMotionSegmentType_InverseStepped;\n            this._motionData.segments[totalSegmentCount].evaluate = inverseSteppedEvaluate;\n            this._motionData.points[totalPointCount] = new CubismMotionPoint(json.getMotionCurveSegment(curveCount, segmentPosition + 1), json.getMotionCurveSegment(curveCount, segmentPosition + 2));\n            totalPointCount += 1;\n            segmentPosition += 3;\n            break;\n          }\n        }\n        ++curve.segmentCount;\n        ++totalSegmentCount;\n      }\n      this._motionData.curves.push(curve);\n    }\n    for (let userdatacount = 0; userdatacount < json.getEventCount(); ++userdatacount) {\n      this._motionData.events[userdatacount].fireTime = json.getEventTime(userdatacount);\n      this._motionData.events[userdatacount].value = json.getEventValue(userdatacount);\n    }\n    json.release();\n  }\n  getFiredEvent(beforeCheckTimeSeconds, motionTimeSeconds) {\n    this._firedEventValues.length = 0;\n    for (let u = 0; u < this._motionData.eventCount; ++u) {\n      if (this._motionData.events[u].fireTime > beforeCheckTimeSeconds && this._motionData.events[u].fireTime <= motionTimeSeconds) {\n        this._firedEventValues.push(this._motionData.events[u].value);\n      }\n    }\n    return this._firedEventValues;\n  }\n}\nclass CubismMotionQueueEntry {\n  constructor() {\n    this._autoDelete = false;\n    this._available = true;\n    this._finished = false;\n    this._started = false;\n    this._startTimeSeconds = -1;\n    this._fadeInStartTimeSeconds = 0;\n    this._endTimeSeconds = -1;\n    this._stateTimeSeconds = 0;\n    this._stateWeight = 0;\n    this._lastEventCheckSeconds = 0;\n    this._motionQueueEntryHandle = this;\n    this._fadeOutSeconds = 0;\n    this._isTriggeredFadeOut = false;\n  }\n  release() {\n    if (this._autoDelete && this._motion) {\n      this._motion.release();\n    }\n  }\n  setFadeOut(fadeOutSeconds) {\n    this._fadeOutSeconds = fadeOutSeconds;\n    this._isTriggeredFadeOut = true;\n  }\n  startFadeOut(fadeOutSeconds, userTimeSeconds) {\n    const newEndTimeSeconds = userTimeSeconds + fadeOutSeconds;\n    this._isTriggeredFadeOut = true;\n    if (this._endTimeSeconds < 0 || newEndTimeSeconds < this._endTimeSeconds) {\n      this._endTimeSeconds = newEndTimeSeconds;\n    }\n  }\n  isFinished() {\n    return this._finished;\n  }\n  isStarted() {\n    return this._started;\n  }\n  getStartTime() {\n    return this._startTimeSeconds;\n  }\n  getFadeInStartTime() {\n    return this._fadeInStartTimeSeconds;\n  }\n  getEndTime() {\n    return this._endTimeSeconds;\n  }\n  setStartTime(startTime) {\n    this._startTimeSeconds = startTime;\n  }\n  setFadeInStartTime(startTime) {\n    this._fadeInStartTimeSeconds = startTime;\n  }\n  setEndTime(endTime) {\n    this._endTimeSeconds = endTime;\n  }\n  setIsFinished(f) {\n    this._finished = f;\n  }\n  setIsStarted(f) {\n    this._started = f;\n  }\n  isAvailable() {\n    return this._available;\n  }\n  setIsAvailable(v) {\n    this._available = v;\n  }\n  setState(timeSeconds, weight) {\n    this._stateTimeSeconds = timeSeconds;\n    this._stateWeight = weight;\n  }\n  getStateTime() {\n    return this._stateTimeSeconds;\n  }\n  getStateWeight() {\n    return this._stateWeight;\n  }\n  getLastCheckEventSeconds() {\n    return this._lastEventCheckSeconds;\n  }\n  setLastCheckEventSeconds(checkSeconds) {\n    this._lastEventCheckSeconds = checkSeconds;\n  }\n  isTriggeredFadeOut() {\n    return this._isTriggeredFadeOut;\n  }\n  getFadeOutSeconds() {\n    return this._fadeOutSeconds;\n  }\n}\nclass CubismMotionQueueManager {\n  constructor() {\n    this._userTimeSeconds = 0;\n    this._eventCustomData = null;\n    this._motions = [];\n  }\n  release() {\n    for (let i = 0; i < this._motions.length; ++i) {\n      if (this._motions[i]) {\n        this._motions[i].release();\n      }\n    }\n    this._motions = void 0;\n  }\n  startMotion(motion, autoDelete, userTimeSeconds) {\n    if (motion == null) {\n      return InvalidMotionQueueEntryHandleValue;\n    }\n    let motionQueueEntry;\n    for (let i = 0; i < this._motions.length; ++i) {\n      motionQueueEntry = this._motions[i];\n      if (motionQueueEntry == null) {\n        continue;\n      }\n      motionQueueEntry.setFadeOut(motionQueueEntry._motion.getFadeOutTime());\n    }\n    motionQueueEntry = new CubismMotionQueueEntry();\n    motionQueueEntry._autoDelete = autoDelete;\n    motionQueueEntry._motion = motion;\n    this._motions.push(motionQueueEntry);\n    return motionQueueEntry._motionQueueEntryHandle;\n  }\n  isFinished() {\n    let i = 0;\n    while (i < this._motions.length) {\n      const motionQueueEntry = this._motions[i];\n      if (motionQueueEntry == null) {\n        this._motions.splice(i, 1);\n        continue;\n      }\n      const motion = motionQueueEntry._motion;\n      if (motion == null) {\n        motionQueueEntry.release();\n        this._motions.splice(i, 1);\n        continue;\n      }\n      if (!motionQueueEntry.isFinished()) {\n        return false;\n      }\n      i++;\n    }\n    return true;\n  }\n  isFinishedByHandle(motionQueueEntryNumber) {\n    for (let i = 0; i < this._motions.length; i++) {\n      const motionQueueEntry = this._motions[i];\n      if (motionQueueEntry == null) {\n        continue;\n      }\n      if (motionQueueEntry._motionQueueEntryHandle == motionQueueEntryNumber && !motionQueueEntry.isFinished()) {\n        return false;\n      }\n    }\n    return true;\n  }\n  stopAllMotions() {\n    for (let i = 0; i < this._motions.length; i++) {\n      const motionQueueEntry = this._motions[i];\n      if (motionQueueEntry != null) {\n        motionQueueEntry.release();\n      }\n    }\n    this._motions = [];\n  }\n  getCubismMotionQueueEntry(motionQueueEntryNumber) {\n    return this._motions.find((entry) => entry != null && entry._motionQueueEntryHandle == motionQueueEntryNumber);\n  }\n  setEventCallback(callback, customData = null) {\n    this._eventCallBack = callback;\n    this._eventCustomData = customData;\n  }\n  doUpdateMotion(model, userTimeSeconds) {\n    let updated = false;\n    let i = 0;\n    while (i < this._motions.length) {\n      const motionQueueEntry = this._motions[i];\n      if (motionQueueEntry == null) {\n        this._motions.splice(i, 1);\n        continue;\n      }\n      const motion = motionQueueEntry._motion;\n      if (motion == null) {\n        motionQueueEntry.release();\n        this._motions.splice(i, 1);\n        continue;\n      }\n      motion.updateParameters(model, motionQueueEntry, userTimeSeconds);\n      updated = true;\n      const firedList = motion.getFiredEvent(motionQueueEntry.getLastCheckEventSeconds() - motionQueueEntry.getStartTime(), userTimeSeconds - motionQueueEntry.getStartTime());\n      for (let i2 = 0; i2 < firedList.length; ++i2) {\n        this._eventCallBack(this, firedList[i2], this._eventCustomData);\n      }\n      motionQueueEntry.setLastCheckEventSeconds(userTimeSeconds);\n      if (motionQueueEntry.isFinished()) {\n        motionQueueEntry.release();\n        this._motions.splice(i, 1);\n      } else {\n        if (motionQueueEntry.isTriggeredFadeOut()) {\n          motionQueueEntry.startFadeOut(motionQueueEntry.getFadeOutSeconds(), userTimeSeconds);\n        }\n        i++;\n      }\n    }\n    return updated;\n  }\n}\nconst InvalidMotionQueueEntryHandleValue = -1;\nclass CubismMotionManager extends CubismMotionQueueManager {\n  constructor() {\n    super();\n    this._currentPriority = 0;\n    this._reservePriority = 0;\n  }\n  getCurrentPriority() {\n    return this._currentPriority;\n  }\n  getReservePriority() {\n    return this._reservePriority;\n  }\n  setReservePriority(val) {\n    this._reservePriority = val;\n  }\n  startMotionPriority(motion, autoDelete, priority) {\n    if (priority == this._reservePriority) {\n      this._reservePriority = 0;\n    }\n    this._currentPriority = priority;\n    return super.startMotion(motion, autoDelete, this._userTimeSeconds);\n  }\n  updateMotion(model, deltaTimeSeconds) {\n    this._userTimeSeconds += deltaTimeSeconds;\n    const updated = super.doUpdateMotion(model, this._userTimeSeconds);\n    if (this.isFinished()) {\n      this._currentPriority = 0;\n    }\n    return updated;\n  }\n  reserveMotion(priority) {\n    if (priority <= this._reservePriority || priority <= this._currentPriority) {\n      return false;\n    }\n    this._reservePriority = priority;\n    return true;\n  }\n}\nvar CubismPhysicsTargetType = /* @__PURE__ */ ((CubismPhysicsTargetType2) => {\n  CubismPhysicsTargetType2[CubismPhysicsTargetType2[\"CubismPhysicsTargetType_Parameter\"] = 0] = \"CubismPhysicsTargetType_Parameter\";\n  return CubismPhysicsTargetType2;\n})(CubismPhysicsTargetType || {});\nvar CubismPhysicsSource = /* @__PURE__ */ ((CubismPhysicsSource2) => {\n  CubismPhysicsSource2[CubismPhysicsSource2[\"CubismPhysicsSource_X\"] = 0] = \"CubismPhysicsSource_X\";\n  CubismPhysicsSource2[CubismPhysicsSource2[\"CubismPhysicsSource_Y\"] = 1] = \"CubismPhysicsSource_Y\";\n  CubismPhysicsSource2[CubismPhysicsSource2[\"CubismPhysicsSource_Angle\"] = 2] = \"CubismPhysicsSource_Angle\";\n  return CubismPhysicsSource2;\n})(CubismPhysicsSource || {});\nclass PhysicsJsonEffectiveForces {\n  constructor() {\n    this.gravity = new CubismVector2(0, 0);\n    this.wind = new CubismVector2(0, 0);\n  }\n}\nclass CubismPhysicsParticle {\n  constructor() {\n    this.initialPosition = new CubismVector2(0, 0);\n    this.position = new CubismVector2(0, 0);\n    this.lastPosition = new CubismVector2(0, 0);\n    this.lastGravity = new CubismVector2(0, 0);\n    this.force = new CubismVector2(0, 0);\n    this.velocity = new CubismVector2(0, 0);\n  }\n}\nclass CubismPhysicsSubRig {\n  constructor() {\n    this.normalizationPosition = {};\n    this.normalizationAngle = {};\n  }\n}\nclass CubismPhysicsInput {\n  constructor() {\n    this.source = {};\n  }\n}\nclass CubismPhysicsOutput {\n  constructor() {\n    this.destination = {};\n    this.translationScale = new CubismVector2(0, 0);\n  }\n}\nclass CubismPhysicsRig {\n  constructor() {\n    this.settings = [];\n    this.inputs = [];\n    this.outputs = [];\n    this.particles = [];\n    this.gravity = new CubismVector2(0, 0);\n    this.wind = new CubismVector2(0, 0);\n  }\n}\nclass CubismPhysicsJson {\n  constructor(json) {\n    this._json = json;\n  }\n  release() {\n    this._json = void 0;\n  }\n  getGravity() {\n    const ret = new CubismVector2(0, 0);\n    ret.x = this._json.Meta.EffectiveForces.Gravity.X;\n    ret.y = this._json.Meta.EffectiveForces.Gravity.Y;\n    return ret;\n  }\n  getWind() {\n    const ret = new CubismVector2(0, 0);\n    ret.x = this._json.Meta.EffectiveForces.Wind.X;\n    ret.y = this._json.Meta.EffectiveForces.Wind.Y;\n    return ret;\n  }\n  getSubRigCount() {\n    return this._json.Meta.PhysicsSettingCount;\n  }\n  getTotalInputCount() {\n    return this._json.Meta.TotalInputCount;\n  }\n  getTotalOutputCount() {\n    return this._json.Meta.TotalOutputCount;\n  }\n  getVertexCount() {\n    return this._json.Meta.VertexCount;\n  }\n  getNormalizationPositionMinimumValue(physicsSettingIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Normalization.Position.Minimum;\n  }\n  getNormalizationPositionMaximumValue(physicsSettingIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Normalization.Position.Maximum;\n  }\n  getNormalizationPositionDefaultValue(physicsSettingIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Normalization.Position.Default;\n  }\n  getNormalizationAngleMinimumValue(physicsSettingIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Normalization.Angle.Minimum;\n  }\n  getNormalizationAngleMaximumValue(physicsSettingIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Normalization.Angle.Maximum;\n  }\n  getNormalizationAngleDefaultValue(physicsSettingIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Normalization.Angle.Default;\n  }\n  getInputCount(physicsSettingIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Input.length;\n  }\n  getInputWeight(physicsSettingIndex, inputIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Input[inputIndex].Weight;\n  }\n  getInputReflect(physicsSettingIndex, inputIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Input[inputIndex].Reflect;\n  }\n  getInputType(physicsSettingIndex, inputIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Input[inputIndex].Type;\n  }\n  getInputSourceId(physicsSettingIndex, inputIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Input[inputIndex].Source.Id;\n  }\n  getOutputCount(physicsSettingIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Output.length;\n  }\n  getOutputVertexIndex(physicsSettingIndex, outputIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Output[outputIndex].VertexIndex;\n  }\n  getOutputAngleScale(physicsSettingIndex, outputIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Output[outputIndex].Scale;\n  }\n  getOutputWeight(physicsSettingIndex, outputIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Output[outputIndex].Weight;\n  }\n  getOutputDestinationId(physicsSettingIndex, outputIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Output[outputIndex].Destination.Id;\n  }\n  getOutputType(physicsSettingIndex, outputIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Output[outputIndex].Type;\n  }\n  getOutputReflect(physicsSettingIndex, outputIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Output[outputIndex].Reflect;\n  }\n  getParticleCount(physicsSettingIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Vertices.length;\n  }\n  getParticleMobility(physicsSettingIndex, vertexIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Vertices[vertexIndex].Mobility;\n  }\n  getParticleDelay(physicsSettingIndex, vertexIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Vertices[vertexIndex].Delay;\n  }\n  getParticleAcceleration(physicsSettingIndex, vertexIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Vertices[vertexIndex].Acceleration;\n  }\n  getParticleRadius(physicsSettingIndex, vertexIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Vertices[vertexIndex].Radius;\n  }\n  getParticlePosition(physicsSettingIndex, vertexIndex) {\n    const ret = new CubismVector2(0, 0);\n    ret.x = this._json.PhysicsSettings[physicsSettingIndex].Vertices[vertexIndex].Position.X;\n    ret.y = this._json.PhysicsSettings[physicsSettingIndex].Vertices[vertexIndex].Position.Y;\n    return ret;\n  }\n}\nconst PhysicsTypeTagX = \"X\";\nconst PhysicsTypeTagY = \"Y\";\nconst PhysicsTypeTagAngle = \"Angle\";\nconst AirResistance = 5;\nconst MaximumWeight = 100;\nconst MovementThreshold = 1e-3;\nclass CubismPhysics {\n  static create(json) {\n    const ret = new CubismPhysics();\n    ret.parse(json);\n    ret._physicsRig.gravity.y = 0;\n    return ret;\n  }\n  evaluate(model, deltaTimeSeconds) {\n    let totalAngle;\n    let weight;\n    let radAngle;\n    let outputValue;\n    const totalTranslation = new CubismVector2();\n    let currentSetting;\n    let currentInput;\n    let currentOutput;\n    let currentParticles;\n    let parameterValue;\n    let parameterMaximumValue;\n    let parameterMinimumValue;\n    let parameterDefaultValue;\n    parameterValue = model.getModel().parameters.values;\n    parameterMaximumValue = model.getModel().parameters.maximumValues;\n    parameterMinimumValue = model.getModel().parameters.minimumValues;\n    parameterDefaultValue = model.getModel().parameters.defaultValues;\n    for (let settingIndex = 0; settingIndex < this._physicsRig.subRigCount; ++settingIndex) {\n      totalAngle = { angle: 0 };\n      totalTranslation.x = 0;\n      totalTranslation.y = 0;\n      currentSetting = this._physicsRig.settings[settingIndex];\n      currentInput = this._physicsRig.inputs.slice(currentSetting.baseInputIndex);\n      currentOutput = this._physicsRig.outputs.slice(currentSetting.baseOutputIndex);\n      currentParticles = this._physicsRig.particles.slice(currentSetting.baseParticleIndex);\n      for (let i = 0; i < currentSetting.inputCount; ++i) {\n        weight = currentInput[i].weight / MaximumWeight;\n        if (currentInput[i].sourceParameterIndex == -1) {\n          currentInput[i].sourceParameterIndex = model.getParameterIndex(currentInput[i].source.id);\n        }\n        currentInput[i].getNormalizedParameterValue(totalTranslation, totalAngle, parameterValue[currentInput[i].sourceParameterIndex], parameterMinimumValue[currentInput[i].sourceParameterIndex], parameterMaximumValue[currentInput[i].sourceParameterIndex], parameterDefaultValue[currentInput[i].sourceParameterIndex], currentSetting.normalizationPosition, currentSetting.normalizationAngle, currentInput[i].reflect, weight);\n      }\n      radAngle = CubismMath.degreesToRadian(-totalAngle.angle);\n      totalTranslation.x = totalTranslation.x * CubismMath.cos(radAngle) - totalTranslation.y * CubismMath.sin(radAngle);\n      totalTranslation.y = totalTranslation.x * CubismMath.sin(radAngle) + totalTranslation.y * CubismMath.cos(radAngle);\n      updateParticles(currentParticles, currentSetting.particleCount, totalTranslation, totalAngle.angle, this._options.wind, MovementThreshold * currentSetting.normalizationPosition.maximum, deltaTimeSeconds, AirResistance);\n      for (let i = 0; i < currentSetting.outputCount; ++i) {\n        const particleIndex = currentOutput[i].vertexIndex;\n        if (particleIndex < 1 || particleIndex >= currentSetting.particleCount) {\n          break;\n        }\n        if (currentOutput[i].destinationParameterIndex == -1) {\n          currentOutput[i].destinationParameterIndex = model.getParameterIndex(currentOutput[i].destination.id);\n        }\n        const translation = new CubismVector2();\n        translation.x = currentParticles[particleIndex].position.x - currentParticles[particleIndex - 1].position.x;\n        translation.y = currentParticles[particleIndex].position.y - currentParticles[particleIndex - 1].position.y;\n        outputValue = currentOutput[i].getValue(translation, currentParticles, particleIndex, currentOutput[i].reflect, this._options.gravity);\n        const destinationParameterIndex = currentOutput[i].destinationParameterIndex;\n        const outParameterValue = !Float32Array.prototype.slice && \"subarray\" in Float32Array.prototype ? JSON.parse(JSON.stringify(parameterValue.subarray(destinationParameterIndex))) : parameterValue.slice(destinationParameterIndex);\n        updateOutputParameterValue(outParameterValue, parameterMinimumValue[destinationParameterIndex], parameterMaximumValue[destinationParameterIndex], outputValue, currentOutput[i]);\n        for (let offset = destinationParameterIndex, outParamIndex = 0; offset < parameterValue.length; offset++, outParamIndex++) {\n          parameterValue[offset] = outParameterValue[outParamIndex];\n        }\n      }\n    }\n  }\n  setOptions(options) {\n    this._options = options;\n  }\n  getOption() {\n    return this._options;\n  }\n  constructor() {\n    this._options = new Options();\n    this._options.gravity.y = -1;\n    this._options.gravity.x = 0;\n    this._options.wind.x = 0;\n    this._options.wind.y = 0;\n  }\n  release() {\n    this._physicsRig = void 0;\n  }\n  parse(physicsJson) {\n    this._physicsRig = new CubismPhysicsRig();\n    let json = new CubismPhysicsJson(physicsJson);\n    this._physicsRig.gravity = json.getGravity();\n    this._physicsRig.wind = json.getWind();\n    this._physicsRig.subRigCount = json.getSubRigCount();\n    let inputIndex = 0, outputIndex = 0, particleIndex = 0;\n    for (let i = 0; i < this._physicsRig.subRigCount; ++i) {\n      const setting = new CubismPhysicsSubRig();\n      setting.normalizationPosition.minimum = json.getNormalizationPositionMinimumValue(i);\n      setting.normalizationPosition.maximum = json.getNormalizationPositionMaximumValue(i);\n      setting.normalizationPosition.defalut = json.getNormalizationPositionDefaultValue(i);\n      setting.normalizationAngle.minimum = json.getNormalizationAngleMinimumValue(i);\n      setting.normalizationAngle.maximum = json.getNormalizationAngleMaximumValue(i);\n      setting.normalizationAngle.defalut = json.getNormalizationAngleDefaultValue(i);\n      setting.inputCount = json.getInputCount(i);\n      setting.baseInputIndex = inputIndex;\n      inputIndex += setting.inputCount;\n      for (let j = 0; j < setting.inputCount; ++j) {\n        const input = new CubismPhysicsInput();\n        input.sourceParameterIndex = -1;\n        input.weight = json.getInputWeight(i, j);\n        input.reflect = json.getInputReflect(i, j);\n        switch (json.getInputType(i, j)) {\n          case PhysicsTypeTagX:\n            input.type = CubismPhysicsSource.CubismPhysicsSource_X;\n            input.getNormalizedParameterValue = getInputTranslationXFromNormalizedParameterValue;\n            break;\n          case PhysicsTypeTagY:\n            input.type = CubismPhysicsSource.CubismPhysicsSource_Y;\n            input.getNormalizedParameterValue = getInputTranslationYFromNormalizedParamterValue;\n            break;\n          case PhysicsTypeTagAngle:\n            input.type = CubismPhysicsSource.CubismPhysicsSource_Angle;\n            input.getNormalizedParameterValue = getInputAngleFromNormalizedParameterValue;\n            break;\n        }\n        input.source.targetType = CubismPhysicsTargetType.CubismPhysicsTargetType_Parameter;\n        input.source.id = json.getInputSourceId(i, j);\n        this._physicsRig.inputs.push(input);\n      }\n      setting.outputCount = json.getOutputCount(i);\n      setting.baseOutputIndex = outputIndex;\n      outputIndex += setting.outputCount;\n      for (let j = 0; j < setting.outputCount; ++j) {\n        const output = new CubismPhysicsOutput();\n        output.destinationParameterIndex = -1;\n        output.vertexIndex = json.getOutputVertexIndex(i, j);\n        output.angleScale = json.getOutputAngleScale(i, j);\n        output.weight = json.getOutputWeight(i, j);\n        output.destination.targetType = CubismPhysicsTargetType.CubismPhysicsTargetType_Parameter;\n        output.destination.id = json.getOutputDestinationId(i, j);\n        switch (json.getOutputType(i, j)) {\n          case PhysicsTypeTagX:\n            output.type = CubismPhysicsSource.CubismPhysicsSource_X;\n            output.getValue = getOutputTranslationX;\n            output.getScale = getOutputScaleTranslationX;\n            break;\n          case PhysicsTypeTagY:\n            output.type = CubismPhysicsSource.CubismPhysicsSource_Y;\n            output.getValue = getOutputTranslationY;\n            output.getScale = getOutputScaleTranslationY;\n            break;\n          case PhysicsTypeTagAngle:\n            output.type = CubismPhysicsSource.CubismPhysicsSource_Angle;\n            output.getValue = getOutputAngle;\n            output.getScale = getOutputScaleAngle;\n            break;\n        }\n        output.reflect = json.getOutputReflect(i, j);\n        this._physicsRig.outputs.push(output);\n      }\n      setting.particleCount = json.getParticleCount(i);\n      setting.baseParticleIndex = particleIndex;\n      particleIndex += setting.particleCount;\n      for (let j = 0; j < setting.particleCount; ++j) {\n        const particle = new CubismPhysicsParticle();\n        particle.mobility = json.getParticleMobility(i, j);\n        particle.delay = json.getParticleDelay(i, j);\n        particle.acceleration = json.getParticleAcceleration(i, j);\n        particle.radius = json.getParticleRadius(i, j);\n        particle.position = json.getParticlePosition(i, j);\n        this._physicsRig.particles.push(particle);\n      }\n      this._physicsRig.settings.push(setting);\n    }\n    this.initialize();\n    json.release();\n  }\n  initialize() {\n    let strand;\n    let currentSetting;\n    let radius;\n    for (let settingIndex = 0; settingIndex < this._physicsRig.subRigCount; ++settingIndex) {\n      currentSetting = this._physicsRig.settings[settingIndex];\n      strand = this._physicsRig.particles.slice(currentSetting.baseParticleIndex);\n      strand[0].initialPosition = new CubismVector2(0, 0);\n      strand[0].lastPosition = new CubismVector2(strand[0].initialPosition.x, strand[0].initialPosition.y);\n      strand[0].lastGravity = new CubismVector2(0, -1);\n      strand[0].lastGravity.y *= -1;\n      strand[0].velocity = new CubismVector2(0, 0);\n      strand[0].force = new CubismVector2(0, 0);\n      for (let i = 1; i < currentSetting.particleCount; ++i) {\n        radius = new CubismVector2(0, 0);\n        radius.y = strand[i].radius;\n        strand[i].initialPosition = new CubismVector2(strand[i - 1].initialPosition.x + radius.x, strand[i - 1].initialPosition.y + radius.y);\n        strand[i].position = new CubismVector2(strand[i].initialPosition.x, strand[i].initialPosition.y);\n        strand[i].lastPosition = new CubismVector2(strand[i].initialPosition.x, strand[i].initialPosition.y);\n        strand[i].lastGravity = new CubismVector2(0, -1);\n        strand[i].lastGravity.y *= -1;\n        strand[i].velocity = new CubismVector2(0, 0);\n        strand[i].force = new CubismVector2(0, 0);\n      }\n    }\n  }\n}\nclass Options {\n  constructor() {\n    this.gravity = new CubismVector2(0, 0);\n    this.wind = new CubismVector2(0, 0);\n  }\n}\nfunction getInputTranslationXFromNormalizedParameterValue(targetTranslation, targetAngle, value, parameterMinimumValue, parameterMaximumValue, parameterDefaultValue, normalizationPosition, normalizationAngle, isInverted, weight) {\n  targetTranslation.x += normalizeParameterValue(value, parameterMinimumValue, parameterMaximumValue, parameterDefaultValue, normalizationPosition.minimum, normalizationPosition.maximum, normalizationPosition.defalut, isInverted) * weight;\n}\nfunction getInputTranslationYFromNormalizedParamterValue(targetTranslation, targetAngle, value, parameterMinimumValue, parameterMaximumValue, parameterDefaultValue, normalizationPosition, normalizationAngle, isInverted, weight) {\n  targetTranslation.y += normalizeParameterValue(value, parameterMinimumValue, parameterMaximumValue, parameterDefaultValue, normalizationPosition.minimum, normalizationPosition.maximum, normalizationPosition.defalut, isInverted) * weight;\n}\nfunction getInputAngleFromNormalizedParameterValue(targetTranslation, targetAngle, value, parameterMinimumValue, parameterMaximumValue, parameterDefaultValue, normalizaitionPosition, normalizationAngle, isInverted, weight) {\n  targetAngle.angle += normalizeParameterValue(value, parameterMinimumValue, parameterMaximumValue, parameterDefaultValue, normalizationAngle.minimum, normalizationAngle.maximum, normalizationAngle.defalut, isInverted) * weight;\n}\nfunction getOutputTranslationX(translation, particles, particleIndex, isInverted, parentGravity) {\n  let outputValue = translation.x;\n  if (isInverted) {\n    outputValue *= -1;\n  }\n  return outputValue;\n}\nfunction getOutputTranslationY(translation, particles, particleIndex, isInverted, parentGravity) {\n  let outputValue = translation.y;\n  if (isInverted) {\n    outputValue *= -1;\n  }\n  return outputValue;\n}\nfunction getOutputAngle(translation, particles, particleIndex, isInverted, parentGravity) {\n  let outputValue;\n  if (particleIndex >= 2) {\n    parentGravity = particles[particleIndex - 1].position.substract(particles[particleIndex - 2].position);\n  } else {\n    parentGravity = parentGravity.multiplyByScaler(-1);\n  }\n  outputValue = CubismMath.directionToRadian(parentGravity, translation);\n  if (isInverted) {\n    outputValue *= -1;\n  }\n  return outputValue;\n}\nfunction getRangeValue(min, max) {\n  return Math.abs(Math.max(min, max) - Math.min(min, max));\n}\nfunction getDefaultValue(min, max) {\n  const minValue = Math.min(min, max);\n  return minValue + getRangeValue(min, max) / 2;\n}\nfunction getOutputScaleTranslationX(translationScale, angleScale) {\n  return translationScale.x;\n}\nfunction getOutputScaleTranslationY(translationScale, angleScale) {\n  return translationScale.y;\n}\nfunction getOutputScaleAngle(translationScale, angleScale) {\n  return angleScale;\n}\nfunction updateParticles(strand, strandCount, totalTranslation, totalAngle, windDirection, thresholdValue, deltaTimeSeconds, airResistance) {\n  let totalRadian;\n  let delay;\n  let radian;\n  let currentGravity;\n  let direction = new CubismVector2(0, 0);\n  let velocity = new CubismVector2(0, 0);\n  let force = new CubismVector2(0, 0);\n  let newDirection = new CubismVector2(0, 0);\n  strand[0].position = new CubismVector2(totalTranslation.x, totalTranslation.y);\n  totalRadian = CubismMath.degreesToRadian(totalAngle);\n  currentGravity = CubismMath.radianToDirection(totalRadian);\n  currentGravity.normalize();\n  for (let i = 1; i < strandCount; ++i) {\n    strand[i].force = currentGravity.multiplyByScaler(strand[i].acceleration).add(windDirection);\n    strand[i].lastPosition = new CubismVector2(strand[i].position.x, strand[i].position.y);\n    delay = strand[i].delay * deltaTimeSeconds * 30;\n    direction = strand[i].position.substract(strand[i - 1].position);\n    radian = CubismMath.directionToRadian(strand[i].lastGravity, currentGravity) / airResistance;\n    direction.x = CubismMath.cos(radian) * direction.x - direction.y * CubismMath.sin(radian);\n    direction.y = CubismMath.sin(radian) * direction.x + direction.y * CubismMath.cos(radian);\n    strand[i].position = strand[i - 1].position.add(direction);\n    velocity = strand[i].velocity.multiplyByScaler(delay);\n    force = strand[i].force.multiplyByScaler(delay).multiplyByScaler(delay);\n    strand[i].position = strand[i].position.add(velocity).add(force);\n    newDirection = strand[i].position.substract(strand[i - 1].position);\n    newDirection.normalize();\n    strand[i].position = strand[i - 1].position.add(newDirection.multiplyByScaler(strand[i].radius));\n    if (CubismMath.abs(strand[i].position.x) < thresholdValue) {\n      strand[i].position.x = 0;\n    }\n    if (delay != 0) {\n      strand[i].velocity = strand[i].position.substract(strand[i].lastPosition);\n      strand[i].velocity = strand[i].velocity.divisionByScalar(delay);\n      strand[i].velocity = strand[i].velocity.multiplyByScaler(strand[i].mobility);\n    }\n    strand[i].force = new CubismVector2(0, 0);\n    strand[i].lastGravity = new CubismVector2(currentGravity.x, currentGravity.y);\n  }\n}\nfunction updateOutputParameterValue(parameterValue, parameterValueMinimum, parameterValueMaximum, translation, output) {\n  let outputScale;\n  let value;\n  let weight;\n  outputScale = output.getScale(output.translationScale, output.angleScale);\n  value = translation * outputScale;\n  if (value < parameterValueMinimum) {\n    if (value < output.valueBelowMinimum) {\n      output.valueBelowMinimum = value;\n    }\n    value = parameterValueMinimum;\n  } else if (value > parameterValueMaximum) {\n    if (value > output.valueExceededMaximum) {\n      output.valueExceededMaximum = value;\n    }\n    value = parameterValueMaximum;\n  }\n  weight = output.weight / MaximumWeight;\n  if (weight >= 1) {\n    parameterValue[0] = value;\n  } else {\n    value = parameterValue[0] * (1 - weight) + value * weight;\n    parameterValue[0] = value;\n  }\n}\nfunction normalizeParameterValue(value, parameterMinimum, parameterMaximum, parameterDefault, normalizedMinimum, normalizedMaximum, normalizedDefault, isInverted) {\n  let result = 0;\n  const maxValue = CubismMath.max(parameterMaximum, parameterMinimum);\n  if (maxValue < value) {\n    value = maxValue;\n  }\n  const minValue = CubismMath.min(parameterMaximum, parameterMinimum);\n  if (minValue > value) {\n    value = minValue;\n  }\n  const minNormValue = CubismMath.min(normalizedMinimum, normalizedMaximum);\n  const maxNormValue = CubismMath.max(normalizedMinimum, normalizedMaximum);\n  const middleNormValue = normalizedDefault;\n  const middleValue = getDefaultValue(minValue, maxValue);\n  const paramValue = value - middleValue;\n  switch (Math.sign(paramValue)) {\n    case 1: {\n      const nLength = maxNormValue - middleNormValue;\n      const pLength = maxValue - middleValue;\n      if (pLength != 0) {\n        result = paramValue * (nLength / pLength);\n        result += middleNormValue;\n      }\n      break;\n    }\n    case -1: {\n      const nLength = minNormValue - middleNormValue;\n      const pLength = minValue - middleValue;\n      if (pLength != 0) {\n        result = paramValue * (nLength / pLength);\n        result += middleNormValue;\n      }\n      break;\n    }\n    case 0: {\n      result = middleNormValue;\n      break;\n    }\n  }\n  return isInverted ? result : result * -1;\n}\nclass csmRect {\n  constructor(x = 0, y = 0, w = 0, h = 0) {\n    this.x = x;\n    this.y = y;\n    this.width = w;\n    this.height = h;\n  }\n  getCenterX() {\n    return this.x + 0.5 * this.width;\n  }\n  getCenterY() {\n    return this.y + 0.5 * this.height;\n  }\n  getRight() {\n    return this.x + this.width;\n  }\n  getBottom() {\n    return this.y + this.height;\n  }\n  setRect(r) {\n    this.x = r.x;\n    this.y = r.y;\n    this.width = r.width;\n    this.height = r.height;\n  }\n  expand(w, h) {\n    this.x -= w;\n    this.y -= h;\n    this.width += w * 2;\n    this.height += h * 2;\n  }\n}\nconst ColorChannelCount = 4;\nconst shaderCount = 10;\nlet s_instance;\nlet s_viewport;\nlet s_fbo;\nclass CubismClippingManager_WebGL {\n  getChannelFlagAsColor(channelNo) {\n    return this._channelColors[channelNo];\n  }\n  getMaskRenderTexture() {\n    let ret = 0;\n    if (this._maskTexture && this._maskTexture.texture != 0) {\n      this._maskTexture.frameNo = this._currentFrameNo;\n      ret = this._maskTexture.texture;\n    }\n    if (ret == 0) {\n      const size = this._clippingMaskBufferSize;\n      this._colorBuffer = this.gl.createTexture();\n      this.gl.bindTexture(this.gl.TEXTURE_2D, this._colorBuffer);\n      this.gl.texImage2D(this.gl.TEXTURE_2D, 0, this.gl.RGBA, size, size, 0, this.gl.RGBA, this.gl.UNSIGNED_BYTE, null);\n      this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_S, this.gl.CLAMP_TO_EDGE);\n      this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_T, this.gl.CLAMP_TO_EDGE);\n      this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MIN_FILTER, this.gl.LINEAR);\n      this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MAG_FILTER, this.gl.LINEAR);\n      this.gl.bindTexture(this.gl.TEXTURE_2D, null);\n      ret = this.gl.createFramebuffer();\n      this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, ret);\n      this.gl.framebufferTexture2D(this.gl.FRAMEBUFFER, this.gl.COLOR_ATTACHMENT0, this.gl.TEXTURE_2D, this._colorBuffer, 0);\n      this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, s_fbo);\n      this._maskTexture = new CubismRenderTextureResource(this._currentFrameNo, ret);\n    }\n    return ret;\n  }\n  setGL(gl) {\n    this.gl = gl;\n  }\n  calcClippedDrawTotalBounds(model, clippingContext) {\n    let clippedDrawTotalMinX = Number.MAX_VALUE;\n    let clippedDrawTotalMinY = Number.MAX_VALUE;\n    let clippedDrawTotalMaxX = Number.MIN_VALUE;\n    let clippedDrawTotalMaxY = Number.MIN_VALUE;\n    const clippedDrawCount = clippingContext._clippedDrawableIndexList.length;\n    for (let clippedDrawableIndex = 0; clippedDrawableIndex < clippedDrawCount; clippedDrawableIndex++) {\n      const drawableIndex = clippingContext._clippedDrawableIndexList[clippedDrawableIndex];\n      const drawableVertexCount = model.getDrawableVertexCount(drawableIndex);\n      const drawableVertexes = model.getDrawableVertices(drawableIndex);\n      let minX = Number.MAX_VALUE;\n      let minY = Number.MAX_VALUE;\n      let maxX = Number.MIN_VALUE;\n      let maxY = Number.MIN_VALUE;\n      const loop = drawableVertexCount * Constant.vertexStep;\n      for (let pi = Constant.vertexOffset; pi < loop; pi += Constant.vertexStep) {\n        const x = drawableVertexes[pi];\n        const y = drawableVertexes[pi + 1];\n        if (x < minX) {\n          minX = x;\n        }\n        if (x > maxX) {\n          maxX = x;\n        }\n        if (y < minY) {\n          minY = y;\n        }\n        if (y > maxY) {\n          maxY = y;\n        }\n      }\n      if (minX == Number.MAX_VALUE) {\n        continue;\n      }\n      if (minX < clippedDrawTotalMinX) {\n        clippedDrawTotalMinX = minX;\n      }\n      if (minY < clippedDrawTotalMinY) {\n        clippedDrawTotalMinY = minY;\n      }\n      if (maxX > clippedDrawTotalMaxX) {\n        clippedDrawTotalMaxX = maxX;\n      }\n      if (maxY > clippedDrawTotalMaxY) {\n        clippedDrawTotalMaxY = maxY;\n      }\n      if (clippedDrawTotalMinX == Number.MAX_VALUE) {\n        clippingContext._allClippedDrawRect.x = 0;\n        clippingContext._allClippedDrawRect.y = 0;\n        clippingContext._allClippedDrawRect.width = 0;\n        clippingContext._allClippedDrawRect.height = 0;\n        clippingContext._isUsing = false;\n      } else {\n        clippingContext._isUsing = true;\n        const w = clippedDrawTotalMaxX - clippedDrawTotalMinX;\n        const h = clippedDrawTotalMaxY - clippedDrawTotalMinY;\n        clippingContext._allClippedDrawRect.x = clippedDrawTotalMinX;\n        clippingContext._allClippedDrawRect.y = clippedDrawTotalMinY;\n        clippingContext._allClippedDrawRect.width = w;\n        clippingContext._allClippedDrawRect.height = h;\n      }\n    }\n  }\n  constructor() {\n    this._maskRenderTexture = null;\n    this._colorBuffer = null;\n    this._currentFrameNo = 0;\n    this._clippingMaskBufferSize = 256;\n    this._clippingContextListForMask = [];\n    this._clippingContextListForDraw = [];\n    this._channelColors = [];\n    this._tmpBoundsOnModel = new csmRect();\n    this._tmpMatrix = new CubismMatrix44();\n    this._tmpMatrixForMask = new CubismMatrix44();\n    this._tmpMatrixForDraw = new CubismMatrix44();\n    let tmp = new CubismTextureColor();\n    tmp.R = 1;\n    tmp.G = 0;\n    tmp.B = 0;\n    tmp.A = 0;\n    this._channelColors.push(tmp);\n    tmp = new CubismTextureColor();\n    tmp.R = 0;\n    tmp.G = 1;\n    tmp.B = 0;\n    tmp.A = 0;\n    this._channelColors.push(tmp);\n    tmp = new CubismTextureColor();\n    tmp.R = 0;\n    tmp.G = 0;\n    tmp.B = 1;\n    tmp.A = 0;\n    this._channelColors.push(tmp);\n    tmp = new CubismTextureColor();\n    tmp.R = 0;\n    tmp.G = 0;\n    tmp.B = 0;\n    tmp.A = 1;\n    this._channelColors.push(tmp);\n  }\n  release() {\n    var _a, _b, _c;\n    const self = this;\n    for (let i = 0; i < this._clippingContextListForMask.length; i++) {\n      if (this._clippingContextListForMask[i]) {\n        (_a = this._clippingContextListForMask[i]) == null ? void 0 : _a.release();\n      }\n    }\n    self._clippingContextListForMask = void 0;\n    self._clippingContextListForDraw = void 0;\n    if (this._maskTexture) {\n      (_b = this.gl) == null ? void 0 : _b.deleteFramebuffer(this._maskTexture.texture);\n      self._maskTexture = void 0;\n    }\n    self._channelColors = void 0;\n    (_c = this.gl) == null ? void 0 : _c.deleteTexture(this._colorBuffer);\n    this._colorBuffer = null;\n  }\n  initialize(model, drawableCount, drawableMasks, drawableMaskCounts) {\n    for (let i = 0; i < drawableCount; i++) {\n      if (drawableMaskCounts[i] <= 0) {\n        this._clippingContextListForDraw.push(null);\n        continue;\n      }\n      let clippingContext = this.findSameClip(drawableMasks[i], drawableMaskCounts[i]);\n      if (clippingContext == null) {\n        clippingContext = new CubismClippingContext(this, drawableMasks[i], drawableMaskCounts[i]);\n        this._clippingContextListForMask.push(clippingContext);\n      }\n      clippingContext.addClippedDrawable(i);\n      this._clippingContextListForDraw.push(clippingContext);\n    }\n  }\n  setupClippingContext(model, renderer) {\n    this._currentFrameNo++;\n    let usingClipCount = 0;\n    for (let clipIndex = 0; clipIndex < this._clippingContextListForMask.length; clipIndex++) {\n      const cc = this._clippingContextListForMask[clipIndex];\n      this.calcClippedDrawTotalBounds(model, cc);\n      if (cc._isUsing) {\n        usingClipCount++;\n      }\n    }\n    if (usingClipCount > 0) {\n      this.gl.viewport(0, 0, this._clippingMaskBufferSize, this._clippingMaskBufferSize);\n      this._maskRenderTexture = this.getMaskRenderTexture();\n      renderer.getMvpMatrix();\n      renderer.preDraw();\n      this.setupLayoutBounds(usingClipCount);\n      this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, this._maskRenderTexture);\n      this.gl.clearColor(1, 1, 1, 1);\n      this.gl.clear(this.gl.COLOR_BUFFER_BIT);\n      for (let clipIndex = 0; clipIndex < this._clippingContextListForMask.length; clipIndex++) {\n        const clipContext = this._clippingContextListForMask[clipIndex];\n        const allClipedDrawRect = clipContext._allClippedDrawRect;\n        const layoutBoundsOnTex01 = clipContext._layoutBounds;\n        const MARGIN = 0.05;\n        this._tmpBoundsOnModel.setRect(allClipedDrawRect);\n        this._tmpBoundsOnModel.expand(allClipedDrawRect.width * MARGIN, allClipedDrawRect.height * MARGIN);\n        const scaleX = layoutBoundsOnTex01.width / this._tmpBoundsOnModel.width;\n        const scaleY = layoutBoundsOnTex01.height / this._tmpBoundsOnModel.height;\n        {\n          this._tmpMatrix.loadIdentity();\n          {\n            this._tmpMatrix.translateRelative(-1, -1);\n            this._tmpMatrix.scaleRelative(2, 2);\n          }\n          {\n            this._tmpMatrix.translateRelative(layoutBoundsOnTex01.x, layoutBoundsOnTex01.y);\n            this._tmpMatrix.scaleRelative(scaleX, scaleY);\n            this._tmpMatrix.translateRelative(-this._tmpBoundsOnModel.x, -this._tmpBoundsOnModel.y);\n          }\n          this._tmpMatrixForMask.setMatrix(this._tmpMatrix.getArray());\n        }\n        {\n          this._tmpMatrix.loadIdentity();\n          {\n            this._tmpMatrix.translateRelative(layoutBoundsOnTex01.x, layoutBoundsOnTex01.y);\n            this._tmpMatrix.scaleRelative(scaleX, scaleY);\n            this._tmpMatrix.translateRelative(-this._tmpBoundsOnModel.x, -this._tmpBoundsOnModel.y);\n          }\n          this._tmpMatrixForDraw.setMatrix(this._tmpMatrix.getArray());\n        }\n        clipContext._matrixForMask.setMatrix(this._tmpMatrixForMask.getArray());\n        clipContext._matrixForDraw.setMatrix(this._tmpMatrixForDraw.getArray());\n        const clipDrawCount = clipContext._clippingIdCount;\n        for (let i = 0; i < clipDrawCount; i++) {\n          const clipDrawIndex = clipContext._clippingIdList[i];\n          if (!model.getDrawableDynamicFlagVertexPositionsDidChange(clipDrawIndex)) {\n            continue;\n          }\n          renderer.setIsCulling(model.getDrawableCulling(clipDrawIndex) != false);\n          renderer.setClippingContextBufferForMask(clipContext);\n          renderer.drawMesh(model.getDrawableTextureIndices(clipDrawIndex), model.getDrawableVertexIndexCount(clipDrawIndex), model.getDrawableVertexCount(clipDrawIndex), model.getDrawableVertexIndices(clipDrawIndex), model.getDrawableVertices(clipDrawIndex), model.getDrawableVertexUvs(clipDrawIndex), model.getDrawableOpacity(clipDrawIndex), CubismBlendMode.CubismBlendMode_Normal, false);\n        }\n      }\n      this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, s_fbo);\n      renderer.setClippingContextBufferForMask(null);\n      this.gl.viewport(s_viewport[0], s_viewport[1], s_viewport[2], s_viewport[3]);\n    }\n  }\n  findSameClip(drawableMasks, drawableMaskCounts) {\n    for (let i = 0; i < this._clippingContextListForMask.length; i++) {\n      const clippingContext = this._clippingContextListForMask[i];\n      const count = clippingContext._clippingIdCount;\n      if (count != drawableMaskCounts) {\n        continue;\n      }\n      let sameCount = 0;\n      for (let j = 0; j < count; j++) {\n        const clipId = clippingContext._clippingIdList[j];\n        for (let k = 0; k < count; k++) {\n          if (drawableMasks[k] == clipId) {\n            sameCount++;\n            break;\n          }\n        }\n      }\n      if (sameCount == count) {\n        return clippingContext;\n      }\n    }\n    return null;\n  }\n  setupLayoutBounds(usingClipCount) {\n    let div = usingClipCount / ColorChannelCount;\n    let mod = usingClipCount % ColorChannelCount;\n    div = ~~div;\n    mod = ~~mod;\n    let curClipIndex = 0;\n    for (let channelNo = 0; channelNo < ColorChannelCount; channelNo++) {\n      const layoutCount = div + (channelNo < mod ? 1 : 0);\n      if (layoutCount == 0)\n        ;\n      else if (layoutCount == 1) {\n        const clipContext = this._clippingContextListForMask[curClipIndex++];\n        clipContext._layoutChannelNo = channelNo;\n        clipContext._layoutBounds.x = 0;\n        clipContext._layoutBounds.y = 0;\n        clipContext._layoutBounds.width = 1;\n        clipContext._layoutBounds.height = 1;\n      } else if (layoutCount == 2) {\n        for (let i = 0; i < layoutCount; i++) {\n          let xpos = i % 2;\n          xpos = ~~xpos;\n          const cc = this._clippingContextListForMask[curClipIndex++];\n          cc._layoutChannelNo = channelNo;\n          cc._layoutBounds.x = xpos * 0.5;\n          cc._layoutBounds.y = 0;\n          cc._layoutBounds.width = 0.5;\n          cc._layoutBounds.height = 1;\n        }\n      } else if (layoutCount <= 4) {\n        for (let i = 0; i < layoutCount; i++) {\n          let xpos = i % 2;\n          let ypos = i / 2;\n          xpos = ~~xpos;\n          ypos = ~~ypos;\n          const cc = this._clippingContextListForMask[curClipIndex++];\n          cc._layoutChannelNo = channelNo;\n          cc._layoutBounds.x = xpos * 0.5;\n          cc._layoutBounds.y = ypos * 0.5;\n          cc._layoutBounds.width = 0.5;\n          cc._layoutBounds.height = 0.5;\n        }\n      } else if (layoutCount <= 9) {\n        for (let i = 0; i < layoutCount; i++) {\n          let xpos = i % 3;\n          let ypos = i / 3;\n          xpos = ~~xpos;\n          ypos = ~~ypos;\n          const cc = this._clippingContextListForMask[curClipIndex++];\n          cc._layoutChannelNo = channelNo;\n          cc._layoutBounds.x = xpos / 3;\n          cc._layoutBounds.y = ypos / 3;\n          cc._layoutBounds.width = 1 / 3;\n          cc._layoutBounds.height = 1 / 3;\n        }\n      } else if (CubismConfig.supportMoreMaskDivisions && layoutCount <= 16) {\n        for (let i = 0; i < layoutCount; i++) {\n          let xpos = i % 4;\n          let ypos = i / 4;\n          xpos = ~~xpos;\n          ypos = ~~ypos;\n          const cc = this._clippingContextListForMask[curClipIndex++];\n          cc._layoutChannelNo = channelNo;\n          cc._layoutBounds.x = xpos / 4;\n          cc._layoutBounds.y = ypos / 4;\n          cc._layoutBounds.width = 1 / 4;\n          cc._layoutBounds.height = 1 / 4;\n        }\n      } else {\n        CubismLogError(\"not supported mask count : {0}\", layoutCount);\n      }\n    }\n  }\n  getColorBuffer() {\n    return this._colorBuffer;\n  }\n  getClippingContextListForDraw() {\n    return this._clippingContextListForDraw;\n  }\n  setClippingMaskBufferSize(size) {\n    this._clippingMaskBufferSize = size;\n  }\n  getClippingMaskBufferSize() {\n    return this._clippingMaskBufferSize;\n  }\n}\nclass CubismRenderTextureResource {\n  constructor(frameNo, texture) {\n    this.frameNo = frameNo;\n    this.texture = texture;\n  }\n}\nclass CubismClippingContext {\n  constructor(manager, clippingDrawableIndices, clipCount) {\n    this._isUsing = false;\n    this._owner = manager;\n    this._clippingIdList = clippingDrawableIndices;\n    this._clippingIdCount = clipCount;\n    this._allClippedDrawRect = new csmRect();\n    this._layoutBounds = new csmRect();\n    this._clippedDrawableIndexList = [];\n    this._matrixForMask = new CubismMatrix44();\n    this._matrixForDraw = new CubismMatrix44();\n  }\n  release() {\n    const self = this;\n    self._layoutBounds = void 0;\n    self._allClippedDrawRect = void 0;\n    self._clippedDrawableIndexList = void 0;\n  }\n  addClippedDrawable(drawableIndex) {\n    this._clippedDrawableIndexList.push(drawableIndex);\n  }\n  getClippingManager() {\n    return this._owner;\n  }\n  setGl(gl) {\n    this._owner.setGL(gl);\n  }\n}\nclass CubismShader_WebGL {\n  static getInstance() {\n    if (s_instance == null) {\n      s_instance = new CubismShader_WebGL();\n      return s_instance;\n    }\n    return s_instance;\n  }\n  static deleteInstance() {\n    if (s_instance) {\n      s_instance.release();\n      s_instance = void 0;\n    }\n  }\n  constructor() {\n    this._shaderSets = [];\n  }\n  release() {\n    this.releaseShaderProgram();\n  }\n  setupShaderProgram(renderer, textureId, vertexCount, vertexArray, indexArray, uvArray, bufferData, opacity, colorBlendMode, baseColor, isPremultipliedAlpha, matrix4x4, invertedMask) {\n    if (!isPremultipliedAlpha) {\n      CubismLogError(\"NoPremultipliedAlpha is not allowed\");\n    }\n    if (this._shaderSets.length == 0) {\n      this.generateShaders();\n    }\n    let SRC_COLOR;\n    let DST_COLOR;\n    let SRC_ALPHA;\n    let DST_ALPHA;\n    const clippingContextBufferForMask = renderer.getClippingContextBufferForMask();\n    if (clippingContextBufferForMask != null) {\n      const shaderSet = this._shaderSets[ShaderNames.ShaderNames_SetupMask];\n      this.gl.useProgram(shaderSet.shaderProgram);\n      this.gl.activeTexture(this.gl.TEXTURE0);\n      this.gl.bindTexture(this.gl.TEXTURE_2D, textureId);\n      this.gl.uniform1i(shaderSet.samplerTexture0Location, 0);\n      if (bufferData.vertex == null) {\n        bufferData.vertex = this.gl.createBuffer();\n      }\n      this.gl.bindBuffer(this.gl.ARRAY_BUFFER, bufferData.vertex);\n      this.gl.bufferData(this.gl.ARRAY_BUFFER, vertexArray, this.gl.DYNAMIC_DRAW);\n      this.gl.enableVertexAttribArray(shaderSet.attributePositionLocation);\n      this.gl.vertexAttribPointer(shaderSet.attributePositionLocation, 2, this.gl.FLOAT, false, 0, 0);\n      if (bufferData.uv == null) {\n        bufferData.uv = this.gl.createBuffer();\n      }\n      this.gl.bindBuffer(this.gl.ARRAY_BUFFER, bufferData.uv);\n      this.gl.bufferData(this.gl.ARRAY_BUFFER, uvArray, this.gl.DYNAMIC_DRAW);\n      this.gl.enableVertexAttribArray(shaderSet.attributeTexCoordLocation);\n      this.gl.vertexAttribPointer(shaderSet.attributeTexCoordLocation, 2, this.gl.FLOAT, false, 0, 0);\n      const channelNo = clippingContextBufferForMask._layoutChannelNo;\n      const colorChannel = clippingContextBufferForMask.getClippingManager().getChannelFlagAsColor(channelNo);\n      this.gl.uniform4f(shaderSet.uniformChannelFlagLocation, colorChannel.R, colorChannel.G, colorChannel.B, colorChannel.A);\n      this.gl.uniformMatrix4fv(shaderSet.uniformClipMatrixLocation, false, clippingContextBufferForMask._matrixForMask.getArray());\n      const rect = clippingContextBufferForMask._layoutBounds;\n      this.gl.uniform4f(shaderSet.uniformBaseColorLocation, rect.x * 2 - 1, rect.y * 2 - 1, rect.getRight() * 2 - 1, rect.getBottom() * 2 - 1);\n      SRC_COLOR = this.gl.ZERO;\n      DST_COLOR = this.gl.ONE_MINUS_SRC_COLOR;\n      SRC_ALPHA = this.gl.ZERO;\n      DST_ALPHA = this.gl.ONE_MINUS_SRC_ALPHA;\n    } else {\n      const clippingContextBufferForDraw = renderer.getClippingContextBufferForDraw();\n      const masked = clippingContextBufferForDraw != null;\n      const offset = masked ? invertedMask ? 2 : 1 : 0;\n      let shaderSet;\n      switch (colorBlendMode) {\n        case CubismBlendMode.CubismBlendMode_Normal:\n        default:\n          shaderSet = this._shaderSets[ShaderNames.ShaderNames_NormalPremultipliedAlpha + offset];\n          SRC_COLOR = this.gl.ONE;\n          DST_COLOR = this.gl.ONE_MINUS_SRC_ALPHA;\n          SRC_ALPHA = this.gl.ONE;\n          DST_ALPHA = this.gl.ONE_MINUS_SRC_ALPHA;\n          break;\n        case CubismBlendMode.CubismBlendMode_Additive:\n          shaderSet = this._shaderSets[ShaderNames.ShaderNames_AddPremultipliedAlpha + offset];\n          SRC_COLOR = this.gl.ONE;\n          DST_COLOR = this.gl.ONE;\n          SRC_ALPHA = this.gl.ZERO;\n          DST_ALPHA = this.gl.ONE;\n          break;\n        case CubismBlendMode.CubismBlendMode_Multiplicative:\n          shaderSet = this._shaderSets[ShaderNames.ShaderNames_MultPremultipliedAlpha + offset];\n          SRC_COLOR = this.gl.DST_COLOR;\n          DST_COLOR = this.gl.ONE_MINUS_SRC_ALPHA;\n          SRC_ALPHA = this.gl.ZERO;\n          DST_ALPHA = this.gl.ONE;\n          break;\n      }\n      this.gl.useProgram(shaderSet.shaderProgram);\n      if (bufferData.vertex == null) {\n        bufferData.vertex = this.gl.createBuffer();\n      }\n      this.gl.bindBuffer(this.gl.ARRAY_BUFFER, bufferData.vertex);\n      this.gl.bufferData(this.gl.ARRAY_BUFFER, vertexArray, this.gl.DYNAMIC_DRAW);\n      this.gl.enableVertexAttribArray(shaderSet.attributePositionLocation);\n      this.gl.vertexAttribPointer(shaderSet.attributePositionLocation, 2, this.gl.FLOAT, false, 0, 0);\n      if (bufferData.uv == null) {\n        bufferData.uv = this.gl.createBuffer();\n      }\n      this.gl.bindBuffer(this.gl.ARRAY_BUFFER, bufferData.uv);\n      this.gl.bufferData(this.gl.ARRAY_BUFFER, uvArray, this.gl.DYNAMIC_DRAW);\n      this.gl.enableVertexAttribArray(shaderSet.attributeTexCoordLocation);\n      this.gl.vertexAttribPointer(shaderSet.attributeTexCoordLocation, 2, this.gl.FLOAT, false, 0, 0);\n      if (clippingContextBufferForDraw != null) {\n        this.gl.activeTexture(this.gl.TEXTURE1);\n        const tex = clippingContextBufferForDraw.getClippingManager().getColorBuffer();\n        this.gl.bindTexture(this.gl.TEXTURE_2D, tex);\n        this.gl.uniform1i(shaderSet.samplerTexture1Location, 1);\n        this.gl.uniformMatrix4fv(shaderSet.uniformClipMatrixLocation, false, clippingContextBufferForDraw._matrixForDraw.getArray());\n        const channelNo = clippingContextBufferForDraw._layoutChannelNo;\n        const colorChannel = clippingContextBufferForDraw.getClippingManager().getChannelFlagAsColor(channelNo);\n        this.gl.uniform4f(shaderSet.uniformChannelFlagLocation, colorChannel.R, colorChannel.G, colorChannel.B, colorChannel.A);\n      }\n      this.gl.activeTexture(this.gl.TEXTURE0);\n      this.gl.bindTexture(this.gl.TEXTURE_2D, textureId);\n      this.gl.uniform1i(shaderSet.samplerTexture0Location, 0);\n      this.gl.uniformMatrix4fv(shaderSet.uniformMatrixLocation, false, matrix4x4.getArray());\n      this.gl.uniform4f(shaderSet.uniformBaseColorLocation, baseColor.R, baseColor.G, baseColor.B, baseColor.A);\n    }\n    if (bufferData.index == null) {\n      bufferData.index = this.gl.createBuffer();\n    }\n    this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, bufferData.index);\n    this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER, indexArray, this.gl.DYNAMIC_DRAW);\n    this.gl.blendFuncSeparate(SRC_COLOR, DST_COLOR, SRC_ALPHA, DST_ALPHA);\n  }\n  releaseShaderProgram() {\n    for (let i = 0; i < this._shaderSets.length; i++) {\n      this.gl.deleteProgram(this._shaderSets[i].shaderProgram);\n      this._shaderSets[i].shaderProgram = 0;\n    }\n    this._shaderSets = [];\n  }\n  generateShaders() {\n    for (let i = 0; i < shaderCount; i++) {\n      this._shaderSets.push({});\n    }\n    this._shaderSets[0].shaderProgram = this.loadShaderProgram(vertexShaderSrcSetupMask, fragmentShaderSrcsetupMask);\n    this._shaderSets[1].shaderProgram = this.loadShaderProgram(vertexShaderSrc, fragmentShaderSrcPremultipliedAlpha);\n    this._shaderSets[2].shaderProgram = this.loadShaderProgram(vertexShaderSrcMasked, fragmentShaderSrcMaskPremultipliedAlpha);\n    this._shaderSets[3].shaderProgram = this.loadShaderProgram(vertexShaderSrcMasked, fragmentShaderSrcMaskInvertedPremultipliedAlpha);\n    this._shaderSets[4].shaderProgram = this._shaderSets[1].shaderProgram;\n    this._shaderSets[5].shaderProgram = this._shaderSets[2].shaderProgram;\n    this._shaderSets[6].shaderProgram = this._shaderSets[3].shaderProgram;\n    this._shaderSets[7].shaderProgram = this._shaderSets[1].shaderProgram;\n    this._shaderSets[8].shaderProgram = this._shaderSets[2].shaderProgram;\n    this._shaderSets[9].shaderProgram = this._shaderSets[3].shaderProgram;\n    this._shaderSets[0].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[0].shaderProgram, \"a_position\");\n    this._shaderSets[0].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[0].shaderProgram, \"a_texCoord\");\n    this._shaderSets[0].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[0].shaderProgram, \"s_texture0\");\n    this._shaderSets[0].uniformClipMatrixLocation = this.gl.getUniformLocation(this._shaderSets[0].shaderProgram, \"u_clipMatrix\");\n    this._shaderSets[0].uniformChannelFlagLocation = this.gl.getUniformLocation(this._shaderSets[0].shaderProgram, \"u_channelFlag\");\n    this._shaderSets[0].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[0].shaderProgram, \"u_baseColor\");\n    this._shaderSets[1].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[1].shaderProgram, \"a_position\");\n    this._shaderSets[1].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[1].shaderProgram, \"a_texCoord\");\n    this._shaderSets[1].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[1].shaderProgram, \"s_texture0\");\n    this._shaderSets[1].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[1].shaderProgram, \"u_matrix\");\n    this._shaderSets[1].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[1].shaderProgram, \"u_baseColor\");\n    this._shaderSets[2].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[2].shaderProgram, \"a_position\");\n    this._shaderSets[2].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[2].shaderProgram, \"a_texCoord\");\n    this._shaderSets[2].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[2].shaderProgram, \"s_texture0\");\n    this._shaderSets[2].samplerTexture1Location = this.gl.getUniformLocation(this._shaderSets[2].shaderProgram, \"s_texture1\");\n    this._shaderSets[2].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[2].shaderProgram, \"u_matrix\");\n    this._shaderSets[2].uniformClipMatrixLocation = this.gl.getUniformLocation(this._shaderSets[2].shaderProgram, \"u_clipMatrix\");\n    this._shaderSets[2].uniformChannelFlagLocation = this.gl.getUniformLocation(this._shaderSets[2].shaderProgram, \"u_channelFlag\");\n    this._shaderSets[2].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[2].shaderProgram, \"u_baseColor\");\n    this._shaderSets[3].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[3].shaderProgram, \"a_position\");\n    this._shaderSets[3].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[3].shaderProgram, \"a_texCoord\");\n    this._shaderSets[3].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[3].shaderProgram, \"s_texture0\");\n    this._shaderSets[3].samplerTexture1Location = this.gl.getUniformLocation(this._shaderSets[3].shaderProgram, \"s_texture1\");\n    this._shaderSets[3].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[3].shaderProgram, \"u_matrix\");\n    this._shaderSets[3].uniformClipMatrixLocation = this.gl.getUniformLocation(this._shaderSets[3].shaderProgram, \"u_clipMatrix\");\n    this._shaderSets[3].uniformChannelFlagLocation = this.gl.getUniformLocation(this._shaderSets[3].shaderProgram, \"u_channelFlag\");\n    this._shaderSets[3].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[3].shaderProgram, \"u_baseColor\");\n    this._shaderSets[4].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[4].shaderProgram, \"a_position\");\n    this._shaderSets[4].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[4].shaderProgram, \"a_texCoord\");\n    this._shaderSets[4].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[4].shaderProgram, \"s_texture0\");\n    this._shaderSets[4].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[4].shaderProgram, \"u_matrix\");\n    this._shaderSets[4].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[4].shaderProgram, \"u_baseColor\");\n    this._shaderSets[5].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[5].shaderProgram, \"a_position\");\n    this._shaderSets[5].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[5].shaderProgram, \"a_texCoord\");\n    this._shaderSets[5].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[5].shaderProgram, \"s_texture0\");\n    this._shaderSets[5].samplerTexture1Location = this.gl.getUniformLocation(this._shaderSets[5].shaderProgram, \"s_texture1\");\n    this._shaderSets[5].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[5].shaderProgram, \"u_matrix\");\n    this._shaderSets[5].uniformClipMatrixLocation = this.gl.getUniformLocation(this._shaderSets[5].shaderProgram, \"u_clipMatrix\");\n    this._shaderSets[5].uniformChannelFlagLocation = this.gl.getUniformLocation(this._shaderSets[5].shaderProgram, \"u_channelFlag\");\n    this._shaderSets[5].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[5].shaderProgram, \"u_baseColor\");\n    this._shaderSets[6].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[6].shaderProgram, \"a_position\");\n    this._shaderSets[6].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[6].shaderProgram, \"a_texCoord\");\n    this._shaderSets[6].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[6].shaderProgram, \"s_texture0\");\n    this._shaderSets[6].samplerTexture1Location = this.gl.getUniformLocation(this._shaderSets[6].shaderProgram, \"s_texture1\");\n    this._shaderSets[6].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[6].shaderProgram, \"u_matrix\");\n    this._shaderSets[6].uniformClipMatrixLocation = this.gl.getUniformLocation(this._shaderSets[6].shaderProgram, \"u_clipMatrix\");\n    this._shaderSets[6].uniformChannelFlagLocation = this.gl.getUniformLocation(this._shaderSets[6].shaderProgram, \"u_channelFlag\");\n    this._shaderSets[6].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[6].shaderProgram, \"u_baseColor\");\n    this._shaderSets[7].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[7].shaderProgram, \"a_position\");\n    this._shaderSets[7].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[7].shaderProgram, \"a_texCoord\");\n    this._shaderSets[7].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[7].shaderProgram, \"s_texture0\");\n    this._shaderSets[7].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[7].shaderProgram, \"u_matrix\");\n    this._shaderSets[7].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[7].shaderProgram, \"u_baseColor\");\n    this._shaderSets[8].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[8].shaderProgram, \"a_position\");\n    this._shaderSets[8].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[8].shaderProgram, \"a_texCoord\");\n    this._shaderSets[8].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[8].shaderProgram, \"s_texture0\");\n    this._shaderSets[8].samplerTexture1Location = this.gl.getUniformLocation(this._shaderSets[8].shaderProgram, \"s_texture1\");\n    this._shaderSets[8].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[8].shaderProgram, \"u_matrix\");\n    this._shaderSets[8].uniformClipMatrixLocation = this.gl.getUniformLocation(this._shaderSets[8].shaderProgram, \"u_clipMatrix\");\n    this._shaderSets[8].uniformChannelFlagLocation = this.gl.getUniformLocation(this._shaderSets[8].shaderProgram, \"u_channelFlag\");\n    this._shaderSets[8].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[8].shaderProgram, \"u_baseColor\");\n    this._shaderSets[9].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[9].shaderProgram, \"a_position\");\n    this._shaderSets[9].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[9].shaderProgram, \"a_texCoord\");\n    this._shaderSets[9].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[9].shaderProgram, \"s_texture0\");\n    this._shaderSets[9].samplerTexture1Location = this.gl.getUniformLocation(this._shaderSets[9].shaderProgram, \"s_texture1\");\n    this._shaderSets[9].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[9].shaderProgram, \"u_matrix\");\n    this._shaderSets[9].uniformClipMatrixLocation = this.gl.getUniformLocation(this._shaderSets[9].shaderProgram, \"u_clipMatrix\");\n    this._shaderSets[9].uniformChannelFlagLocation = this.gl.getUniformLocation(this._shaderSets[9].shaderProgram, \"u_channelFlag\");\n    this._shaderSets[9].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[9].shaderProgram, \"u_baseColor\");\n  }\n  loadShaderProgram(vertexShaderSource, fragmentShaderSource) {\n    let shaderProgram = this.gl.createProgram();\n    let vertShader = this.compileShaderSource(this.gl.VERTEX_SHADER, vertexShaderSource);\n    if (!vertShader) {\n      CubismLogError(\"Vertex shader compile error!\");\n      return 0;\n    }\n    let fragShader = this.compileShaderSource(this.gl.FRAGMENT_SHADER, fragmentShaderSource);\n    if (!fragShader) {\n      CubismLogError(\"Vertex shader compile error!\");\n      return 0;\n    }\n    this.gl.attachShader(shaderProgram, vertShader);\n    this.gl.attachShader(shaderProgram, fragShader);\n    this.gl.linkProgram(shaderProgram);\n    const linkStatus = this.gl.getProgramParameter(shaderProgram, this.gl.LINK_STATUS);\n    if (!linkStatus) {\n      CubismLogError(\"Failed to link program: {0}\", shaderProgram);\n      this.gl.deleteShader(vertShader);\n      this.gl.deleteShader(fragShader);\n      if (shaderProgram) {\n        this.gl.deleteProgram(shaderProgram);\n      }\n      return 0;\n    }\n    this.gl.deleteShader(vertShader);\n    this.gl.deleteShader(fragShader);\n    return shaderProgram;\n  }\n  compileShaderSource(shaderType, shaderSource) {\n    const source = shaderSource;\n    const shader = this.gl.createShader(shaderType);\n    this.gl.shaderSource(shader, source);\n    this.gl.compileShader(shader);\n    if (!shader) {\n      const log = this.gl.getShaderInfoLog(shader);\n      CubismLogError(\"Shader compile log: {0} \", log);\n    }\n    const status = this.gl.getShaderParameter(shader, this.gl.COMPILE_STATUS);\n    if (!status) {\n      this.gl.deleteShader(shader);\n      return null;\n    }\n    return shader;\n  }\n  setGl(gl) {\n    this.gl = gl;\n  }\n}\nvar ShaderNames = /* @__PURE__ */ ((ShaderNames2) => {\n  ShaderNames2[ShaderNames2[\"ShaderNames_SetupMask\"] = 0] = \"ShaderNames_SetupMask\";\n  ShaderNames2[ShaderNames2[\"ShaderNames_NormalPremultipliedAlpha\"] = 1] = \"ShaderNames_NormalPremultipliedAlpha\";\n  ShaderNames2[ShaderNames2[\"ShaderNames_NormalMaskedPremultipliedAlpha\"] = 2] = \"ShaderNames_NormalMaskedPremultipliedAlpha\";\n  ShaderNames2[ShaderNames2[\"ShaderNames_NomralMaskedInvertedPremultipliedAlpha\"] = 3] = \"ShaderNames_NomralMaskedInvertedPremultipliedAlpha\";\n  ShaderNames2[ShaderNames2[\"ShaderNames_AddPremultipliedAlpha\"] = 4] = \"ShaderNames_AddPremultipliedAlpha\";\n  ShaderNames2[ShaderNames2[\"ShaderNames_AddMaskedPremultipliedAlpha\"] = 5] = \"ShaderNames_AddMaskedPremultipliedAlpha\";\n  ShaderNames2[ShaderNames2[\"ShaderNames_AddMaskedPremultipliedAlphaInverted\"] = 6] = \"ShaderNames_AddMaskedPremultipliedAlphaInverted\";\n  ShaderNames2[ShaderNames2[\"ShaderNames_MultPremultipliedAlpha\"] = 7] = \"ShaderNames_MultPremultipliedAlpha\";\n  ShaderNames2[ShaderNames2[\"ShaderNames_MultMaskedPremultipliedAlpha\"] = 8] = \"ShaderNames_MultMaskedPremultipliedAlpha\";\n  ShaderNames2[ShaderNames2[\"ShaderNames_MultMaskedPremultipliedAlphaInverted\"] = 9] = \"ShaderNames_MultMaskedPremultipliedAlphaInverted\";\n  return ShaderNames2;\n})(ShaderNames || {});\nconst vertexShaderSrcSetupMask = \"attribute vec4     a_position;attribute vec2     a_texCoord;varying vec2       v_texCoord;varying vec4       v_myPos;uniform mat4       u_clipMatrix;void main(){   gl_Position = u_clipMatrix * a_position;   v_myPos = u_clipMatrix * a_position;   v_texCoord = a_texCoord;   v_texCoord.y = 1.0 - v_texCoord.y;}\";\nconst fragmentShaderSrcsetupMask = \"precision mediump float;varying vec2       v_texCoord;varying vec4       v_myPos;uniform vec4       u_baseColor;uniform vec4       u_channelFlag;uniform sampler2D  s_texture0;void main(){   float isInside =        step(u_baseColor.x, v_myPos.x/v_myPos.w)       * step(u_baseColor.y, v_myPos.y/v_myPos.w)       * step(v_myPos.x/v_myPos.w, u_baseColor.z)       * step(v_myPos.y/v_myPos.w, u_baseColor.w);   gl_FragColor = u_channelFlag * texture2D(s_texture0, v_texCoord).a * isInside;}\";\nconst vertexShaderSrc = \"attribute vec4     a_position;attribute vec2     a_texCoord;varying vec2       v_texCoord;uniform mat4       u_matrix;void main(){   gl_Position = u_matrix * a_position;   v_texCoord = a_texCoord;   v_texCoord.y = 1.0 - v_texCoord.y;}\";\nconst vertexShaderSrcMasked = \"attribute vec4     a_position;attribute vec2     a_texCoord;varying vec2       v_texCoord;varying vec4       v_clipPos;uniform mat4       u_matrix;uniform mat4       u_clipMatrix;void main(){   gl_Position = u_matrix * a_position;   v_clipPos = u_clipMatrix * a_position;   v_texCoord = a_texCoord;   v_texCoord.y = 1.0 - v_texCoord.y;}\";\nconst fragmentShaderSrcPremultipliedAlpha = \"precision mediump float;varying vec2       v_texCoord;uniform vec4       u_baseColor;uniform sampler2D  s_texture0;void main(){   gl_FragColor = texture2D(s_texture0 , v_texCoord) * u_baseColor;}\";\nconst fragmentShaderSrcMaskPremultipliedAlpha = \"precision mediump float;varying vec2       v_texCoord;varying vec4       v_clipPos;uniform vec4       u_baseColor;uniform vec4       u_channelFlag;uniform sampler2D  s_texture0;uniform sampler2D  s_texture1;void main(){   vec4 col_formask = texture2D(s_texture0 , v_texCoord) * u_baseColor;   vec4 clipMask = (1.0 - texture2D(s_texture1, v_clipPos.xy / v_clipPos.w)) * u_channelFlag;   float maskVal = clipMask.r + clipMask.g + clipMask.b + clipMask.a;   col_formask = col_formask * maskVal;   gl_FragColor = col_formask;}\";\nconst fragmentShaderSrcMaskInvertedPremultipliedAlpha = \"precision mediump float;varying vec2 v_texCoord;varying vec4 v_clipPos;uniform sampler2D s_texture0;uniform sampler2D s_texture1;uniform vec4 u_channelFlag;uniform vec4 u_baseColor;void main(){vec4 col_formask = texture2D(s_texture0, v_texCoord) * u_baseColor;vec4 clipMask = (1.0 - texture2D(s_texture1, v_clipPos.xy / v_clipPos.w)) * u_channelFlag;float maskVal = clipMask.r + clipMask.g + clipMask.b + clipMask.a;col_formask = col_formask * (1.0 - maskVal);gl_FragColor = col_formask;}\";\nclass CubismRenderer_WebGL extends CubismRenderer {\n  constructor() {\n    super();\n    this._clippingContextBufferForMask = null;\n    this._clippingContextBufferForDraw = null;\n    this._clippingManager = new CubismClippingManager_WebGL();\n    this.firstDraw = true;\n    this._textures = {};\n    this._sortedDrawableIndexList = [];\n    this._bufferData = {\n      vertex: null,\n      uv: null,\n      index: null\n    };\n  }\n  initialize(model) {\n    if (model.isUsingMasking()) {\n      this._clippingManager = new CubismClippingManager_WebGL();\n      this._clippingManager.initialize(model, model.getDrawableCount(), model.getDrawableMasks(), model.getDrawableMaskCounts());\n    }\n    for (let i = model.getDrawableCount() - 1; i >= 0; i--) {\n      this._sortedDrawableIndexList[i] = 0;\n    }\n    super.initialize(model);\n  }\n  bindTexture(modelTextureNo, glTexture) {\n    this._textures[modelTextureNo] = glTexture;\n  }\n  getBindedTextures() {\n    return this._textures;\n  }\n  setClippingMaskBufferSize(size) {\n    this._clippingManager.release();\n    this._clippingManager = new CubismClippingManager_WebGL();\n    this._clippingManager.setClippingMaskBufferSize(size);\n    this._clippingManager.initialize(this.getModel(), this.getModel().getDrawableCount(), this.getModel().getDrawableMasks(), this.getModel().getDrawableMaskCounts());\n  }\n  getClippingMaskBufferSize() {\n    return this._clippingManager.getClippingMaskBufferSize();\n  }\n  release() {\n    var _a, _b, _c;\n    const self = this;\n    this._clippingManager.release();\n    self._clippingManager = void 0;\n    (_a = this.gl) == null ? void 0 : _a.deleteBuffer(this._bufferData.vertex);\n    this._bufferData.vertex = null;\n    (_b = this.gl) == null ? void 0 : _b.deleteBuffer(this._bufferData.uv);\n    this._bufferData.uv = null;\n    (_c = this.gl) == null ? void 0 : _c.deleteBuffer(this._bufferData.index);\n    this._bufferData.index = null;\n    self._bufferData = void 0;\n    self._textures = void 0;\n  }\n  doDrawModel() {\n    this.preDraw();\n    if (this._clippingManager != null) {\n      this._clippingManager.setupClippingContext(this.getModel(), this);\n    }\n    const drawableCount = this.getModel().getDrawableCount();\n    const renderOrder = this.getModel().getDrawableRenderOrders();\n    for (let i = 0; i < drawableCount; ++i) {\n      const order = renderOrder[i];\n      this._sortedDrawableIndexList[order] = i;\n    }\n    for (let i = 0; i < drawableCount; ++i) {\n      const drawableIndex = this._sortedDrawableIndexList[i];\n      if (!this.getModel().getDrawableDynamicFlagIsVisible(drawableIndex)) {\n        continue;\n      }\n      this.setClippingContextBufferForDraw(this._clippingManager != null ? this._clippingManager.getClippingContextListForDraw()[drawableIndex] : null);\n      this.setIsCulling(this.getModel().getDrawableCulling(drawableIndex));\n      this.drawMesh(this.getModel().getDrawableTextureIndices(drawableIndex), this.getModel().getDrawableVertexIndexCount(drawableIndex), this.getModel().getDrawableVertexCount(drawableIndex), this.getModel().getDrawableVertexIndices(drawableIndex), this.getModel().getDrawableVertices(drawableIndex), this.getModel().getDrawableVertexUvs(drawableIndex), this.getModel().getDrawableOpacity(drawableIndex), this.getModel().getDrawableBlendMode(drawableIndex), this.getModel().getDrawableInvertedMaskBit(drawableIndex));\n    }\n  }\n  drawMesh(textureNo, indexCount, vertexCount, indexArray, vertexArray, uvArray, opacity, colorBlendMode, invertedMask) {\n    if (this.isCulling()) {\n      this.gl.enable(this.gl.CULL_FACE);\n    } else {\n      this.gl.disable(this.gl.CULL_FACE);\n    }\n    this.gl.frontFace(this.gl.CCW);\n    const modelColorRGBA = this.getModelColor();\n    if (this.getClippingContextBufferForMask() == null) {\n      modelColorRGBA.A *= opacity;\n      if (this.isPremultipliedAlpha()) {\n        modelColorRGBA.R *= modelColorRGBA.A;\n        modelColorRGBA.G *= modelColorRGBA.A;\n        modelColorRGBA.B *= modelColorRGBA.A;\n      }\n    }\n    let drawtexture = null;\n    if (this._textures[textureNo] != null) {\n      drawtexture = this._textures[textureNo];\n    }\n    CubismShader_WebGL.getInstance().setupShaderProgram(this, drawtexture, vertexCount, vertexArray, indexArray, uvArray, this._bufferData, opacity, colorBlendMode, modelColorRGBA, this.isPremultipliedAlpha(), this.getMvpMatrix(), invertedMask);\n    this.gl.drawElements(this.gl.TRIANGLES, indexCount, this.gl.UNSIGNED_SHORT, 0);\n    this.gl.useProgram(null);\n    this.setClippingContextBufferForDraw(null);\n    this.setClippingContextBufferForMask(null);\n  }\n  static doStaticRelease() {\n    CubismShader_WebGL.deleteInstance();\n  }\n  setRenderState(fbo, viewport) {\n    s_fbo = fbo;\n    s_viewport = viewport;\n  }\n  preDraw() {\n    if (this.firstDraw) {\n      this.firstDraw = false;\n      this._anisortopy = this.gl.getExtension(\"EXT_texture_filter_anisotropic\") || this.gl.getExtension(\"WEBKIT_EXT_texture_filter_anisotropic\") || this.gl.getExtension(\"MOZ_EXT_texture_filter_anisotropic\");\n    }\n    this.gl.disable(this.gl.SCISSOR_TEST);\n    this.gl.disable(this.gl.STENCIL_TEST);\n    this.gl.disable(this.gl.DEPTH_TEST);\n    this.gl.frontFace(this.gl.CW);\n    this.gl.enable(this.gl.BLEND);\n    this.gl.colorMask(true, true, true, true);\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, null);\n    this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, null);\n  }\n  setClippingContextBufferForMask(clip) {\n    this._clippingContextBufferForMask = clip;\n  }\n  getClippingContextBufferForMask() {\n    return this._clippingContextBufferForMask;\n  }\n  setClippingContextBufferForDraw(clip) {\n    this._clippingContextBufferForDraw = clip;\n  }\n  getClippingContextBufferForDraw() {\n    return this._clippingContextBufferForDraw;\n  }\n  startUp(gl) {\n    this.gl = gl;\n    this._clippingManager.setGL(gl);\n    CubismShader_WebGL.getInstance().setGl(gl);\n  }\n}\nCubismRenderer.staticRelease = () => {\n  CubismRenderer_WebGL.doStaticRelease();\n};\nclass CubismModelSettingsJson {\n  constructor(json) {\n    this.groups = json.Groups;\n    this.hitAreas = json.HitAreas;\n    this.layout = json.Layout;\n    this.moc = json.FileReferences.Moc;\n    this.expressions = json.FileReferences.Expressions;\n    this.motions = json.FileReferences.Motions;\n    this.textures = json.FileReferences.Textures;\n    this.physics = json.FileReferences.Physics;\n    this.pose = json.FileReferences.Pose;\n  }\n  getEyeBlinkParameters() {\n    var _a, _b;\n    return (_b = (_a = this.groups) == null ? void 0 : _a.find((group) => group.Name === \"EyeBlink\")) == null ? void 0 : _b.Ids;\n  }\n  getLipSyncParameters() {\n    var _a, _b;\n    return (_b = (_a = this.groups) == null ? void 0 : _a.find((group) => group.Name === \"LipSync\")) == null ? void 0 : _b.Ids;\n  }\n}\nconst HitAreaPrefix = \"HitArea\";\nconst HitAreaHead = \"Head\";\nconst HitAreaBody = \"Body\";\nconst PartsIdCore = \"Parts01Core\";\nconst PartsArmPrefix = \"Parts01Arm_\";\nconst PartsArmLPrefix = \"Parts01ArmL_\";\nconst PartsArmRPrefix = \"Parts01ArmR_\";\nconst ParamAngleX = \"ParamAngleX\";\nconst ParamAngleY = \"ParamAngleY\";\nconst ParamAngleZ = \"ParamAngleZ\";\nconst ParamEyeLOpen = \"ParamEyeLOpen\";\nconst ParamEyeLSmile = \"ParamEyeLSmile\";\nconst ParamEyeROpen = \"ParamEyeROpen\";\nconst ParamEyeRSmile = \"ParamEyeRSmile\";\nconst ParamEyeBallX = \"ParamEyeBallX\";\nconst ParamEyeBallY = \"ParamEyeBallY\";\nconst ParamEyeBallForm = \"ParamEyeBallForm\";\nconst ParamBrowLY = \"ParamBrowLY\";\nconst ParamBrowRY = \"ParamBrowRY\";\nconst ParamBrowLX = \"ParamBrowLX\";\nconst ParamBrowRX = \"ParamBrowRX\";\nconst ParamBrowLAngle = \"ParamBrowLAngle\";\nconst ParamBrowRAngle = \"ParamBrowRAngle\";\nconst ParamBrowLForm = \"ParamBrowLForm\";\nconst ParamBrowRForm = \"ParamBrowRForm\";\nconst ParamMouthForm = \"ParamMouthForm\";\nconst ParamMouthOpenY = \"ParamMouthOpenY\";\nconst ParamCheek = \"ParamCheek\";\nconst ParamBodyAngleX = \"ParamBodyAngleX\";\nconst ParamBodyAngleY = \"ParamBodyAngleY\";\nconst ParamBodyAngleZ = \"ParamBodyAngleZ\";\nconst ParamBreath = \"ParamBreath\";\nconst ParamArmLA = \"ParamArmLA\";\nconst ParamArmRA = \"ParamArmRA\";\nconst ParamArmLB = \"ParamArmLB\";\nconst ParamArmRB = \"ParamArmRB\";\nconst ParamHandL = \"ParamHandL\";\nconst ParamHandR = \"ParamHandR\";\nconst ParamHairFront = \"ParamHairFront\";\nconst ParamHairSide = \"ParamHairSide\";\nconst ParamHairBack = \"ParamHairBack\";\nconst ParamHairFluffy = \"ParamHairFluffy\";\nconst ParamShoulderY = \"ParamShoulderY\";\nconst ParamBustX = \"ParamBustX\";\nconst ParamBustY = \"ParamBustY\";\nconst ParamBaseX = \"ParamBaseX\";\nconst ParamBaseY = \"ParamBaseY\";\nconst ParamNONE = \"NONE:\";\nconst LOGICAL_WIDTH = 2;\nconst LOGICAL_HEIGHT = 2;\nvar config;\n((config2) => {\n  config2.LOG_LEVEL_VERBOSE = 0;\n  config2.LOG_LEVEL_WARNING = 1;\n  config2.LOG_LEVEL_ERROR = 2;\n  config2.LOG_LEVEL_NONE = 999;\n  config2.logLevel = config2.LOG_LEVEL_WARNING;\n  config2.sound = true;\n  config2.motionSync = true;\n  config2.motionFadingDuration = 500;\n  config2.idleMotionFadingDuration = 2e3;\n  config2.expressionFadingDuration = 500;\n  config2.preserveExpressionOnMotion = true;\n  config2.cubism4 = CubismConfig;\n})(config || (config = {}));\nconst VERSION = \"0.4.0\";\nconst logger = {\n  log(tag, ...messages) {\n    if (config.logLevel <= config.LOG_LEVEL_VERBOSE) {\n      console.log(`[${tag}]`, ...messages);\n    }\n  },\n  warn(tag, ...messages) {\n    if (config.logLevel <= config.LOG_LEVEL_WARNING) {\n      console.warn(`[${tag}]`, ...messages);\n    }\n  },\n  error(tag, ...messages) {\n    if (config.logLevel <= config.LOG_LEVEL_ERROR) {\n      console.error(`[${tag}]`, ...messages);\n    }\n  }\n};\nfunction clamp(num, lower, upper) {\n  return num < lower ? lower : num > upper ? upper : num;\n}\nfunction rand(min, max) {\n  return Math.random() * (max - min) + min;\n}\nfunction copyProperty(type, from, to, fromKey, toKey) {\n  const value = from[fromKey];\n  if (value !== null && typeof value === type) {\n    to[toKey] = value;\n  }\n}\nfunction copyArray(type, from, to, fromKey, toKey) {\n  const array = from[fromKey];\n  if (Array.isArray(array)) {\n    to[toKey] = array.filter((item) => item !== null && typeof item === type);\n  }\n}\nfunction applyMixins(derivedCtor, baseCtors) {\n  baseCtors.forEach((baseCtor) => {\n    Object.getOwnPropertyNames(baseCtor.prototype).forEach((name) => {\n      if (name !== \"constructor\") {\n        Object.defineProperty(derivedCtor.prototype, name, Object.getOwnPropertyDescriptor(baseCtor.prototype, name));\n      }\n    });\n  });\n}\nfunction folderName(url2) {\n  let lastSlashIndex = url2.lastIndexOf(\"/\");\n  if (lastSlashIndex != -1) {\n    url2 = url2.slice(0, lastSlashIndex);\n  }\n  lastSlashIndex = url2.lastIndexOf(\"/\");\n  if (lastSlashIndex !== -1) {\n    url2 = url2.slice(lastSlashIndex + 1);\n  }\n  return url2;\n}\nfunction remove(array, item) {\n  const index = array.indexOf(item);\n  if (index !== -1) {\n    array.splice(index, 1);\n  }\n}\nclass ExpressionManager extends EventEmitter {\n  constructor(settings, options) {\n    super();\n    this.expressions = [];\n    this.reserveExpressionIndex = -1;\n    this.destroyed = false;\n    this.settings = settings;\n    this.tag = `ExpressionManager(${settings.name})`;\n  }\n  init() {\n    this.defaultExpression = this.createExpression({}, void 0);\n    this.currentExpression = this.defaultExpression;\n    this.stopAllExpressions();\n  }\n  loadExpression(index) {\n    return __async(this, null, function* () {\n      if (!this.definitions[index]) {\n        logger.warn(this.tag, `Undefined expression at [${index}]`);\n        return void 0;\n      }\n      if (this.expressions[index] === null) {\n        logger.warn(this.tag, `Cannot set expression at [${index}] because it's already failed in loading.`);\n        return void 0;\n      }\n      if (this.expressions[index]) {\n        return this.expressions[index];\n      }\n      const expression = yield this._loadExpression(index);\n      this.expressions[index] = expression;\n      return expression;\n    });\n  }\n  _loadExpression(index) {\n    throw new Error(\"Not implemented.\");\n  }\n  setRandomExpression() {\n    return __async(this, null, function* () {\n      if (this.definitions.length) {\n        const availableIndices = [];\n        for (let i = 0; i < this.definitions.length; i++) {\n          if (this.expressions[i] !== null && this.expressions[i] !== this.currentExpression && i !== this.reserveExpressionIndex) {\n            availableIndices.push(i);\n          }\n        }\n        if (availableIndices.length) {\n          const index = Math.floor(Math.random() * availableIndices.length);\n          return this.setExpression(index);\n        }\n      }\n      return false;\n    });\n  }\n  resetExpression() {\n    this._setExpression(this.defaultExpression);\n  }\n  restoreExpression() {\n    this._setExpression(this.currentExpression);\n  }\n  setExpression(index) {\n    return __async(this, null, function* () {\n      if (typeof index !== \"number\") {\n        index = this.getExpressionIndex(index);\n      }\n      if (!(index > -1 && index < this.definitions.length)) {\n        return false;\n      }\n      if (index === this.expressions.indexOf(this.currentExpression)) {\n        return false;\n      }\n      this.reserveExpressionIndex = index;\n      const expression = yield this.loadExpression(index);\n      if (!expression || this.reserveExpressionIndex !== index) {\n        return false;\n      }\n      this.reserveExpressionIndex = -1;\n      this.currentExpression = expression;\n      this._setExpression(expression);\n      return true;\n    });\n  }\n  update(model, now) {\n    if (!this.isFinished()) {\n      return this.updateParameters(model, now);\n    }\n    return false;\n  }\n  destroy() {\n    this.destroyed = true;\n    this.emit(\"destroy\");\n    const self = this;\n    self.definitions = void 0;\n    self.expressions = void 0;\n  }\n}\nconst EPSILON = 0.01;\nconst MAX_SPEED = 40 / 7.5;\nconst ACCELERATION_TIME = 1 / (0.15 * 1e3);\nclass FocusController {\n  constructor() {\n    this.targetX = 0;\n    this.targetY = 0;\n    this.x = 0;\n    this.y = 0;\n    this.vx = 0;\n    this.vy = 0;\n  }\n  focus(x, y, instant = false) {\n    this.targetX = clamp(x, -1, 1);\n    this.targetY = clamp(y, -1, 1);\n    if (instant) {\n      this.x = this.targetX;\n      this.y = this.targetY;\n    }\n  }\n  update(dt) {\n    const dx = this.targetX - this.x;\n    const dy = this.targetY - this.y;\n    if (Math.abs(dx) < EPSILON && Math.abs(dy) < EPSILON)\n      return;\n    const d = Math.sqrt(__pow(dx, 2) + __pow(dy, 2));\n    const maxSpeed = MAX_SPEED / (1e3 / dt);\n    let ax = maxSpeed * (dx / d) - this.vx;\n    let ay = maxSpeed * (dy / d) - this.vy;\n    const a = Math.sqrt(__pow(ax, 2) + __pow(ay, 2));\n    const maxA = maxSpeed * ACCELERATION_TIME * dt;\n    if (a > maxA) {\n      ax *= maxA / a;\n      ay *= maxA / a;\n    }\n    this.vx += ax;\n    this.vy += ay;\n    const v = Math.sqrt(__pow(this.vx, 2) + __pow(this.vy, 2));\n    const maxV = 0.5 * (Math.sqrt(__pow(maxA, 2) + 8 * maxA * d) - maxA);\n    if (v > maxV) {\n      this.vx *= maxV / v;\n      this.vy *= maxV / v;\n    }\n    this.x += this.vx;\n    this.y += this.vy;\n  }\n}\nclass ModelSettings {\n  constructor(json) {\n    this.json = json;\n    let url2 = json.url;\n    if (typeof url2 !== \"string\") {\n      throw new TypeError(\"The `url` field in settings JSON must be defined as a string.\");\n    }\n    this.url = url2;\n    this.name = folderName(this.url);\n  }\n  resolveURL(path) {\n    return url.resolve(this.url, path);\n  }\n  replaceFiles(replacer) {\n    this.moc = replacer(this.moc, \"moc\");\n    if (this.pose !== void 0) {\n      this.pose = replacer(this.pose, \"pose\");\n    }\n    if (this.physics !== void 0) {\n      this.physics = replacer(this.physics, \"physics\");\n    }\n    for (let i = 0; i < this.textures.length; i++) {\n      this.textures[i] = replacer(this.textures[i], `textures[${i}]`);\n    }\n  }\n  getDefinedFiles() {\n    const files = [];\n    this.replaceFiles((file) => {\n      files.push(file);\n      return file;\n    });\n    return files;\n  }\n  validateFiles(files) {\n    const assertFileExists = (expectedFile, shouldThrow) => {\n      const actualPath = this.resolveURL(expectedFile);\n      if (!files.includes(actualPath)) {\n        if (shouldThrow) {\n          throw new Error(`File \"${expectedFile}\" is defined in settings, but doesn't exist in given files`);\n        }\n        return false;\n      }\n      return true;\n    };\n    const essentialFiles = [this.moc, ...this.textures];\n    essentialFiles.forEach((texture) => assertFileExists(texture, true));\n    const definedFiles = this.getDefinedFiles();\n    return definedFiles.filter((file) => assertFileExists(file, false));\n  }\n}\nvar MotionPriority = /* @__PURE__ */ ((MotionPriority2) => {\n  MotionPriority2[MotionPriority2[\"NONE\"] = 0] = \"NONE\";\n  MotionPriority2[MotionPriority2[\"IDLE\"] = 1] = \"IDLE\";\n  MotionPriority2[MotionPriority2[\"NORMAL\"] = 2] = \"NORMAL\";\n  MotionPriority2[MotionPriority2[\"FORCE\"] = 3] = \"FORCE\";\n  return MotionPriority2;\n})(MotionPriority || {});\nclass MotionState {\n  constructor() {\n    this.debug = false;\n    this.currentPriority = 0;\n    this.reservePriority = 0;\n  }\n  reserve(group, index, priority) {\n    if (priority <= 0) {\n      logger.log(this.tag, `Cannot start a motion with MotionPriority.NONE.`);\n      return false;\n    }\n    if (group === this.currentGroup && index === this.currentIndex) {\n      logger.log(this.tag, `Motion is already playing.`, this.dump(group, index));\n      return false;\n    }\n    if (group === this.reservedGroup && index === this.reservedIndex || group === this.reservedIdleGroup && index === this.reservedIdleIndex) {\n      logger.log(this.tag, `Motion is already reserved.`, this.dump(group, index));\n      return false;\n    }\n    if (priority === 1) {\n      if (this.currentPriority !== 0) {\n        logger.log(this.tag, `Cannot start idle motion because another motion is playing.`, this.dump(group, index));\n        return false;\n      }\n      if (this.reservedIdleGroup !== void 0) {\n        logger.log(this.tag, `Cannot start idle motion because another idle motion has reserved.`, this.dump(group, index));\n        return false;\n      }\n      this.setReservedIdle(group, index);\n    } else {\n      if (priority < 3) {\n        if (priority <= this.currentPriority) {\n          logger.log(this.tag, \"Cannot start motion because another motion is playing as an equivalent or higher priority.\", this.dump(group, index));\n          return false;\n        }\n        if (priority <= this.reservePriority) {\n          logger.log(this.tag, \"Cannot start motion because another motion has reserved as an equivalent or higher priority.\", this.dump(group, index));\n          return false;\n        }\n      }\n      this.setReserved(group, index, priority);\n    }\n    return true;\n  }\n  start(motion, group, index, priority) {\n    if (priority === 1) {\n      this.setReservedIdle(void 0, void 0);\n      if (this.currentPriority !== 0) {\n        logger.log(this.tag, \"Cannot start idle motion because another motion is playing.\", this.dump(group, index));\n        return false;\n      }\n    } else {\n      if (group !== this.reservedGroup || index !== this.reservedIndex) {\n        logger.log(this.tag, \"Cannot start motion because another motion has taken the place.\", this.dump(group, index));\n        return false;\n      }\n      this.setReserved(void 0, void 0, 0);\n    }\n    if (!motion) {\n      return false;\n    }\n    this.setCurrent(group, index, priority);\n    return true;\n  }\n  complete() {\n    this.setCurrent(void 0, void 0, 0);\n  }\n  setCurrent(group, index, priority) {\n    this.currentPriority = priority;\n    this.currentGroup = group;\n    this.currentIndex = index;\n  }\n  setReserved(group, index, priority) {\n    this.reservePriority = priority;\n    this.reservedGroup = group;\n    this.reservedIndex = index;\n  }\n  setReservedIdle(group, index) {\n    this.reservedIdleGroup = group;\n    this.reservedIdleIndex = index;\n  }\n  isActive(group, index) {\n    return group === this.currentGroup && index === this.currentIndex || group === this.reservedGroup && index === this.reservedIndex || group === this.reservedIdleGroup && index === this.reservedIdleIndex;\n  }\n  reset() {\n    this.setCurrent(void 0, void 0, 0);\n    this.setReserved(void 0, void 0, 0);\n    this.setReservedIdle(void 0, void 0);\n  }\n  shouldRequestIdleMotion() {\n    return this.currentGroup === void 0 && this.reservedIdleGroup === void 0;\n  }\n  shouldOverrideExpression() {\n    return !config.preserveExpressionOnMotion && this.currentPriority > 1;\n  }\n  dump(requestedGroup, requestedIndex) {\n    if (this.debug) {\n      const keys = [\n        \"currentPriority\",\n        \"reservePriority\",\n        \"currentGroup\",\n        \"currentIndex\",\n        \"reservedGroup\",\n        \"reservedIndex\",\n        \"reservedIdleGroup\",\n        \"reservedIdleIndex\"\n      ];\n      return `\n<Requested> group = \"${requestedGroup}\", index = ${requestedIndex}\n` + keys.map((key) => \"[\" + key + \"] \" + this[key]).join(\"\\n\");\n    }\n    return \"\";\n  }\n}\nconst TAG$2 = \"SoundManager\";\nconst VOLUME = 0.5;\nclass SoundManager {\n  static get volume() {\n    return this._volume;\n  }\n  static set volume(value) {\n    this._volume = (value > 1 ? 1 : value < 0 ? 0 : value) || 0;\n    this.audios.forEach((audio) => audio.volume = this._volume);\n  }\n  static add(file, onFinish, onError) {\n    const audio = new Audio(file);\n    audio.volume = this._volume;\n    audio.preload = \"auto\";\n    audio.addEventListener(\"ended\", () => {\n      this.dispose(audio);\n      onFinish == null ? void 0 : onFinish();\n    });\n    audio.addEventListener(\"error\", (e) => {\n      this.dispose(audio);\n      logger.warn(TAG$2, `Error occurred on \"${file}\"`, e.error);\n      onError == null ? void 0 : onError(e.error);\n    });\n    this.audios.push(audio);\n    return audio;\n  }\n  static play(audio) {\n    return new Promise((resolve, reject) => {\n      var _a;\n      (_a = audio.play()) == null ? void 0 : _a.catch((e) => {\n        audio.dispatchEvent(new ErrorEvent(\"error\", { error: e }));\n        reject(e);\n      });\n      if (audio.readyState === audio.HAVE_ENOUGH_DATA) {\n        resolve();\n      } else {\n        audio.addEventListener(\"canplaythrough\", resolve);\n      }\n    });\n  }\n  static dispose(audio) {\n    audio.pause();\n    audio.removeAttribute(\"src\");\n    remove(this.audios, audio);\n  }\n  static destroy() {\n    for (let i = this.audios.length - 1; i >= 0; i--) {\n      this.dispose(this.audios[i]);\n    }\n  }\n}\nSoundManager.audios = [];\nSoundManager._volume = VOLUME;\nvar MotionPreloadStrategy = /* @__PURE__ */ ((MotionPreloadStrategy2) => {\n  MotionPreloadStrategy2[\"ALL\"] = \"ALL\";\n  MotionPreloadStrategy2[\"IDLE\"] = \"IDLE\";\n  MotionPreloadStrategy2[\"NONE\"] = \"NONE\";\n  return MotionPreloadStrategy2;\n})(MotionPreloadStrategy || {});\nclass MotionManager extends EventEmitter {\n  constructor(settings, options) {\n    super();\n    this.motionGroups = {};\n    this.state = new MotionState();\n    this.playing = false;\n    this.destroyed = false;\n    this.settings = settings;\n    this.tag = `MotionManager(${settings.name})`;\n    this.state.tag = this.tag;\n  }\n  init(options) {\n    if (options == null ? void 0 : options.idleMotionGroup) {\n      this.groups.idle = options.idleMotionGroup;\n    }\n    this.setupMotions(options);\n    this.stopAllMotions();\n  }\n  setupMotions(options) {\n    for (const group of Object.keys(this.definitions)) {\n      this.motionGroups[group] = [];\n    }\n    let groups;\n    switch (options == null ? void 0 : options.motionPreload) {\n      case \"NONE\":\n        return;\n      case \"ALL\":\n        groups = Object.keys(this.definitions);\n        break;\n      case \"IDLE\":\n      default:\n        groups = [this.groups.idle];\n        break;\n    }\n    for (const group of groups) {\n      if (this.definitions[group]) {\n        for (let i = 0; i < this.definitions[group].length; i++) {\n          this.loadMotion(group, i).then();\n        }\n      }\n    }\n  }\n  loadMotion(group, index) {\n    return __async(this, null, function* () {\n      var _a;\n      if (!((_a = this.definitions[group]) == null ? void 0 : _a[index])) {\n        logger.warn(this.tag, `Undefined motion at \"${group}\"[${index}]`);\n        return void 0;\n      }\n      if (this.motionGroups[group][index] === null) {\n        logger.warn(this.tag, `Cannot start motion at \"${group}\"[${index}] because it's already failed in loading.`);\n        return void 0;\n      }\n      if (this.motionGroups[group][index]) {\n        return this.motionGroups[group][index];\n      }\n      const motion = yield this._loadMotion(group, index);\n      if (this.destroyed) {\n        return;\n      }\n      this.motionGroups[group][index] = motion != null ? motion : null;\n      return motion;\n    });\n  }\n  _loadMotion(group, index) {\n    throw new Error(\"Not implemented.\");\n  }\n  startMotion(_0, _1) {\n    return __async(this, arguments, function* (group, index, priority = MotionPriority.NORMAL) {\n      var _a;\n      if (!this.state.reserve(group, index, priority)) {\n        return false;\n      }\n      const definition = (_a = this.definitions[group]) == null ? void 0 : _a[index];\n      if (!definition) {\n        return false;\n      }\n      if (this.currentAudio) {\n        SoundManager.dispose(this.currentAudio);\n      }\n      let audio;\n      if (config.sound) {\n        const soundURL = this.getSoundFile(definition);\n        if (soundURL) {\n          try {\n            audio = SoundManager.add(this.settings.resolveURL(soundURL), () => this.currentAudio = void 0, () => this.currentAudio = void 0);\n            this.currentAudio = audio;\n          } catch (e) {\n            logger.warn(this.tag, \"Failed to create audio\", soundURL, e);\n          }\n        }\n      }\n      const motion = yield this.loadMotion(group, index);\n      if (audio) {\n        const readyToPlay = SoundManager.play(audio).catch((e) => logger.warn(this.tag, \"Failed to play audio\", audio.src, e));\n        if (config.motionSync) {\n          yield readyToPlay;\n        }\n      }\n      if (!this.state.start(motion, group, index, priority)) {\n        if (audio) {\n          SoundManager.dispose(audio);\n          this.currentAudio = void 0;\n        }\n        return false;\n      }\n      logger.log(this.tag, \"Start motion:\", this.getMotionName(definition));\n      this.emit(\"motionStart\", group, index, audio);\n      if (this.state.shouldOverrideExpression()) {\n        this.expressionManager && this.expressionManager.resetExpression();\n      }\n      this.playing = true;\n      this._startMotion(motion);\n      return true;\n    });\n  }\n  startRandomMotion(group, priority) {\n    return __async(this, null, function* () {\n      const groupDefs = this.definitions[group];\n      if (groupDefs == null ? void 0 : groupDefs.length) {\n        const availableIndices = [];\n        for (let i = 0; i < groupDefs.length; i++) {\n          if (this.motionGroups[group][i] !== null && !this.state.isActive(group, i)) {\n            availableIndices.push(i);\n          }\n        }\n        if (availableIndices.length) {\n          const index = Math.floor(Math.random() * availableIndices.length);\n          return this.startMotion(group, availableIndices[index], priority);\n        }\n      }\n      return false;\n    });\n  }\n  stopAllMotions() {\n    this._stopAllMotions();\n    this.state.reset();\n    if (this.currentAudio) {\n      SoundManager.dispose(this.currentAudio);\n      this.currentAudio = void 0;\n    }\n  }\n  update(model, now) {\n    var _a;\n    if (this.isFinished()) {\n      if (this.playing) {\n        this.playing = false;\n        this.emit(\"motionFinish\");\n      }\n      if (this.state.shouldOverrideExpression()) {\n        (_a = this.expressionManager) == null ? void 0 : _a.restoreExpression();\n      }\n      this.state.complete();\n      if (this.state.shouldRequestIdleMotion()) {\n        this.startRandomMotion(this.groups.idle, MotionPriority.IDLE);\n      }\n    }\n    return this.updateParameters(model, now);\n  }\n  destroy() {\n    var _a;\n    this.destroyed = true;\n    this.emit(\"destroy\");\n    this.stopAllMotions();\n    (_a = this.expressionManager) == null ? void 0 : _a.destroy();\n    const self = this;\n    self.definitions = void 0;\n    self.motionGroups = void 0;\n  }\n}\nconst tempBounds = { x: 0, y: 0, width: 0, height: 0 };\nclass InternalModel extends EventEmitter {\n  constructor() {\n    super(...arguments);\n    this.focusController = new FocusController();\n    this.originalWidth = 0;\n    this.originalHeight = 0;\n    this.width = 0;\n    this.height = 0;\n    this.localTransform = new Matrix();\n    this.drawingMatrix = new Matrix();\n    this.hitAreas = {};\n    this.textureFlipY = false;\n    this.viewport = [0, 0, 0, 0];\n    this.destroyed = false;\n  }\n  init() {\n    this.setupLayout();\n    this.setupHitAreas();\n  }\n  setupLayout() {\n    const self = this;\n    const size = this.getSize();\n    self.originalWidth = size[0];\n    self.originalHeight = size[1];\n    const layout = Object.assign({\n      width: LOGICAL_WIDTH,\n      height: LOGICAL_HEIGHT\n    }, this.getLayout());\n    this.localTransform.scale(layout.width / LOGICAL_WIDTH, layout.height / LOGICAL_HEIGHT);\n    self.width = this.originalWidth * this.localTransform.a;\n    self.height = this.originalHeight * this.localTransform.d;\n    const offsetX = layout.x !== void 0 && layout.x - layout.width / 2 || layout.centerX !== void 0 && layout.centerX || layout.left !== void 0 && layout.left - layout.width / 2 || layout.right !== void 0 && layout.right + layout.width / 2 || 0;\n    const offsetY = layout.y !== void 0 && layout.y - layout.height / 2 || layout.centerY !== void 0 && layout.centerY || layout.top !== void 0 && layout.top - layout.height / 2 || layout.bottom !== void 0 && layout.bottom + layout.height / 2 || 0;\n    this.localTransform.translate(this.width * offsetX, -this.height * offsetY);\n  }\n  setupHitAreas() {\n    const definitions = this.getHitAreaDefs().filter((hitArea) => hitArea.index >= 0);\n    for (const def of definitions) {\n      this.hitAreas[def.name] = def;\n    }\n  }\n  hitTest(x, y) {\n    return Object.keys(this.hitAreas).filter((hitAreaName) => this.isHit(hitAreaName, x, y));\n  }\n  isHit(hitAreaName, x, y) {\n    if (!this.hitAreas[hitAreaName]) {\n      return false;\n    }\n    const drawIndex = this.hitAreas[hitAreaName].index;\n    const bounds = this.getDrawableBounds(drawIndex, tempBounds);\n    return bounds.x <= x && x <= bounds.x + bounds.width && bounds.y <= y && y <= bounds.y + bounds.height;\n  }\n  getDrawableBounds(index, bounds) {\n    const vertices = this.getDrawableVertices(index);\n    let left = vertices[0];\n    let right = vertices[0];\n    let top = vertices[1];\n    let bottom = vertices[1];\n    for (let i = 0; i < vertices.length; i += 2) {\n      const vx = vertices[i];\n      const vy = vertices[i + 1];\n      left = Math.min(vx, left);\n      right = Math.max(vx, right);\n      top = Math.min(vy, top);\n      bottom = Math.max(vy, bottom);\n    }\n    bounds != null ? bounds : bounds = {};\n    bounds.x = left;\n    bounds.y = top;\n    bounds.width = right - left;\n    bounds.height = bottom - top;\n    return bounds;\n  }\n  updateTransform(transform) {\n    this.drawingMatrix.copyFrom(transform).append(this.localTransform);\n  }\n  update(dt, now) {\n    this.focusController.update(dt);\n  }\n  destroy() {\n    this.destroyed = true;\n    this.emit(\"destroy\");\n    this.motionManager.destroy();\n    this.motionManager = void 0;\n  }\n}\nconst TAG$1 = \"XHRLoader\";\nclass NetworkError extends Error {\n  constructor(message, url2, status, aborted = false) {\n    super(message);\n    this.url = url2;\n    this.status = status;\n    this.aborted = aborted;\n  }\n}\nconst _XHRLoader = class {\n  static createXHR(target, url2, type, onload, onerror) {\n    const xhr = new XMLHttpRequest();\n    _XHRLoader.allXhrSet.add(xhr);\n    if (target) {\n      let xhrSet = _XHRLoader.xhrMap.get(target);\n      if (!xhrSet) {\n        xhrSet = /* @__PURE__ */ new Set([xhr]);\n        _XHRLoader.xhrMap.set(target, xhrSet);\n      } else {\n        xhrSet.add(xhr);\n      }\n      if (!target.listeners(\"destroy\").includes(_XHRLoader.cancelXHRs)) {\n        target.once(\"destroy\", _XHRLoader.cancelXHRs);\n      }\n    }\n    xhr.open(\"GET\", url2);\n    xhr.responseType = type;\n    xhr.onload = () => {\n      if ((xhr.status === 200 || xhr.status === 0) && xhr.response) {\n        onload(xhr.response);\n      } else {\n        xhr.onerror();\n      }\n    };\n    xhr.onerror = () => {\n      logger.warn(TAG$1, `Failed to load resource as ${xhr.responseType} (Status ${xhr.status}): ${url2}`);\n      onerror(new NetworkError(\"Network error.\", url2, xhr.status));\n    };\n    xhr.onabort = () => onerror(new NetworkError(\"Aborted.\", url2, xhr.status, true));\n    xhr.onloadend = () => {\n      var _a;\n      _XHRLoader.allXhrSet.delete(xhr);\n      if (target) {\n        (_a = _XHRLoader.xhrMap.get(target)) == null ? void 0 : _a.delete(xhr);\n      }\n    };\n    return xhr;\n  }\n  static cancelXHRs() {\n    var _a;\n    (_a = _XHRLoader.xhrMap.get(this)) == null ? void 0 : _a.forEach((xhr) => {\n      xhr.abort();\n      _XHRLoader.allXhrSet.delete(xhr);\n    });\n    _XHRLoader.xhrMap.delete(this);\n  }\n  static release() {\n    _XHRLoader.allXhrSet.forEach((xhr) => xhr.abort());\n    _XHRLoader.allXhrSet.clear();\n    _XHRLoader.xhrMap = /* @__PURE__ */ new WeakMap();\n  }\n};\nlet XHRLoader = _XHRLoader;\nXHRLoader.xhrMap = /* @__PURE__ */ new WeakMap();\nXHRLoader.allXhrSet = /* @__PURE__ */ new Set();\nXHRLoader.loader = (context, next) => {\n  return new Promise((resolve, reject) => {\n    const xhr = _XHRLoader.createXHR(context.target, context.settings ? context.settings.resolveURL(context.url) : context.url, context.type, (data) => {\n      context.result = data;\n      resolve();\n    }, reject);\n    xhr.send();\n  });\n};\nfunction runMiddlewares(middleware, context) {\n  let index = -1;\n  return dispatch(0);\n  function dispatch(i, err) {\n    if (err)\n      return Promise.reject(err);\n    if (i <= index)\n      return Promise.reject(new Error(\"next() called multiple times\"));\n    index = i;\n    const fn = middleware[i];\n    if (!fn)\n      return Promise.resolve();\n    try {\n      return Promise.resolve(fn(context, dispatch.bind(null, i + 1)));\n    } catch (err2) {\n      return Promise.reject(err2);\n    }\n  }\n}\nclass Live2DLoader {\n  static load(context) {\n    return runMiddlewares(this.middlewares, context).then(() => context.result);\n  }\n}\nLive2DLoader.middlewares = [XHRLoader.loader];\nfunction createTexture(url2, options = {}) {\n  var _a;\n  const textureOptions = { resourceOptions: { crossorigin: options.crossOrigin } };\n  if (Texture.fromURL) {\n    return Texture.fromURL(url2, textureOptions).catch((e) => {\n      if (e instanceof Error) {\n        throw e;\n      }\n      const err = new Error(\"Texture loading error\");\n      err.event = e;\n      throw err;\n    });\n  }\n  textureOptions.resourceOptions.autoLoad = false;\n  const texture = Texture.from(url2, textureOptions);\n  if (texture.baseTexture.valid) {\n    return Promise.resolve(texture);\n  }\n  const resource = texture.baseTexture.resource;\n  (_a = resource._live2d_load) != null ? _a : resource._live2d_load = new Promise((resolve, reject) => {\n    const errorHandler = (event) => {\n      resource.source.removeEventListener(\"error\", errorHandler);\n      const err = new Error(\"Texture loading error\");\n      err.event = event;\n      reject(err);\n    };\n    resource.source.addEventListener(\"error\", errorHandler);\n    resource.load().then(() => resolve(texture)).catch(errorHandler);\n  });\n  return resource._live2d_load;\n}\nconst TAG = \"Live2DFactory\";\nconst urlToJSON = (context, next) => __async(void 0, null, function* () {\n  if (typeof context.source === \"string\") {\n    const data = yield Live2DLoader.load({\n      url: context.source,\n      type: \"json\",\n      target: context.live2dModel\n    });\n    data.url = context.source;\n    context.source = data;\n    context.live2dModel.emit(\"settingsJSONLoaded\", data);\n  }\n  return next();\n});\nconst jsonToSettings = (context, next) => __async(void 0, null, function* () {\n  if (context.source instanceof ModelSettings) {\n    context.settings = context.source;\n    return next();\n  } else if (typeof context.source === \"object\") {\n    const runtime = Live2DFactory.findRuntime(context.source);\n    if (runtime) {\n      const settings = runtime.createModelSettings(context.source);\n      context.settings = settings;\n      context.live2dModel.emit(\"settingsLoaded\", settings);\n      return next();\n    }\n  }\n  throw new TypeError(\"Unknown settings format.\");\n});\nconst waitUntilReady = (context, next) => {\n  if (context.settings) {\n    const runtime = Live2DFactory.findRuntime(context.settings);\n    if (runtime) {\n      return runtime.ready().then(next);\n    }\n  }\n  return next();\n};\nconst setupOptionals = (context, next) => __async(void 0, null, function* () {\n  yield next();\n  const internalModel = context.internalModel;\n  if (internalModel) {\n    const settings = context.settings;\n    const runtime = Live2DFactory.findRuntime(settings);\n    if (runtime) {\n      const tasks = [];\n      if (settings.pose) {\n        tasks.push(Live2DLoader.load({\n          settings,\n          url: settings.pose,\n          type: \"json\",\n          target: internalModel\n        }).then((data) => {\n          internalModel.pose = runtime.createPose(internalModel.coreModel, data);\n          context.live2dModel.emit(\"poseLoaded\", internalModel.pose);\n        }).catch((e) => {\n          context.live2dModel.emit(\"poseLoadError\", e);\n          logger.warn(TAG, \"Failed to load pose.\", e);\n        }));\n      }\n      if (settings.physics) {\n        tasks.push(Live2DLoader.load({\n          settings,\n          url: settings.physics,\n          type: \"json\",\n          target: internalModel\n        }).then((data) => {\n          internalModel.physics = runtime.createPhysics(internalModel.coreModel, data);\n          context.live2dModel.emit(\"physicsLoaded\", internalModel.physics);\n        }).catch((e) => {\n          context.live2dModel.emit(\"physicsLoadError\", e);\n          logger.warn(TAG, \"Failed to load physics.\", e);\n        }));\n      }\n      if (tasks.length) {\n        yield Promise.all(tasks);\n      }\n    }\n  }\n});\nconst setupEssentials = (context, next) => __async(void 0, null, function* () {\n  if (context.settings) {\n    const live2DModel = context.live2dModel;\n    const textureLoadings = context.settings.textures.map((tex) => {\n      const url2 = context.settings.resolveURL(tex);\n      return createTexture(url2, { crossOrigin: context.options.crossOrigin });\n    });\n    yield next();\n    if (context.internalModel) {\n      live2DModel.internalModel = context.internalModel;\n      live2DModel.emit(\"modelLoaded\", context.internalModel);\n    } else {\n      throw new TypeError(\"Missing internal model.\");\n    }\n    live2DModel.textures = yield Promise.all(textureLoadings);\n    live2DModel.emit(\"textureLoaded\", live2DModel.textures);\n  } else {\n    throw new TypeError(\"Missing settings.\");\n  }\n});\nconst createInternalModel = (context, next) => __async(void 0, null, function* () {\n  const settings = context.settings;\n  if (settings instanceof ModelSettings) {\n    const runtime = Live2DFactory.findRuntime(settings);\n    if (!runtime) {\n      throw new TypeError(\"Unknown model settings.\");\n    }\n    const modelData = yield Live2DLoader.load({\n      settings,\n      url: settings.moc,\n      type: \"arraybuffer\",\n      target: context.live2dModel\n    });\n    if (!runtime.isValidMoc(modelData)) {\n      throw new Error(\"Invalid moc data\");\n    }\n    const coreModel = runtime.createCoreModel(modelData);\n    context.internalModel = runtime.createInternalModel(coreModel, settings, context.options);\n    return next();\n  }\n  throw new TypeError(\"Missing settings.\");\n});\nconst _Live2DFactory = class {\n  static registerRuntime(runtime) {\n    _Live2DFactory.runtimes.push(runtime);\n    _Live2DFactory.runtimes.sort((a, b) => b.version - a.version);\n  }\n  static findRuntime(source) {\n    for (const runtime of _Live2DFactory.runtimes) {\n      if (runtime.test(source)) {\n        return runtime;\n      }\n    }\n  }\n  static setupLive2DModel(live2dModel, source, options) {\n    return __async(this, null, function* () {\n      const textureLoaded = new Promise((resolve) => live2dModel.once(\"textureLoaded\", resolve));\n      const modelLoaded = new Promise((resolve) => live2dModel.once(\"modelLoaded\", resolve));\n      const readyEventEmitted = Promise.all([textureLoaded, modelLoaded]).then(() => live2dModel.emit(\"ready\"));\n      yield runMiddlewares(_Live2DFactory.live2DModelMiddlewares, {\n        live2dModel,\n        source,\n        options: options || {}\n      });\n      yield readyEventEmitted;\n      live2dModel.emit(\"load\");\n    });\n  }\n  static loadMotion(motionManager, group, index) {\n    var _a, _b;\n    const handleError = (e) => motionManager.emit(\"motionLoadError\", group, index, e);\n    try {\n      const definition = (_a = motionManager.definitions[group]) == null ? void 0 : _a[index];\n      if (!definition) {\n        return Promise.resolve(void 0);\n      }\n      if (!motionManager.listeners(\"destroy\").includes(_Live2DFactory.releaseTasks)) {\n        motionManager.once(\"destroy\", _Live2DFactory.releaseTasks);\n      }\n      let tasks = _Live2DFactory.motionTasksMap.get(motionManager);\n      if (!tasks) {\n        tasks = {};\n        _Live2DFactory.motionTasksMap.set(motionManager, tasks);\n      }\n      let taskGroup = tasks[group];\n      if (!taskGroup) {\n        taskGroup = [];\n        tasks[group] = taskGroup;\n      }\n      const path = motionManager.getMotionFile(definition);\n      (_b = taskGroup[index]) != null ? _b : taskGroup[index] = Live2DLoader.load({\n        url: path,\n        settings: motionManager.settings,\n        type: motionManager.motionDataType,\n        target: motionManager\n      }).then((data) => {\n        var _a2;\n        const taskGroup2 = (_a2 = _Live2DFactory.motionTasksMap.get(motionManager)) == null ? void 0 : _a2[group];\n        if (taskGroup2) {\n          delete taskGroup2[index];\n        }\n        const motion = motionManager.createMotion(data, group, definition);\n        motionManager.emit(\"motionLoaded\", group, index, motion);\n        return motion;\n      }).catch((e) => {\n        logger.warn(motionManager.tag, `Failed to load motion: ${path}\n`, e);\n        handleError(e);\n      });\n      return taskGroup[index];\n    } catch (e) {\n      logger.warn(motionManager.tag, `Failed to load motion at \"${group}\"[${index}]\n`, e);\n      handleError(e);\n    }\n    return Promise.resolve(void 0);\n  }\n  static loadExpression(expressionManager, index) {\n    var _a;\n    const handleError = (e) => expressionManager.emit(\"expressionLoadError\", index, e);\n    try {\n      const definition = expressionManager.definitions[index];\n      if (!definition) {\n        return Promise.resolve(void 0);\n      }\n      if (!expressionManager.listeners(\"destroy\").includes(_Live2DFactory.releaseTasks)) {\n        expressionManager.once(\"destroy\", _Live2DFactory.releaseTasks);\n      }\n      let tasks = _Live2DFactory.expressionTasksMap.get(expressionManager);\n      if (!tasks) {\n        tasks = [];\n        _Live2DFactory.expressionTasksMap.set(expressionManager, tasks);\n      }\n      const path = expressionManager.getExpressionFile(definition);\n      (_a = tasks[index]) != null ? _a : tasks[index] = Live2DLoader.load({\n        url: path,\n        settings: expressionManager.settings,\n        type: \"json\",\n        target: expressionManager\n      }).then((data) => {\n        const tasks2 = _Live2DFactory.expressionTasksMap.get(expressionManager);\n        if (tasks2) {\n          delete tasks2[index];\n        }\n        const expression = expressionManager.createExpression(data, definition);\n        expressionManager.emit(\"expressionLoaded\", index, expression);\n        return expression;\n      }).catch((e) => {\n        logger.warn(expressionManager.tag, `Failed to load expression: ${path}\n`, e);\n        handleError(e);\n      });\n      return tasks[index];\n    } catch (e) {\n      logger.warn(expressionManager.tag, `Failed to load expression at [${index}]\n`, e);\n      handleError(e);\n    }\n    return Promise.resolve(void 0);\n  }\n  static releaseTasks() {\n    if (this instanceof MotionManager) {\n      _Live2DFactory.motionTasksMap.delete(this);\n    } else {\n      _Live2DFactory.expressionTasksMap.delete(this);\n    }\n  }\n};\nlet Live2DFactory = _Live2DFactory;\nLive2DFactory.runtimes = [];\nLive2DFactory.urlToJSON = urlToJSON;\nLive2DFactory.jsonToSettings = jsonToSettings;\nLive2DFactory.waitUntilReady = waitUntilReady;\nLive2DFactory.setupOptionals = setupOptionals;\nLive2DFactory.setupEssentials = setupEssentials;\nLive2DFactory.createInternalModel = createInternalModel;\nLive2DFactory.live2DModelMiddlewares = [\n  urlToJSON,\n  jsonToSettings,\n  waitUntilReady,\n  setupOptionals,\n  setupEssentials,\n  createInternalModel\n];\nLive2DFactory.motionTasksMap = /* @__PURE__ */ new WeakMap();\nLive2DFactory.expressionTasksMap = /* @__PURE__ */ new WeakMap();\nMotionManager.prototype[\"_loadMotion\"] = function(group, index) {\n  return Live2DFactory.loadMotion(this, group, index);\n};\nExpressionManager.prototype[\"_loadExpression\"] = function(index) {\n  return Live2DFactory.loadExpression(this, index);\n};\nclass InteractionMixin {\n  constructor() {\n    this._autoInteract = false;\n  }\n  get autoInteract() {\n    return this._autoInteract;\n  }\n  set autoInteract(autoInteract) {\n    if (autoInteract !== this._autoInteract) {\n      if (autoInteract) {\n        this.on(\"pointertap\", onTap, this);\n      } else {\n        this.off(\"pointertap\", onTap, this);\n      }\n      this._autoInteract = autoInteract;\n    }\n  }\n  registerInteraction(manager) {\n    if (manager !== this.interactionManager) {\n      this.unregisterInteraction();\n      if (this._autoInteract && manager) {\n        this.interactionManager = manager;\n        manager.on(\"pointermove\", onPointerMove, this);\n      }\n    }\n  }\n  unregisterInteraction() {\n    var _a;\n    if (this.interactionManager) {\n      (_a = this.interactionManager) == null ? void 0 : _a.off(\"pointermove\", onPointerMove, this);\n      this.interactionManager = void 0;\n    }\n  }\n}\nfunction onTap(event) {\n  this.tap(event.data.global.x, event.data.global.y);\n}\nfunction onPointerMove(event) {\n  this.focus(event.data.global.x, event.data.global.y);\n}\nclass Live2DTransform extends Transform {\n}\nconst tempPoint = new Point();\nconst tempMatrix$1 = new Matrix();\nlet tickerRef;\nclass Live2DModel extends Container {\n  constructor(options) {\n    super();\n    this.tag = \"Live2DModel(uninitialized)\";\n    this.textures = [];\n    this.transform = new Live2DTransform();\n    this.anchor = new ObservablePoint(this.onAnchorChange, this, 0, 0);\n    this.glContextID = -1;\n    this.elapsedTime = performance.now();\n    this.deltaTime = 0;\n    this._autoUpdate = false;\n    this.once(\"modelLoaded\", () => this.init(options));\n  }\n  static from(source, options) {\n    const model = new this(options);\n    return Live2DFactory.setupLive2DModel(model, source, options).then(() => model);\n  }\n  static fromSync(source, options) {\n    const model = new this(options);\n    Live2DFactory.setupLive2DModel(model, source, options).then(options == null ? void 0 : options.onLoad).catch(options == null ? void 0 : options.onError);\n    return model;\n  }\n  static registerTicker(tickerClass) {\n    tickerRef = tickerClass;\n  }\n  get autoUpdate() {\n    return this._autoUpdate;\n  }\n  set autoUpdate(autoUpdate) {\n    var _a;\n    tickerRef || (tickerRef = (_a = window.PIXI) == null ? void 0 : _a.Ticker);\n    if (autoUpdate) {\n      if (!this._destroyed) {\n        if (tickerRef) {\n          tickerRef.shared.add(this.onTickerUpdate, this);\n          this._autoUpdate = true;\n        } else {\n          logger.warn(this.tag, \"No Ticker registered, please call Live2DModel.registerTicker(Ticker).\");\n        }\n      }\n    } else {\n      tickerRef == null ? void 0 : tickerRef.shared.remove(this.onTickerUpdate, this);\n      this._autoUpdate = false;\n    }\n  }\n  init(options) {\n    this.tag = `Live2DModel(${this.internalModel.settings.name})`;\n    const _options = Object.assign({\n      autoUpdate: true,\n      autoInteract: true\n    }, options);\n    if (_options.autoInteract) {\n      this.interactive = true;\n    }\n    this.autoInteract = _options.autoInteract;\n    this.autoUpdate = _options.autoUpdate;\n  }\n  onAnchorChange() {\n    this.pivot.set(this.anchor.x * this.internalModel.width, this.anchor.y * this.internalModel.height);\n  }\n  motion(group, index, priority) {\n    return index === void 0 ? this.internalModel.motionManager.startRandomMotion(group, priority) : this.internalModel.motionManager.startMotion(group, index, priority);\n  }\n  expression(id) {\n    if (this.internalModel.motionManager.expressionManager) {\n      return id === void 0 ? this.internalModel.motionManager.expressionManager.setRandomExpression() : this.internalModel.motionManager.expressionManager.setExpression(id);\n    }\n    return Promise.resolve(false);\n  }\n  focus(x, y, instant = false) {\n    tempPoint.x = x;\n    tempPoint.y = y;\n    this.toModelPosition(tempPoint, tempPoint, true);\n    let tx = tempPoint.x / this.internalModel.originalWidth * 2 - 1;\n    let ty = tempPoint.y / this.internalModel.originalHeight * 2 - 1;\n    let radian = Math.atan2(ty, tx);\n    this.internalModel.focusController.focus(Math.cos(radian), -Math.sin(radian), instant);\n  }\n  tap(x, y) {\n    const hitAreaNames = this.hitTest(x, y);\n    if (hitAreaNames.length) {\n      logger.log(this.tag, `Hit`, hitAreaNames);\n      this.emit(\"hit\", hitAreaNames);\n    }\n  }\n  hitTest(x, y) {\n    tempPoint.x = x;\n    tempPoint.y = y;\n    this.toModelPosition(tempPoint, tempPoint);\n    return this.internalModel.hitTest(tempPoint.x, tempPoint.y);\n  }\n  toModelPosition(position, result = position.clone(), skipUpdate) {\n    if (!skipUpdate) {\n      this._recursivePostUpdateTransform();\n      if (!this.parent) {\n        this.parent = this._tempDisplayObjectParent;\n        this.displayObjectUpdateTransform();\n        this.parent = null;\n      } else {\n        this.displayObjectUpdateTransform();\n      }\n    }\n    this.transform.worldTransform.applyInverse(position, result);\n    this.internalModel.localTransform.applyInverse(result, result);\n    return result;\n  }\n  containsPoint(point) {\n    return this.getBounds(true).contains(point.x, point.y);\n  }\n  _calculateBounds() {\n    this._bounds.addFrame(this.transform, 0, 0, this.internalModel.width, this.internalModel.height);\n  }\n  onTickerUpdate() {\n    this.update(tickerRef.shared.deltaMS);\n  }\n  update(dt) {\n    this.deltaTime += dt;\n    this.elapsedTime += dt;\n  }\n  _render(renderer) {\n    this.registerInteraction(renderer.plugins.interaction);\n    renderer.batch.reset();\n    renderer.geometry.reset();\n    renderer.shader.reset();\n    renderer.state.reset();\n    let shouldUpdateTexture = false;\n    if (this.glContextID !== renderer.CONTEXT_UID) {\n      this.glContextID = renderer.CONTEXT_UID;\n      this.internalModel.updateWebGLContext(renderer.gl, this.glContextID);\n      shouldUpdateTexture = true;\n    }\n    for (let i = 0; i < this.textures.length; i++) {\n      const texture = this.textures[i];\n      if (!texture.valid) {\n        continue;\n      }\n      if (shouldUpdateTexture || !texture.baseTexture._glTextures[this.glContextID]) {\n        renderer.gl.pixelStorei(WebGLRenderingContext.UNPACK_FLIP_Y_WEBGL, this.internalModel.textureFlipY);\n        renderer.texture.bind(texture.baseTexture, 0);\n      }\n      this.internalModel.bindTexture(i, texture.baseTexture._glTextures[this.glContextID].texture);\n      texture.baseTexture.touched = renderer.textureGC.count;\n    }\n    const viewport = renderer.framebuffer.viewport;\n    this.internalModel.viewport = [viewport.x, viewport.y, viewport.width, viewport.height];\n    if (this.deltaTime) {\n      this.internalModel.update(this.deltaTime, this.elapsedTime);\n      this.deltaTime = 0;\n    }\n    const internalTransform = tempMatrix$1.copyFrom(renderer.globalUniforms.uniforms.projectionMatrix).append(this.worldTransform);\n    this.internalModel.updateTransform(internalTransform);\n    this.internalModel.draw(renderer.gl);\n    renderer.state.reset();\n    renderer.texture.reset();\n  }\n  destroy(options) {\n    this.emit(\"destroy\");\n    this.autoUpdate = false;\n    this.unregisterInteraction();\n    if (options == null ? void 0 : options.texture) {\n      this.textures.forEach((texture) => texture.destroy(options.baseTexture));\n    }\n    this.internalModel.destroy();\n    super.destroy(options);\n  }\n}\napplyMixins(Live2DModel, [InteractionMixin]);\nconst _FileLoader = class {\n  static resolveURL(settingsURL, filePath) {\n    var _a;\n    const resolved = (_a = _FileLoader.filesMap[settingsURL]) == null ? void 0 : _a[filePath];\n    if (resolved === void 0) {\n      throw new Error(\"Cannot find this file from uploaded files: \" + filePath);\n    }\n    return resolved;\n  }\n  static upload(files, settings) {\n    return __async(this, null, function* () {\n      const fileMap = {};\n      for (const definedFile of settings.getDefinedFiles()) {\n        const actualPath = decodeURI(url.resolve(settings.url, definedFile));\n        const actualFile = files.find((file) => file.webkitRelativePath === actualPath);\n        if (actualFile) {\n          fileMap[definedFile] = URL.createObjectURL(actualFile);\n        }\n      }\n      _FileLoader.filesMap[settings._objectURL] = fileMap;\n    });\n  }\n  static createSettings(files) {\n    return __async(this, null, function* () {\n      const settingsFile = files.find((file) => file.name.endsWith(\"model.json\") || file.name.endsWith(\"model3.json\"));\n      if (!settingsFile) {\n        throw new TypeError(\"Settings file not found\");\n      }\n      const settingsText = yield _FileLoader.readText(settingsFile);\n      const settingsJSON = JSON.parse(settingsText);\n      settingsJSON.url = settingsFile.webkitRelativePath;\n      const runtime = Live2DFactory.findRuntime(settingsJSON);\n      if (!runtime) {\n        throw new Error(\"Unknown settings JSON\");\n      }\n      const settings = runtime.createModelSettings(settingsJSON);\n      settings._objectURL = URL.createObjectURL(settingsFile);\n      return settings;\n    });\n  }\n  static readText(file) {\n    return __async(this, null, function* () {\n      return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = () => resolve(reader.result);\n        reader.onerror = reject;\n        reader.readAsText(file, \"utf8\");\n      });\n    });\n  }\n};\nlet FileLoader = _FileLoader;\nFileLoader.filesMap = {};\nFileLoader.factory = (context, next) => __async(void 0, null, function* () {\n  if (Array.isArray(context.source) && context.source[0] instanceof File) {\n    const files = context.source;\n    let settings = files.settings;\n    if (!settings) {\n      settings = yield _FileLoader.createSettings(files);\n    } else if (!settings._objectURL) {\n      throw new Error('\"_objectURL\" must be specified in ModelSettings');\n    }\n    settings.validateFiles(files.map((file) => encodeURI(file.webkitRelativePath)));\n    yield _FileLoader.upload(files, settings);\n    settings.resolveURL = function(url2) {\n      return _FileLoader.resolveURL(this._objectURL, url2);\n    };\n    context.source = settings;\n    context.live2dModel.once(\"modelLoaded\", (internalModel) => {\n      internalModel.once(\"destroy\", function() {\n        const objectURL = this.settings._objectURL;\n        URL.revokeObjectURL(objectURL);\n        if (_FileLoader.filesMap[objectURL]) {\n          for (const resourceObjectURL of Object.values(_FileLoader.filesMap[objectURL])) {\n            URL.revokeObjectURL(resourceObjectURL);\n          }\n        }\n        delete _FileLoader.filesMap[objectURL];\n      });\n    });\n  }\n  return next();\n});\nLive2DFactory.live2DModelMiddlewares.unshift(FileLoader.factory);\nconst _ZipLoader = class {\n  static unzip(reader, settings) {\n    return __async(this, null, function* () {\n      const filePaths = yield _ZipLoader.getFilePaths(reader);\n      const requiredFilePaths = [];\n      for (const definedFile of settings.getDefinedFiles()) {\n        const actualPath = decodeURI(url.resolve(settings.url, definedFile));\n        if (filePaths.includes(actualPath)) {\n          requiredFilePaths.push(actualPath);\n        }\n      }\n      const files = yield _ZipLoader.getFiles(reader, requiredFilePaths);\n      for (let i = 0; i < files.length; i++) {\n        const path = requiredFilePaths[i];\n        const file = files[i];\n        Object.defineProperty(file, \"webkitRelativePath\", {\n          value: path\n        });\n      }\n      return files;\n    });\n  }\n  static createSettings(reader) {\n    return __async(this, null, function* () {\n      const filePaths = yield _ZipLoader.getFilePaths(reader);\n      const settingsFilePath = filePaths.find((path) => path.endsWith(\"model.json\") || path.endsWith(\"model3.json\"));\n      if (!settingsFilePath) {\n        throw new Error(\"Settings file not found\");\n      }\n      const settingsText = yield _ZipLoader.readText(reader, settingsFilePath);\n      if (!settingsText) {\n        throw new Error(\"Empty settings file: \" + settingsFilePath);\n      }\n      const settingsJSON = JSON.parse(settingsText);\n      settingsJSON.url = settingsFilePath;\n      const runtime = Live2DFactory.findRuntime(settingsJSON);\n      if (!runtime) {\n        throw new Error(\"Unknown settings JSON\");\n      }\n      return runtime.createModelSettings(settingsJSON);\n    });\n  }\n  static zipReader(data, url2) {\n    return __async(this, null, function* () {\n      throw new Error(\"Not implemented\");\n    });\n  }\n  static getFilePaths(reader) {\n    return __async(this, null, function* () {\n      throw new Error(\"Not implemented\");\n    });\n  }\n  static getFiles(reader, paths) {\n    return __async(this, null, function* () {\n      throw new Error(\"Not implemented\");\n    });\n  }\n  static readText(reader, path) {\n    return __async(this, null, function* () {\n      throw new Error(\"Not implemented\");\n    });\n  }\n  static releaseReader(reader) {\n  }\n};\nlet ZipLoader = _ZipLoader;\nZipLoader.ZIP_PROTOCOL = \"zip://\";\nZipLoader.uid = 0;\nZipLoader.factory = (context, next) => __async(void 0, null, function* () {\n  const source = context.source;\n  let sourceURL;\n  let zipBlob;\n  let settings;\n  if (typeof source === \"string\" && (source.endsWith(\".zip\") || source.startsWith(_ZipLoader.ZIP_PROTOCOL))) {\n    if (source.startsWith(_ZipLoader.ZIP_PROTOCOL)) {\n      sourceURL = source.slice(_ZipLoader.ZIP_PROTOCOL.length);\n    } else {\n      sourceURL = source;\n    }\n    zipBlob = yield Live2DLoader.load({\n      url: sourceURL,\n      type: \"blob\",\n      target: context.live2dModel\n    });\n  } else if (Array.isArray(source) && source.length === 1 && source[0] instanceof File && source[0].name.endsWith(\".zip\")) {\n    zipBlob = source[0];\n    sourceURL = URL.createObjectURL(zipBlob);\n    settings = source.settings;\n  }\n  if (zipBlob) {\n    if (!zipBlob.size) {\n      throw new Error(\"Empty zip file\");\n    }\n    const reader = yield _ZipLoader.zipReader(zipBlob, sourceURL);\n    if (!settings) {\n      settings = yield _ZipLoader.createSettings(reader);\n    }\n    settings._objectURL = _ZipLoader.ZIP_PROTOCOL + _ZipLoader.uid + \"/\" + settings.url;\n    const files = yield _ZipLoader.unzip(reader, settings);\n    files.settings = settings;\n    context.source = files;\n    if (sourceURL.startsWith(\"blob:\")) {\n      context.live2dModel.once(\"modelLoaded\", (internalModel) => {\n        internalModel.once(\"destroy\", function() {\n          URL.revokeObjectURL(sourceURL);\n        });\n      });\n    }\n    _ZipLoader.releaseReader(reader);\n  }\n  return next();\n});\nLive2DFactory.live2DModelMiddlewares.unshift(ZipLoader.factory);\nif (!window.Live2DCubismCore) {\n  throw new Error(\"Could not find Cubism 4 runtime. This plugin requires live2dcubismcore.js to be loaded.\");\n}\nclass Cubism4ExpressionManager extends ExpressionManager {\n  constructor(settings, options) {\n    var _a;\n    super(settings, options);\n    this.queueManager = new CubismMotionQueueManager();\n    this.definitions = (_a = settings.expressions) != null ? _a : [];\n    this.init();\n  }\n  isFinished() {\n    return this.queueManager.isFinished();\n  }\n  getExpressionIndex(name) {\n    return this.definitions.findIndex((def) => def.Name === name);\n  }\n  getExpressionFile(definition) {\n    return definition.File;\n  }\n  createExpression(data, definition) {\n    return CubismExpressionMotion.create(data);\n  }\n  _setExpression(motion) {\n    return this.queueManager.startMotion(motion, false, performance.now());\n  }\n  stopAllExpressions() {\n    this.queueManager.stopAllMotions();\n  }\n  updateParameters(model, now) {\n    return this.queueManager.doUpdateMotion(model, now);\n  }\n}\nclass Cubism4ModelSettings extends ModelSettings {\n  constructor(json) {\n    super(json);\n    if (!Cubism4ModelSettings.isValidJSON(json)) {\n      throw new TypeError(\"Invalid JSON.\");\n    }\n    Object.assign(this, new CubismModelSettingsJson(json));\n  }\n  static isValidJSON(json) {\n    var _a;\n    return !!(json == null ? void 0 : json.FileReferences) && typeof json.FileReferences.Moc === \"string\" && ((_a = json.FileReferences.Textures) == null ? void 0 : _a.length) > 0 && json.FileReferences.Textures.every((item) => typeof item === \"string\");\n  }\n  replaceFiles(replace) {\n    super.replaceFiles(replace);\n    if (this.motions) {\n      for (const [group, motions] of Object.entries(this.motions)) {\n        for (let i = 0; i < motions.length; i++) {\n          motions[i].File = replace(motions[i].File, `motions.${group}[${i}].File`);\n          if (motions[i].Sound !== void 0) {\n            motions[i].Sound = replace(motions[i].Sound, `motions.${group}[${i}].Sound`);\n          }\n        }\n      }\n    }\n    if (this.expressions) {\n      for (let i = 0; i < this.expressions.length; i++) {\n        this.expressions[i].File = replace(this.expressions[i].File, `expressions[${i}].File`);\n      }\n    }\n  }\n}\napplyMixins(Cubism4ModelSettings, [CubismModelSettingsJson]);\nclass Cubism4MotionManager extends MotionManager {\n  constructor(settings, options) {\n    var _a;\n    super(settings, options);\n    this.groups = { idle: \"Idle\" };\n    this.motionDataType = \"json\";\n    this.queueManager = new CubismMotionQueueManager();\n    this.definitions = (_a = settings.motions) != null ? _a : {};\n    this.eyeBlinkIds = settings.getEyeBlinkParameters() || [];\n    this.lipSyncIds = settings.getLipSyncParameters() || [];\n    this.init(options);\n  }\n  init(options) {\n    super.init(options);\n    if (this.settings.expressions) {\n      this.expressionManager = new Cubism4ExpressionManager(this.settings, options);\n    }\n    this.queueManager.setEventCallback((caller, eventValue, customData) => {\n      this.emit(\"motion:\" + eventValue);\n    });\n  }\n  isFinished() {\n    return this.queueManager.isFinished();\n  }\n  _startMotion(motion, onFinish) {\n    motion.setFinishedMotionHandler(onFinish);\n    this.queueManager.stopAllMotions();\n    return this.queueManager.startMotion(motion, false, performance.now());\n  }\n  _stopAllMotions() {\n    this.queueManager.stopAllMotions();\n  }\n  createMotion(data, group, definition) {\n    const motion = CubismMotion.create(data);\n    const json = new CubismMotionJson(data);\n    const defaultFadingDuration = (group === this.groups.idle ? config.idleMotionFadingDuration : config.motionFadingDuration) / 1e3;\n    if (json.getMotionFadeInTime() === void 0) {\n      motion.setFadeInTime(definition.FadeInTime > 0 ? definition.FadeInTime : defaultFadingDuration);\n    }\n    if (json.getMotionFadeOutTime() === void 0) {\n      motion.setFadeOutTime(definition.FadeOutTime > 0 ? definition.FadeOutTime : defaultFadingDuration);\n    }\n    motion.setEffectIds(this.eyeBlinkIds, this.lipSyncIds);\n    return motion;\n  }\n  getMotionFile(definition) {\n    return definition.File;\n  }\n  getMotionName(definition) {\n    return definition.File;\n  }\n  getSoundFile(definition) {\n    return definition.Sound;\n  }\n  updateParameters(model, now) {\n    return this.queueManager.doUpdateMotion(model, now);\n  }\n  destroy() {\n    super.destroy();\n    this.queueManager.release();\n    this.queueManager = void 0;\n  }\n}\nconst tempMatrix = new CubismMatrix44();\nclass Cubism4InternalModel extends InternalModel {\n  constructor(coreModel, settings, options) {\n    super();\n    this.lipSync = true;\n    this.breath = CubismBreath.create();\n    this.renderer = new CubismRenderer_WebGL();\n    this.idParamAngleX = ParamAngleX;\n    this.idParamAngleY = ParamAngleY;\n    this.idParamAngleZ = ParamAngleZ;\n    this.idParamEyeBallX = ParamEyeBallX;\n    this.idParamEyeBallY = ParamEyeBallY;\n    this.idParamBodyAngleX = ParamBodyAngleX;\n    this.idParamBreath = ParamBreath;\n    this.pixelsPerUnit = 1;\n    this.centeringTransform = new Matrix();\n    this.coreModel = coreModel;\n    this.settings = settings;\n    this.motionManager = new Cubism4MotionManager(settings, options);\n    this.init();\n  }\n  init() {\n    var _a;\n    super.init();\n    if (((_a = this.settings.getEyeBlinkParameters()) == null ? void 0 : _a.length) > 0) {\n      this.eyeBlink = CubismEyeBlink.create(this.settings);\n    }\n    this.breath.setParameters([\n      new BreathParameterData(this.idParamAngleX, 0, 15, 6.5345, 0.5),\n      new BreathParameterData(this.idParamAngleY, 0, 8, 3.5345, 0.5),\n      new BreathParameterData(this.idParamAngleZ, 0, 10, 5.5345, 0.5),\n      new BreathParameterData(this.idParamBodyAngleX, 0, 4, 15.5345, 0.5),\n      new BreathParameterData(this.idParamBreath, 0, 0.5, 3.2345, 0.5)\n    ]);\n    this.renderer.initialize(this.coreModel);\n    this.renderer.setIsPremultipliedAlpha(true);\n  }\n  getSize() {\n    return [this.coreModel.getModel().canvasinfo.CanvasWidth, this.coreModel.getModel().canvasinfo.CanvasHeight];\n  }\n  getLayout() {\n    const layout = {};\n    if (this.settings.layout) {\n      for (const key of Object.keys(this.settings.layout)) {\n        const commonKey = key.charAt(0).toLowerCase() + key.slice(1);\n        layout[commonKey] = this.settings.layout[key];\n      }\n    }\n    return layout;\n  }\n  setupLayout() {\n    super.setupLayout();\n    this.pixelsPerUnit = this.coreModel.getModel().canvasinfo.PixelsPerUnit;\n    this.centeringTransform.scale(this.pixelsPerUnit, this.pixelsPerUnit).translate(this.originalWidth / 2, this.originalHeight / 2);\n  }\n  updateWebGLContext(gl, glContextID) {\n    this.renderer.firstDraw = true;\n    this.renderer._bufferData = {\n      vertex: null,\n      uv: null,\n      index: null\n    };\n    this.renderer.startUp(gl);\n    this.renderer._clippingManager._currentFrameNo = glContextID;\n    this.renderer._clippingManager._maskTexture = void 0;\n    CubismShader_WebGL.getInstance()._shaderSets = [];\n  }\n  bindTexture(index, texture) {\n    this.renderer.bindTexture(index, texture);\n  }\n  getHitAreaDefs() {\n    var _a, _b;\n    return (_b = (_a = this.settings.hitAreas) == null ? void 0 : _a.map((hitArea) => ({\n      id: hitArea.Id,\n      name: hitArea.Name,\n      index: this.coreModel.getDrawableIndex(hitArea.Id)\n    }))) != null ? _b : [];\n  }\n  getDrawableIDs() {\n    return this.coreModel.getDrawableIds();\n  }\n  getDrawableIndex(id) {\n    return this.coreModel.getDrawableIndex(id);\n  }\n  getDrawableVertices(drawIndex) {\n    if (typeof drawIndex === \"string\") {\n      drawIndex = this.coreModel.getDrawableIndex(drawIndex);\n      if (drawIndex === -1)\n        throw new TypeError(\"Unable to find drawable ID: \" + drawIndex);\n    }\n    const arr = this.coreModel.getDrawableVertices(drawIndex).slice();\n    for (let i = 0; i < arr.length; i += 2) {\n      arr[i] = arr[i] * this.pixelsPerUnit + this.originalWidth / 2;\n      arr[i + 1] = -arr[i + 1] * this.pixelsPerUnit + this.originalHeight / 2;\n    }\n    return arr;\n  }\n  updateTransform(transform) {\n    this.drawingMatrix.copyFrom(this.centeringTransform).prepend(this.localTransform).prepend(transform);\n  }\n  update(dt, now) {\n    var _a, _b, _c, _d;\n    super.update(dt, now);\n    dt /= 1e3;\n    now /= 1e3;\n    const model = this.coreModel;\n    this.emit(\"beforeMotionUpdate\");\n    const motionUpdated = this.motionManager.update(this.coreModel, now);\n    this.emit(\"afterMotionUpdate\");\n    model.saveParameters();\n    (_a = this.motionManager.expressionManager) == null ? void 0 : _a.update(model, now);\n    if (!motionUpdated) {\n      (_b = this.eyeBlink) == null ? void 0 : _b.updateParameters(model, dt);\n    }\n    this.updateFocus();\n    this.updateNaturalMovements(dt * 1e3, now * 1e3);\n    (_c = this.physics) == null ? void 0 : _c.evaluate(model, dt);\n    (_d = this.pose) == null ? void 0 : _d.updateParameters(model, dt);\n    this.emit(\"beforeModelUpdate\");\n    model.update();\n    model.loadParameters();\n  }\n  updateFocus() {\n    this.coreModel.addParameterValueById(this.idParamEyeBallX, this.focusController.x);\n    this.coreModel.addParameterValueById(this.idParamEyeBallY, this.focusController.y);\n    this.coreModel.addParameterValueById(this.idParamAngleX, this.focusController.x * 30);\n    this.coreModel.addParameterValueById(this.idParamAngleY, this.focusController.y * 30);\n    this.coreModel.addParameterValueById(this.idParamAngleZ, this.focusController.x * this.focusController.y * -30);\n    this.coreModel.addParameterValueById(this.idParamBodyAngleX, this.focusController.x * 10);\n  }\n  updateNaturalMovements(dt, now) {\n    var _a;\n    (_a = this.breath) == null ? void 0 : _a.updateParameters(this.coreModel, dt / 1e3);\n  }\n  draw(gl) {\n    const matrix = this.drawingMatrix;\n    const array = tempMatrix.getArray();\n    array[0] = matrix.a;\n    array[1] = matrix.b;\n    array[4] = -matrix.c;\n    array[5] = -matrix.d;\n    array[12] = matrix.tx;\n    array[13] = matrix.ty;\n    this.renderer.setMvpMatrix(tempMatrix);\n    this.renderer.setRenderState(gl.getParameter(gl.FRAMEBUFFER_BINDING), this.viewport);\n    this.renderer.drawModel();\n  }\n  destroy() {\n    super.destroy();\n    this.renderer.release();\n    this.coreModel.release();\n    this.renderer = void 0;\n    this.coreModel = void 0;\n  }\n}\nlet startupPromise;\nlet startupRetries = 20;\nfunction cubism4Ready() {\n  if (CubismFramework.isStarted()) {\n    return Promise.resolve();\n  }\n  startupPromise != null ? startupPromise : startupPromise = new Promise((resolve, reject) => {\n    function startUpWithRetry() {\n      try {\n        startUpCubism4();\n        resolve();\n      } catch (e) {\n        startupRetries--;\n        if (startupRetries < 0) {\n          const err = new Error(\"Failed to start up Cubism 4 framework.\");\n          err.cause = e;\n          reject(err);\n          return;\n        }\n        logger.log(\"Cubism4\", \"Startup failed, retrying 10ms later...\");\n        setTimeout(startUpWithRetry, 10);\n      }\n    }\n    startUpWithRetry();\n  });\n  return startupPromise;\n}\nfunction startUpCubism4(options) {\n  options = Object.assign({\n    logFunction: console.log,\n    loggingLevel: LogLevel.LogLevel_Verbose\n  }, options);\n  CubismFramework.startUp(options);\n  CubismFramework.initialize();\n}\nLive2DFactory.registerRuntime({\n  version: 4,\n  ready: cubism4Ready,\n  test(source) {\n    return source instanceof Cubism4ModelSettings || Cubism4ModelSettings.isValidJSON(source);\n  },\n  isValidMoc(modelData) {\n    if (modelData.byteLength < 4) {\n      return false;\n    }\n    const view = new Int8Array(modelData, 0, 4);\n    return String.fromCharCode(...view) === \"MOC3\";\n  },\n  createModelSettings(json) {\n    return new Cubism4ModelSettings(json);\n  },\n  createCoreModel(data) {\n    const moc = CubismMoc.create(data);\n    try {\n      const model = moc.createModel();\n      model.__moc = moc;\n      return model;\n    } catch (e) {\n      try {\n        moc.release();\n      } catch (ignored) {\n      }\n      throw e;\n    }\n  },\n  createInternalModel(coreModel, settings, options) {\n    const model = new Cubism4InternalModel(coreModel, settings, options);\n    const coreModelWithMoc = coreModel;\n    if (coreModelWithMoc.__moc) {\n      model.__moc = coreModelWithMoc.__moc;\n      delete coreModelWithMoc.__moc;\n      model.once(\"destroy\", releaseMoc);\n    }\n    return model;\n  },\n  createPhysics(coreModel, data) {\n    return CubismPhysics.create(data);\n  },\n  createPose(coreModel, data) {\n    return CubismPose.create(data);\n  }\n});\nfunction releaseMoc() {\n  var _a;\n  (_a = this.__moc) == null ? void 0 : _a.release();\n}\nexport { ACubismMotion, BreathParameterData, CSM_ASSERT, Constant, Cubism4ExpressionManager, Cubism4InternalModel, Cubism4ModelSettings, Cubism4MotionManager, CubismBlendMode, CubismBreath, CubismClippingContext, CubismClippingManager_WebGL, CubismConfig, CubismDebug, CubismExpressionMotion, CubismEyeBlink, CubismFramework, CubismLogDebug, CubismLogError, CubismLogInfo, CubismLogVerbose, CubismLogWarning, CubismMath, CubismMatrix44, CubismMoc, CubismModel, CubismModelSettingsJson, CubismModelUserData, CubismModelUserDataJson, CubismMotion, CubismMotionCurve, CubismMotionCurveTarget, CubismMotionData, CubismMotionEvent, CubismMotionJson, CubismMotionManager, CubismMotionPoint, CubismMotionQueueEntry, CubismMotionQueueManager, CubismMotionSegment, CubismMotionSegmentType, CubismPhysics, CubismPhysicsInput, CubismPhysicsJson, CubismPhysicsOutput, CubismPhysicsParticle, CubismPhysicsRig, CubismPhysicsSource, CubismPhysicsSubRig, CubismPhysicsTargetType, CubismPose, CubismRenderTextureResource, CubismRenderer, CubismRenderer_WebGL, CubismShader_WebGL, CubismTextureColor, CubismVector2, EvaluationOptionFlag, ExpressionBlendType, ExpressionManager, EyeState, FileLoader, FocusController, HitAreaBody, HitAreaHead, HitAreaPrefix, InteractionMixin, InternalModel, InvalidMotionQueueEntryHandleValue, LOGICAL_HEIGHT, LOGICAL_WIDTH, Live2DFactory, Live2DLoader, Live2DModel, Live2DTransform, LogLevel, ModelSettings, MotionManager, MotionPreloadStrategy, MotionPriority, MotionState, Options, ParamAngleX, ParamAngleY, ParamAngleZ, ParamArmLA, ParamArmLB, ParamArmRA, ParamArmRB, ParamBaseX, ParamBaseY, ParamBodyAngleX, ParamBodyAngleY, ParamBodyAngleZ, ParamBreath, ParamBrowLAngle, ParamBrowLForm, ParamBrowLX, ParamBrowLY, ParamBrowRAngle, ParamBrowRForm, ParamBrowRX, ParamBrowRY, ParamBustX, ParamBustY, ParamCheek, ParamEyeBallForm, ParamEyeBallX, ParamEyeBallY, ParamEyeLOpen, ParamEyeLSmile, ParamEyeROpen, ParamEyeRSmile, ParamHairBack, ParamHairFluffy, ParamHairFront, ParamHairSide, ParamHandL, ParamHandR, ParamMouthForm, ParamMouthOpenY, ParamNONE, ParamShoulderY, PartData, PartsArmLPrefix, PartsArmPrefix, PartsArmRPrefix, PartsIdCore, PhysicsJsonEffectiveForces, ShaderNames, SoundManager, VERSION, XHRLoader, ZipLoader, applyMixins, clamp, config, copyArray, copyProperty, csmRect, cubism4Ready, folderName, fragmentShaderSrcMaskInvertedPremultipliedAlpha, fragmentShaderSrcMaskPremultipliedAlpha, fragmentShaderSrcPremultipliedAlpha, fragmentShaderSrcsetupMask, logger, rand, remove, startUpCubism4, vertexShaderSrc, vertexShaderSrcMasked, vertexShaderSrcSetupMask };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}