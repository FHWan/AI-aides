{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, vModelText as _vModelText, withKeys as _withKeys, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"app\"\n};\nconst _hoisted_2 = {\n  ref: \"liveCanvas\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" 自定义ref=\\\"liveCanvas\\\"： \"), _createElementVNode(\"canvas\", _hoisted_2, null, 512 /* NEED_PATCH */), _createCommentVNode(\" 添加一个文本输入框，用于用户输入问题 \"), _withDirectives(_createElementVNode(\"textarea\", {\n    class: \"transparent-textarea\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.userQuestion = $event),\n    placeholder: \"请输入文本...\",\n    onKeydown: _cache[1] || (_cache[1] = _withKeys((...args) => _ctx.askQuestion && _ctx.askQuestion(...args), [\"enter\"]))\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, _ctx.userQuestion]]), _createCommentVNode(\" 添加一个文本框用于显示AI的回复 \"), _withDirectives(_createElementVNode(\"textarea\", {\n    class: \"response-textarea\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => _ctx.aiResponse = $event),\n    placeholder: \"AI的回复...\",\n    readonly: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.aiResponse]])]);\n}","map":{"version":3,"names":["class","ref","_createElementBlock","_hoisted_1","_createCommentVNode","_createElementVNode","_hoisted_2","_cache","$event","_ctx","userQuestion","placeholder","onKeydown","_withKeys","args","askQuestion","aiResponse","readonly"],"sources":["/home/fan/docker_image/live2d/demo/src/App.vue"],"sourcesContent":["<script>\n//以下需要引入：\nimport * as PIXI from 'pixi.js';\nimport {Live2DModel} from 'pixi-live2d-display/cubism4';\nwindow.PIXI = PIXI; // 为了pixi-live2d-display内部调用\nlet app; // 为了存储pixi实例\nlet model; // 为了存储live2d实例\n \nexport default {\n//需要引入：\n  async mounted() {\n    app = new PIXI.Application({\n      view: this.$refs.liveCanvas,//ref组件绑定，liveCanvas为下文自定义的\n      autoStart: true,            //是否开启自动播放\n      resizeTo: window,           \n      backgroundAlpha: 0,  //透明度\n    });\n \n    // 这里是放live2d资源的地方，直接相对路径引用即可\n    //model = await Live2DModel.from('/dujiaoshou_4/dujiaoshou_4.model3.json');\n    //model = await Live2DModel.from('/huonululu_5/huonululu_5.model3.json');\n    //model = await Live2DModel.from('/lingbo/lingbo.model3.json');\n    model = await Live2DModel.from('/ulk/ulk.model3.json');\n\n    app.stage.addChild(model);\n    model.x = 500;\n    model.y = 100;\n    model.scale.set(1); // 调整缩放比例,0.1-0.2整体比较合适\n  },\n//需要引入\n  beforeUnmount() {\n    model?.destroy();\n    app?.destroy();\n  }\n}\n</script>\n<template>\n  <div class=\"app\">\n    <!-- 自定义ref=\"liveCanvas\"： -->\n    <canvas ref=\"liveCanvas\"></canvas>\n\n    <!-- 添加一个文本输入框，用于用户输入问题 -->\n    <textarea class=\"transparent-textarea\" v-model=\"userQuestion\" placeholder=\"请输入文本...\" @keydown.enter=\"askQuestion\"></textarea>\n\n    <!-- 添加一个文本框用于显示AI的回复 -->\n    <textarea class=\"response-textarea\" v-model=\"aiResponse\" placeholder=\"AI的回复...\" readonly></textarea>\n\n  </div>\n</template>\n \n<style scoped>\n.app{\n  background-image: url('/public/picture/behind02.jpg'); /* 设置背景图片 */\n  background-size: cover; /* 确保图片覆盖整个容器 */\n  background-position: center; /* 居中显示图片 */\n  background-attachment: fixed; /* 背景固定 */\n  height: 100vh; /* 高度设置为视口高度，确保背景覆盖整个页面 */\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: relative; /* 使得可以相对定位其他元素 */\n}\n\n.transparent-textarea {\n  position: absolute;\n  bottom: 7%; /* 设置距离页面底部的距离，使其在中间偏下 */\n  left: 50%; /* 水平居中 */\n  transform: translateX(-50%); /* 调整以确保输入框完全居中 */\n  padding: 10px;\n  font-size: 20px;\n  background-color: rgba(255, 255, 255, 0.8); /* 背景透明度50% */\n  border: 1px solid rgba(0, 0, 0, 0.3); /* 边框稍微透明 */\n  border-radius: 5px; /* 圆角 */\n  color: #333; /* 文本颜色 */\n  width: 60%; /* 宽度可以根据需要调整 */\n  min-height: 100px; /* 设置最小高度，使文本框足够高以容纳多行文本 */\n  resize: none; /* 禁止用户调整文本框大小 */\n  overflow: auto; /* 内容溢出时显示滚动条 */\n  white-space: pre-wrap; /* 保证文本在遇到长单词或链接时自动换行 */\n}\n\n.response-textarea {\n  position: absolute;\n  right: 7%; /* 设置距离页面右侧的距离 */\n  top: 20%; /* 设置距离页面顶部的距离 */\n  padding: 10px;\n  font-size: 20px;\n  background-color: rgba(255, 255, 255, 0.8); /* 背景透明度50% */\n  border: 1px solid rgba(0, 0, 0, 0.3); /* 边框稍微透明 */\n  border-radius: 5px; /* 圆角 */\n  color: #333; /* 文本颜色 */\n  width: 20%; /* 宽度可以根据需要调整 */\n  min-height: 100px; /* 设置最小高度 */\n  resize: none; /* 禁止用户调整文本框大小 */\n  overflow: auto; /* 内容溢出时显示滚动条 */\n  white-space: pre-wrap; /* 保证文本在遇到长单词或链接时自动换行 */\n}\n\nheader {\n  line-height: 1.5;\n}\n</style>\n"],"mappings":";;EAqCOA,KAAK,EAAC;AAAK;;EAENC,GAAG,EAAC;AAAY;;uBAF1BC,mBAAA,CAUM,OAVNC,UAUM,GATJC,mBAAA,4BAA6B,EAC7BC,mBAAA,CAAkC,UAAlCC,UAAkC,+BAElCF,mBAAA,wBAA2B,E,gBAC3BC,mBAAA,CAA6H;IAAnHL,KAAK,EAAC,sBAAsB;IA1C1C,uBAAAO,MAAA,QAAAA,MAAA,MAAAC,MAAA,IA0CoDC,IAAA,CAAAC,YAAY,GAAAF,MAAA;IAAEG,WAAW,EAAC,UAAU;IAAEC,SAAO,EAAAL,MAAA,QAAAA,MAAA,MA1CjGM,SAAA,KAAAC,IAAA,KA0CyGL,IAAA,CAAAM,WAAA,IAAAN,IAAA,CAAAM,WAAA,IAAAD,IAAA,CAAW;iEAAhEL,IAAA,CAAAC,YAAY,E,GAE5DN,mBAAA,sBAAyB,E,gBACzBC,mBAAA,CAAoG;IAA1FL,KAAK,EAAC,mBAAmB;IA7CvC,uBAAAO,MAAA,QAAAA,MAAA,MAAAC,MAAA,IA6CiDC,IAAA,CAAAO,UAAU,GAAAR,MAAA;IAAEG,WAAW,EAAC,UAAU;IAACM,QAAQ,EAAR;iDAAnCR,IAAA,CAAAO,UAAU,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}